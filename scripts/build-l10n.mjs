// The toml looks like that:
// # The translation are partially generated by copilot

// [description]
// en = "An integrated language service for Typst"
// zh-CN = "Typst 的集成语言服务"

import * as fs from "fs";

function translate(input, output) {
  const data = fs.readFileSync(input, "utf-8");
  const lines = data
    .split("\n")
    .map((line) => line.trim())
    .filter((line) => !line.startsWith("#") && line.length > 0);

  const translations = {};
  let key = "";
  for (let line of lines) {
    if (line.startsWith("[")) {
      key = line.substring(1, line.length - 1);
    } else {
      const equalIndex = line.indexOf("=");
      const lang = line.substring(0, equalIndex).trim();
      const value = line.substring(equalIndex + 1).trim();

      translations[lang] ||= {};
      translations[lang][key] = JSON.parse(value);
    }
  }

  const langs = Object.keys(translations);
  const langEn = langs.find((lang) => lang === "en");
  if (!langEn) {
    console.error("en is required");
    return;
  }

  const langRest = langs.filter((lang) => lang !== "en");

  const langEnPath = `${output}/package.nls.json`;
  const langEnData = translations["en"];
  fs.writeFileSync(langEnPath, JSON.stringify(langEnData, null, 2));

  for (let lang of langRest) {
    const langPath = `${output}/package.nls.${lang}.json`;
    const langData = translations[lang];
    fs.writeFileSync(langPath, JSON.stringify(langData, null, 2));
  }
}

translate("locales/tinymist-vscode.toml", "editors/vscode");
