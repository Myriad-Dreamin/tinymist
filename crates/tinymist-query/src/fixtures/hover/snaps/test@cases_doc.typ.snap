---
source: crates/tinymist-query/src/hover.rs
expression: "JsonRepr::new_redacted(result, &REDACT_LOC)"
input_file: crates/tinymist-query/src/fixtures/hover/cases_doc.typ
snapshot_kind: text
---
{
 "contents": "```typc\nlet cases(\n  ..children: content,\n  delim: array | none | str | symbol = (\"{\", \"}\"),\n  gap: relative = 0% + 0.2em,\n  reverse: bool = false,\n);\n```\n\n---\n\nA case distinction.\n\nContent across different branches can be aligned with the `&` symbol.\n\n# Example\n```typ\n$ f(x, y) := cases(\n  1 \"if\" (x dot y)/2 <= 0,\n  2 \"if\" x \"is even\",\n  3 \"if\" x in NN,\n  4 \"else\",\n) $\n```\n\n---\n\nA case distinction.\n\nContent across different branches can be aligned with the `&` symbol.\n\n# Example\n```typ\n$ f(x, y) := cases(\n  1 \"if\" (x dot y)/2 <= 0,\n  2 \"if\" x \"is even\",\n  3 \"if\" x in NN,\n  4 \"else\",\n) $\n```\n\n# Rest Parameters\n\n## children\n\n```typc\ntype: content\n```\n\n\n\n# Named Parameters\n\n## delim\n\n```typc\ntype: array | none | str | symbol\n```\n\n\n\n## gap (named)\n\n```typc\ntype: relative\n```\n\n\n\n## reverse (named)\n\n```typc\ntype: bool\n```\n\n\n\n---\n\n[Open docs](https://typst.app/docs/reference/math/cases/)",
 "range": "0:20:0:25"
}
