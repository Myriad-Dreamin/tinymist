---
source: crates/tinymist-query/src/hover.rs
expression: content
input_file: crates/tinymist-query/src/fixtures/hover/cases_doc.typ
---
Range: 0:20:0:25

```typc
let cases(
  ..children: content,
  delim: array | none | str | symbol = ("{", "}"),
  gap: relative = 0% + 0.2em,
  reverse: bool = false,
);
```


======


A case distinction.

Content across different branches can be aligned with the `&` symbol.

# Example
```typ
$ f(x, y) := cases(
  1 "if" (x dot y)/2 <= 0,
  2 "if" x "is even",
  3 "if" x in NN,
  4 "else",
) $
```


======


A case distinction.

Content across different branches can be aligned with the `&` symbol.

# Example
```typ
$ f(x, y) := cases(
  1 "if" (x dot y)/2 <= 0,
  2 "if" x "is even",
  3 "if" x in NN,
  4 "else",
) $
```

# Rest Parameters

## children

```typc
type: content
```



# Named Parameters

## delim

```typc
type: array | none | str | symbol
```



## gap (named)

```typc
type: relative
```



## reverse (named)

```typc
type: bool
```




======


[Open docs](https://typst.app/docs/reference/math/cases/)
