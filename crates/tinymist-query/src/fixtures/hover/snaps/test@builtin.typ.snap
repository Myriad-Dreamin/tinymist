---
source: crates/tinymist-query/src/hover.rs
expression: "JsonRepr::new_redacted(result, &REDACT_LOC)"
input_file: crates/tinymist-query/src/fixtures/hover/builtin.typ
---
{
 "contents": "```typc\nlet table(\n  ..children: content,\n  align: alignment | array | auto | function = auto,\n  column-gutter: array | auto | length | type = (),\n  columns: array | auto | length | type = (),\n  fill: color = none,\n  gutter: array | auto | length | type = (),\n  inset: inset = 0% + 5pt,\n  row-gutter: array | auto | length | type = (),\n  rows: array | auto | length | type = (),\n  stroke: stroke = 1pt + black,\n);\n```\n\n---\nA table of items.\n\nTables are used to arrange content in cells. Cells can contain arbitrary\ncontent, including multiple paragraphs and are specified in row-major order.\nFor a hands-on explanation of all the ways you can use and customize tables\nin Typst, check out the [table guide](https://typst.app/docs/guides/table-guide/).\n\nBecause tables are just grids with different defaults for some cell\nproperties (notably `stroke` and `inset`), refer to the [grid\ndocumentation](https://typst.app/docs/reference/layout/grid/) for more information on how to size the table tracks\nand specify the cell appearance properties.\n\nIf you are unsure whether you should be using a table or a grid, consider\nwhether the content you are arranging semantically belongs together as a set\nof related data points or similar or whether you are just want to enhance\nyour presentation by arranging unrelated content in a grid. In the former\ncase, a table is the right choice, while in the latter case, a grid is more\nappropriate. Furthermore, Typst will annotate its output in the future such\nthat screenreaders will announce content in `table` as tabular while a\ngrid's content will be announced no different than multiple content blocks\nin the document flow.\n\nNote that, to override a particular cell's properties or apply show rules on\ntable cells, you can use the [`table.cell`](https://typst.app/docs/reference/model/table/#definitions-cell) element. See its\ndocumentation for more information.\n\nAlthough the `table` and the `grid` share most properties, set and show\nrules on one of them do not affect the other.\n\nTo give a table a caption and make it [referenceable](https://typst.app/docs/reference/model/ref/), put it into a\n[figure].\n\n# Example\n\nThe example below demonstrates some of the most common table options.\n```typ\n#table(\n  columns: (1fr, auto, auto),\n  inset: 10pt,\n  align: horizon,\n  table.header(\n    [], [*Volume*], [*Parameters*],\n  ),\n  image(\"cylinder.svg\"),\n  $ pi h (D^2 - d^2) / 4 $,\n  [\n    $h$: height \\\n    $D$: outer radius \\\n    $d$: inner radius\n  ],\n  image(\"tetrahedron.svg\"),\n  $ sqrt(2) / 12 a^3 $,\n  [$a$: edge length]\n)\n```\n\nMuch like with grids, you can use [`table.cell`](https://typst.app/docs/reference/model/table/#definitions-cell) to customize\nthe appearance and the position of each cell.\n\n```typ\n>>> #set page(width: auto)\n>>> #set text(font: \"IBM Plex Sans\")\n>>> #let gray = rgb(\"#565565\")\n>>>\n#set table(\n  stroke: none,\n  gutter: 0.2em,\n  fill: (x, y) =>\n    if x == 0 or y == 0 { gray },\n  inset: (right: 1.5em),\n)\n\n#show table.cell: it => {\n  if it.x == 0 or it.y == 0 {\n    set text(white)\n    strong(it)\n  } else if it.body == [] {\n    // Replace empty cells with 'N/A'\n    pad(..it.inset)[_N/A_]\n  } else {\n    it\n  }\n}\n\n#let a = table.cell(\n  fill: green.lighten(60%),\n)[A]\n#let b = table.cell(\n  fill: aqua.lighten(60%),\n)[B]\n\n#table(\n  columns: 4,\n  [], [Exam 1], [Exam 2], [Exam 3],\n\n  [John], [], a, [],\n  [Mary], [], a, a,\n  [Robert], b, a, b,\n)\n```\n\n## Parameters\n\n@named `align` — How to align the cells' content.\n\nThis can either be a single alignment, an array of alignments\n(corresponding to each column) or a function that returns an alignment.\nThe function receives the cells' column and row indices, starting from\nzero. If set to `auto`, the outer alignment is used.\n\n```typ\n#table(\n  columns: 3,\n  align: (left, center, right),\n  [Hello], [Hello], [Hello],\n  [A], [B], [C],\n)\n```\n\n@named `column-gutter` — The gaps between columns. Takes precedence over `gutter`. See the\n[grid documentation](https://typst.app/docs/reference/layout/grid/) for more information on gutters.\n\n@named `columns` — The column sizes. See the [grid documentation](https://typst.app/docs/reference/layout/grid/) for more\ninformation on track sizing.\n\n@named `fill` — How to fill the cells.\n\nThis can be a color or a function that returns a color. The function\nreceives the cells' column and row indices, starting from zero. This can\nbe used to implement striped tables.\n\n```typ\n#table(\n  fill: (x, _) =>\n    if calc.odd(x) { luma(240) }\n    else { white },\n  align: (x, y) =>\n    if y == 0 { center }\n    else if x == 0 { left }\n    else { right },\n  columns: 4,\n  [], [*Q1*], [*Q2*], [*Q3*],\n  [Revenue:], [1000 €], [2000 €], [3000 €],\n  [Expenses:], [500 €], [1000 €], [1500 €],\n  [Profit:], [500 €], [1000 €], [1500 €],\n)\n```\n\n@named `gutter` — The gaps between rows and columns. This is a shorthand for setting\n`column-gutter` and `row-gutter` to the same value. See the [grid\ndocumentation](https://typst.app/docs/reference/layout/grid/) for more information on gutters.\n\n@named `inset` — How much to pad the cells' content.\n\n```typ\n#table(\n  inset: 10pt,\n  [Hello],\n  [World],\n)\n\n#table(\n  columns: 2,\n  inset: (\n    x: 20pt,\n    y: 10pt,\n  ),\n  [Hello],\n  [World],\n)\n```\n\n@named `row-gutter` — The gaps between rows. Takes precedence over `gutter`. See the\n[grid documentation](https://typst.app/docs/reference/layout/grid/) for more information on gutters.\n\n@named `rows` — The row sizes. See the [grid documentation](https://typst.app/docs/reference/layout/grid/) for more information\non track sizing.\n\n@named `stroke` — How to [stroke] the cells.\n\nStrokes can be disabled by setting this to `none`.\n\nIf it is necessary to place lines which can cross spacing between cells\nproduced by the `gutter` option, or to override the stroke between\nmultiple specific cells, consider specifying one or more of\n[`table.hline`](https://typst.app/docs/reference/model/table/#definitions-hline) and [`table.vline`](https://typst.app/docs/reference/model/table/#definitions-vline)\nalongside your table cells.\n\nSee the [grid documentation](https://typst.app/docs/reference/layout/grid/#parameters-stroke) for more information on\nstrokes.\n\n@rest `children` — The contents of the table cells, plus any extra table lines specified\nwith the [`table.hline`](https://typst.app/docs/reference/model/table/#definitions-hline) and\n[`table.vline`](https://typst.app/docs/reference/model/table/#definitions-vline) elements.\n\n---\n[Open docs](https://typst.app/docs/reference/model/table/)",
 "range": "0:20:0:25"
}
