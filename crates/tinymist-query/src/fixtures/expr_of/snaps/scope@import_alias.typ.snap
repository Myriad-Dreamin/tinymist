---
source: crates/tinymist-query/src/analysis.rs
expression: "snap.join(\"\\n\")"
input_file: crates/tinymist-query/src/fixtures/expr_of/import_alias.typ
---
= resolves
PathStem(base)@8..18 in \s0.typ -> Module(base)@0..0 in \base.typ, root Module(base)@0..0 in \base.typ, val: None
IdentRef(base)@20..24 in \s0.typ -> PathStem(base)@8..18 in \s0.typ, root Module(base)@0..0 in \base.typ, val: None
IdentRef(base)@52..56 in \s0.typ -> PathStem(base)@8..18 in \s0.typ, root Module(base)@0..0 in \base.typ, val: None
ModuleAlias(foo)@47..50 in \s0.typ -> Module(base)@0..0 in \base.typ, root Module(base)@0..0 in \base.typ, val: None
IdentRef(foo)@59..62 in \s0.typ -> ModuleAlias(foo)@47..50 in \s0.typ, root Module(base)@0..0 in \base.typ, val: None
= exports
base -> Ref(RefExpr { decl: PathStem(base), step: Some(Decl(Module(base))), root: Some(Decl(Module(base))), val: None })
foo -> Ref(RefExpr { decl: ModuleAlias(foo), step: Some(Decl(Module(base))), root: Some(Decl(Module(base))), val: None })
