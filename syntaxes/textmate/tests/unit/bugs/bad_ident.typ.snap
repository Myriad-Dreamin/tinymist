>
>#let true- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#          ^ source.typst meta.expr.let.typst
#           ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#             ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#              ^ source.typst punctuation.terminator.statement.typst
>#let auto- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#          ^ source.typst meta.expr.let.typst
#           ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#             ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#              ^ source.typst punctuation.terminator.statement.typst
>#let any- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#         ^ source.typst meta.expr.let.typst
#          ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#            ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#             ^ source.typst punctuation.terminator.statement.typst
>#let none- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#          ^ source.typst meta.expr.let.typst
#           ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#             ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#              ^ source.typst punctuation.terminator.statement.typst
>#let false- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#           ^ source.typst meta.expr.let.typst
#            ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#              ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#               ^ source.typst punctuation.terminator.statement.typst
>#let true- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#          ^ source.typst meta.expr.let.typst
#           ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#             ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#              ^ source.typst punctuation.terminator.statement.typst
>#let break- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#           ^ source.typst meta.expr.let.typst
#            ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#              ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#               ^ source.typst punctuation.terminator.statement.typst
>#let continue- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#              ^ source.typst meta.expr.let.typst
#               ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#                 ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                  ^ source.typst punctuation.terminator.statement.typst
>#let and- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#         ^ source.typst meta.expr.let.typst
#          ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#            ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#             ^ source.typst punctuation.terminator.statement.typst
>#let or- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#        ^ source.typst meta.expr.let.typst
#         ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#           ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#            ^ source.typst punctuation.terminator.statement.typst
>#let not- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#         ^ source.typst meta.expr.let.typst
#          ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#            ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#             ^ source.typst punctuation.terminator.statement.typst
>#let return- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#            ^ source.typst meta.expr.let.typst
#             ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#               ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                ^ source.typst punctuation.terminator.statement.typst
>#let as- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#        ^ source.typst meta.expr.let.typst
#         ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#           ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#            ^ source.typst punctuation.terminator.statement.typst
>#let in- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#        ^ source.typst meta.expr.let.typst
#         ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#           ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#            ^ source.typst punctuation.terminator.statement.typst
>#let include- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#             ^ source.typst meta.expr.let.typst
#              ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#                ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                 ^ source.typst punctuation.terminator.statement.typst
>#let import- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#            ^ source.typst meta.expr.let.typst
#             ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#               ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                ^ source.typst punctuation.terminator.statement.typst
>#let let- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#         ^ source.typst meta.expr.let.typst
#          ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#            ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#             ^ source.typst punctuation.terminator.statement.typst
>#let else- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#          ^ source.typst meta.expr.let.typst
#           ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#             ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#              ^ source.typst punctuation.terminator.statement.typst
>#let if- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#        ^ source.typst meta.expr.let.typst
#         ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#           ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#            ^ source.typst punctuation.terminator.statement.typst
>#let for- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#         ^ source.typst meta.expr.let.typst
#          ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#            ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#             ^ source.typst punctuation.terminator.statement.typst
>#let while- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#           ^ source.typst meta.expr.let.typst
#            ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#              ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#               ^ source.typst punctuation.terminator.statement.typst
>#let context- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#             ^ source.typst meta.expr.let.typst
#              ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#                ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                 ^ source.typst punctuation.terminator.statement.typst
>#let set- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#         ^ source.typst meta.expr.let.typst
#          ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#            ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#             ^ source.typst punctuation.terminator.statement.typst
>#let show- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#          ^ source.typst meta.expr.let.typst
#           ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#             ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#              ^ source.typst punctuation.terminator.statement.typst
>
>#let x-true- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#            ^ source.typst meta.expr.let.typst
#             ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#               ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                ^ source.typst punctuation.terminator.statement.typst
>#let x-auto- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#            ^ source.typst meta.expr.let.typst
#             ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#               ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                ^ source.typst punctuation.terminator.statement.typst
>#let x-any- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#           ^ source.typst meta.expr.let.typst
#            ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#              ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#               ^ source.typst punctuation.terminator.statement.typst
>#let x-none- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#            ^ source.typst meta.expr.let.typst
#             ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#               ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                ^ source.typst punctuation.terminator.statement.typst
>#let x-false- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#             ^ source.typst meta.expr.let.typst
#              ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#                ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                 ^ source.typst punctuation.terminator.statement.typst
>#let x-true- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#            ^ source.typst meta.expr.let.typst
#             ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#               ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                ^ source.typst punctuation.terminator.statement.typst
>#let x-break- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#             ^ source.typst meta.expr.let.typst
#              ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#                ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                 ^ source.typst punctuation.terminator.statement.typst
>#let x-continue- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#                ^ source.typst meta.expr.let.typst
#                 ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#                   ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                    ^ source.typst punctuation.terminator.statement.typst
>#let x-and- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#           ^ source.typst meta.expr.let.typst
#            ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#              ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#               ^ source.typst punctuation.terminator.statement.typst
>#let x-or- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#          ^ source.typst meta.expr.let.typst
#           ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#             ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#              ^ source.typst punctuation.terminator.statement.typst
>#let x-not- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#           ^ source.typst meta.expr.let.typst
#            ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#              ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#               ^ source.typst punctuation.terminator.statement.typst
>#let x-return- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#              ^ source.typst meta.expr.let.typst
#               ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#                 ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                  ^ source.typst punctuation.terminator.statement.typst
>#let x-as- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#          ^ source.typst meta.expr.let.typst
#           ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#             ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#              ^ source.typst punctuation.terminator.statement.typst
>#let x-in- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#          ^ source.typst meta.expr.let.typst
#           ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#             ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#              ^ source.typst punctuation.terminator.statement.typst
>#let x-include- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#               ^ source.typst meta.expr.let.typst
#                ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#                  ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                   ^ source.typst punctuation.terminator.statement.typst
>#let x-import- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#              ^ source.typst meta.expr.let.typst
#               ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#                 ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                  ^ source.typst punctuation.terminator.statement.typst
>#let x-let- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#           ^ source.typst meta.expr.let.typst
#            ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#              ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#               ^ source.typst punctuation.terminator.statement.typst
>#let x-else- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#            ^ source.typst meta.expr.let.typst
#             ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#               ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                ^ source.typst punctuation.terminator.statement.typst
>#let x-if- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#          ^ source.typst meta.expr.let.typst
#           ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#             ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#              ^ source.typst punctuation.terminator.statement.typst
>#let x-for- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#           ^ source.typst meta.expr.let.typst
#            ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#              ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#               ^ source.typst punctuation.terminator.statement.typst
>#let x-while- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#             ^ source.typst meta.expr.let.typst
#              ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#                ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                 ^ source.typst punctuation.terminator.statement.typst
>#let x-context- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#               ^ source.typst meta.expr.let.typst
#                ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#                  ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                   ^ source.typst punctuation.terminator.statement.typst
>#let x-set- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#           ^ source.typst meta.expr.let.typst
#            ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#              ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#               ^ source.typst punctuation.terminator.statement.typst
>#let x-show- = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#            ^ source.typst meta.expr.let.typst
#             ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#               ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                ^ source.typst punctuation.terminator.statement.typst
>
>#let show-() = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^ source.typst meta.expr.let.typst entity.name.function.typst
#          ^ source.typst meta.expr.let.typst meta.brace.round.typst
#           ^ source.typst meta.expr.let.typst meta.brace.round.typst
#            ^ source.typst meta.expr.let.typst
#             ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#               ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                ^ source.typst punctuation.terminator.statement.typst
>#let show-(show-) = 1;
#^ source.typst keyword.control.hash.typst
# ^^^ source.typst meta.expr.let.typst storage.type.typst
#    ^ source.typst meta.expr.let.typst
#     ^^^^^ source.typst meta.expr.let.typst entity.name.function.typst
#          ^ source.typst meta.expr.let.typst meta.brace.round.typst
#           ^^^^^ source.typst meta.expr.let.typst variable.other.readwrite.typst
#                ^ source.typst meta.expr.let.typst meta.brace.round.typst
#                 ^ source.typst meta.expr.let.typst
#                  ^^ source.typst meta.expr.let.typst keyword.operator.assignment.typst
#                    ^ source.typst meta.expr.let.typst constant.numeric.integer.typst
#                     ^ source.typst punctuation.terminator.statement.typst
>
>#(1pt-1pt)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^ source.typst constant.numeric.length.typst
#     ^ source.typst
#      ^^^ source.typst constant.numeric.length.typst
#         ^ source.typst meta.brace.round.typst
>#(1rad-1rad)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^ source.typst constant.numeric.angle.typst
#      ^ source.typst
#       ^^^^ source.typst constant.numeric.angle.typst
#           ^ source.typst meta.brace.round.typst
>#(true-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^ source.typst variable.other.readwrite.typst
#       ^ source.typst meta.brace.round.typst
>#(auto-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^ source.typst variable.other.readwrite.typst
#       ^ source.typst meta.brace.round.typst
>#(any-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^ source.typst variable.other.readwrite.typst
#      ^ source.typst meta.brace.round.typst
>#(none-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^ source.typst variable.other.readwrite.typst
#       ^ source.typst meta.brace.round.typst
>#(false-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^ source.typst variable.other.readwrite.typst
#        ^ source.typst meta.brace.round.typst
>#(true-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^ source.typst variable.other.readwrite.typst
#       ^ source.typst meta.brace.round.typst
>#(break-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^ source.typst variable.other.readwrite.typst
#        ^ source.typst meta.brace.round.typst
>#(continue-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^^^^ source.typst variable.other.readwrite.typst
#           ^ source.typst meta.brace.round.typst
>#(and-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^ source.typst variable.other.readwrite.typst
#      ^ source.typst meta.brace.round.typst
>#(or-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^ source.typst variable.other.readwrite.typst
#     ^ source.typst meta.brace.round.typst
>#(not-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^ source.typst variable.other.readwrite.typst
#      ^ source.typst meta.brace.round.typst
>#(return-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^^ source.typst variable.other.readwrite.typst
#         ^ source.typst meta.brace.round.typst
>#(as-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^ source.typst variable.other.readwrite.typst
#     ^ source.typst meta.brace.round.typst
>#(in-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^ source.typst variable.other.readwrite.typst
#     ^ source.typst meta.brace.round.typst
>#(include-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^^^ source.typst variable.other.readwrite.typst
#          ^ source.typst meta.brace.round.typst
>#(import-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^^ source.typst variable.other.readwrite.typst
#         ^ source.typst meta.brace.round.typst
>#(let-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^ source.typst variable.other.readwrite.typst
#      ^ source.typst meta.brace.round.typst
>#(else-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^ source.typst variable.other.readwrite.typst
#       ^ source.typst meta.brace.round.typst
>#(if-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^ source.typst variable.other.readwrite.typst
#     ^ source.typst meta.brace.round.typst
>#(for-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^ source.typst variable.other.readwrite.typst
#      ^ source.typst meta.brace.round.typst
>#(while-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^ source.typst variable.other.readwrite.typst
#        ^ source.typst meta.brace.round.typst
>#(context-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^^^ source.typst variable.other.readwrite.typst
#          ^ source.typst meta.brace.round.typst
>#(set-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^ source.typst variable.other.readwrite.typst
#      ^ source.typst meta.brace.round.typst
>#(show-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^ source.typst variable.other.readwrite.typst
#       ^ source.typst meta.brace.round.typst
>
>#(x-true-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^^ source.typst variable.other.readwrite.typst
#         ^ source.typst meta.brace.round.typst
>#(x-auto-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^^ source.typst variable.other.readwrite.typst
#         ^ source.typst meta.brace.round.typst
>#(x-any-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^ source.typst variable.other.readwrite.typst
#        ^ source.typst meta.brace.round.typst
>#(x-none-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^^ source.typst variable.other.readwrite.typst
#         ^ source.typst meta.brace.round.typst
>#(x-false-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^^^ source.typst variable.other.readwrite.typst
#          ^ source.typst meta.brace.round.typst
>#(x-true-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^^ source.typst variable.other.readwrite.typst
#         ^ source.typst meta.brace.round.typst
>#(x-break-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^^^ source.typst variable.other.readwrite.typst
#          ^ source.typst meta.brace.round.typst
>#(x-continue-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^^^^^^ source.typst variable.other.readwrite.typst
#             ^ source.typst meta.brace.round.typst
>#(x-and-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^ source.typst variable.other.readwrite.typst
#        ^ source.typst meta.brace.round.typst
>#(x-or-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^ source.typst variable.other.readwrite.typst
#       ^ source.typst meta.brace.round.typst
>#(x-not-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^ source.typst variable.other.readwrite.typst
#        ^ source.typst meta.brace.round.typst
>#(x-return-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^^^^ source.typst variable.other.readwrite.typst
#           ^ source.typst meta.brace.round.typst
>#(x-as-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^ source.typst variable.other.readwrite.typst
#       ^ source.typst meta.brace.round.typst
>#(x-in-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^ source.typst variable.other.readwrite.typst
#       ^ source.typst meta.brace.round.typst
>#(x-include-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^^^^^ source.typst variable.other.readwrite.typst
#            ^ source.typst meta.brace.round.typst
>#(x-import-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^^^^ source.typst variable.other.readwrite.typst
#           ^ source.typst meta.brace.round.typst
>#(x-let-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^ source.typst variable.other.readwrite.typst
#        ^ source.typst meta.brace.round.typst
>#(x-else-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^^ source.typst variable.other.readwrite.typst
#         ^ source.typst meta.brace.round.typst
>#(x-if-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^ source.typst variable.other.readwrite.typst
#       ^ source.typst meta.brace.round.typst
>#(x-for-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^ source.typst variable.other.readwrite.typst
#        ^ source.typst meta.brace.round.typst
>#(x-while-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^^^ source.typst variable.other.readwrite.typst
#          ^ source.typst meta.brace.round.typst
>#(x-context-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^^^^^ source.typst variable.other.readwrite.typst
#            ^ source.typst meta.brace.round.typst
>#(x-set-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^ source.typst variable.other.readwrite.typst
#        ^ source.typst meta.brace.round.typst
>#(x-show-)
#^ source.typst keyword.control.hash.typst
# ^ source.typst meta.brace.round.typst
#  ^^^^^^^ source.typst variable.other.readwrite.typst
#         ^ source.typst meta.brace.round.typst
>
>A and B
#^^^^^^^^ source.typst