$schema: 'https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json'
scopeName: source.typst
name: typst
patterns:
  - include: '#markup'
repository:
  pattern-binding-items:
    patterns:
      # rest binding
      - match: '(\.\.)(\b[\p{XID_Start}_][\p{XID_Continue}_-]*)?'
        # debugging
        # name: block.pattern-binding.typst
        captures:
          '1':
            name: keyword.operator.range.typst
          '2':
            name: variable.other.readwrite.typst
      # recursive binding
      - begin: '\('
        end: '\)'
        beginCaptures:
          '0':
            name: meta.brace.round.typst
        endCaptures:
          '0':
            name: meta.brace.round.typst
        patterns:
          - include: '#pattern-binding-items'
      # parameter binding
      - include: '#primitiveTypes'
      - include: '#identifier'
      - name: punctuation.separator.colon.typst
        match: ':'
      - name: punctuation.separator.comma.typst
        match: ','
  literal-content:
    patterns:
      - include: '#expression'
      - name: punctuation.separator.colon.typst
        match: ':'
      - name: punctuation.separator.comma.typst
        match: ','
  code-params:
    patterns:
      - name: meta.parameter.binding.typst
        include: '#pattern-binding-items'
      - name: punctuation.separator.colon.typst
        match: ':'
      - name: punctuation.separator.comma.typst
        match: ','
  code:
    patterns:
      - include: '#common'
      - name: comment.line.double-slash.typst
        begin: //
        end: |+

        beginCaptures:
          '0':
            name: punctuation.definition.comment.typst
      - name: punctuation.separator.colon.typst
        match: ';'
      - include: '#expression'
  constants:
    patterns:
      - name: constant.language.none.typst
        match: (?<!\)|\]|\})\bnone\b
      - name: constant.language.auto.typst
        match: (?<!\)|\]|\})\bauto\b
      - name: constant.language.boolean.typst
        match: (?<!\)|\]|\})\b(true|false)\b
      - name: constant.numeric.length.typst
        match: '(?<!\)|\]|\})\b(\d*)?\.?\d+([eE][+-]?\d+)?(mm|pt|cm|in|em)\b'
      - name: constant.numeric.angle.typst
        match: '(?<!\)|\]|\})\b(\d*)?\.?\d+([eE][+-]?\d+)?(rad|deg)\b'
      - name: constant.numeric.percentage.typst
        match: '(?<!\)|\]|\})\b(\d*)?\.?\d+([eE][+-]?\d+)?%'
      - name: constant.numeric.fr.typst
        match: '(?<!\)|\]|\})\b(\d*)?\.?\d+([eE][+-]?\d+)?fr'
      - name: constant.numeric.integer.typst
        match: (?<!\)|\]|\})\b\d+\b
      - name: constant.numeric.float.typst
        match: '(?<!\)|\]|\})\b(\d*)?\.?\d+([eE][+-]?\d+)?\b'
      - include: '#stringLiteral'
      - include: '#markupMath'
  blockRaw:
    patterns:
      - include: '#blockRawGeneral'
