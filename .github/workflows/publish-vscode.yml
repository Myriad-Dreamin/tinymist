name: tinymist::vscode::pubish
on:
  workflow_call:

env:
  RUSTFLAGS: '-Dwarnings'
  CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
  CARGO_TARGET_ARM_UNKNOWN_LINUX_GNUEABIHF_LINKER: arm-linux-gnueabihf-gcc

jobs:
  release:
    runs-on: ubuntu-latest
    if: success() && startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: '{tinymist,typst-preview}-*'
      - name: Display structure of downloaded files
        run: ls -R artifacts
      - uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "artifacts/*/*"
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true

  publish:
    runs-on: ubuntu-latest
    env:
      isRelease: 'false'
      isNightly: 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/download-artifact@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'
      - name: Install deps
        run: yarn install
      - name: Deploy to VS Code Marketplace (Nightly)
        if: fromJson(env.isNightly)
        run: npx @vscode/vsce publish --pat ${{ secrets.MARKETPLACE_TOKEN }} --skip-duplicate --pre-release --packagePath $(find . -type f -iname 'tinymist-*.vsix')
      - name: Deploy to OpenVSX (Nightly)
        if: fromJson(env.isNightly)
        run: npx ovsx publish --skip-duplicate --pre-release --packagePath $(find . -type f -iname 'tinymist-*.vsix')
        env:
          OVSX_PAT: ${{ secrets.OPENVSX_ACCESS_TOKEN }}
