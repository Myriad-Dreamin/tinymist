name: tinymist::crates::publish
on:
  workflow_dispatch:

env:
  RUSTFLAGS: '-Dwarnings'

jobs:

  publish-crates:
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            platform: linux
            arch: x64
            regular_build: 'true'
    name: build 
    runs-on: ${{ matrix.os }}
    env:
      target: ${{ matrix.platform }}-${{ matrix.arch }}
      CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
    steps:
      - name: "Print Env"
        run: |
          echo "Running on ${{ matrix.os }}"
          echo "Target: ${{ env.target }}"
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      # https://github.com/dtolnay/rust-toolchain/issues/133
      # https://github.com/rust-lang/rustup/issues/3635
      # Only needed if your action will run two or more rust
      # commands concurrently, otherwise rustup will lazily 
      # install your rust-toolchain.toml when needed:
      - name: 'Install from rust-toolchain.toml'
        run: rustup show
      - name: Install llvm
        run: |
          sudo apt-get update
          sudo apt-get install llvm
      # - name: Run rust-cache
      #   uses: Swatinem/rust-cache@v2
      - name: Publish crates
        run: |
          cargo publish --no-verify -p sync-ls || true
          cargo publish --no-verify -p typst-shim || true
          cargo publish --no-verify -p tinymist-derive || true
          cargo publish --no-verify -p tinymist-analysis || true
          cargo publish --no-verify -p tinymist-std || true
          cargo publish --no-verify -p tinymist-vfs || true
          cargo publish --no-verify -p tinymist-world || true
          cargo publish --no-verify -p tinymist-task || true
          cargo publish --no-verify -p tinymist-project || true
          cargo publish --no-verify -p typlite || true
          cargo publish --no-verify -p crityp || true
      - name: Verifies crate health (Optional)
        run: |
          cargo publish --dry-run -p sync-ls
          cargo publish --dry-run -p typst-shim
          cargo publish --dry-run -p tinymist-derive
          cargo publish --dry-run -p tinymist-analysis
          cargo publish --dry-run -p tinymist-std
          cargo publish --dry-run -p tinymist-vfs
          cargo publish --dry-run -p tinymist-world
          cargo publish --dry-run -p tinymist-task --features no-content-hint
          cargo publish --dry-run -p tinymist-project --features no-content-hint
          cargo publish --dry-run -p typlite
          cargo publish --dry-run -p crityp
