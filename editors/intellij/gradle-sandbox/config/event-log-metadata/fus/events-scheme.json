{
  "groups" : [ {
    "id" : "JavaFindUsages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "classesUsages" : [ "{enum#boolean}" ],
        "derivedInterfaces" : [ "{enum#boolean}" ],
        "derivedUsages" : [ "{enum#boolean}" ],
        "fieldUsages" : [ "{enum#boolean}" ],
        "implementingClasses" : [ "{enum#boolean}" ],
        "implementingMethods" : [ "{enum#boolean}" ],
        "implicitCalls" : [ "{enum#boolean}" ],
        "includeInherited" : [ "{enum#boolean}" ],
        "includeOverload" : [ "{enum#boolean}" ],
        "methodUsages" : [ "{enum#boolean}" ],
        "overridingMethods" : [ "{enum#boolean}" ],
        "readAccess" : [ "{enum#boolean}" ],
        "searchScope" : [ "{enum:All_Places|Project_Files|Project_and_Libraries|Project_Production_Files|Project_Test_Files|Scratches_and_Consoles|Recently_Viewed_Files|Recently_Changed_Files|Open_Files|Current_File]}" ],
        "textOccurrences" : [ "{enum#boolean}" ],
        "usages" : [ "{enum#boolean}" ],
        "writeAccess" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "FindClassUsages", "FindMethodUsages", "FindPackageUsages", "FindThrowUsages", "FindVariableUsages" ]
      }
    }
  }, {
    "id" : "accessibility",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:screen.reader.detected|screen.reader.support.enabled|screen.reader.support.enabled.in.vmoptions}" ]
    }
  }, {
    "id" : "actions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "28"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action_id" : [ "{util#action}", "{util#rider_backend_action}", "{enum#action}", "{enum:com.intellij.microservices.ui.diagrams.model.MsDiagramDataModel$showNotificationIfNoDataFound$1}" ],
        "additional.same_window" : [ "{enum#boolean}" ],
        "additional.toolwindow" : [ "{util#toolwindow}" ],
        "class" : [ "{util#class_name}", "{enum:com.intellij.microservices.ui.diagrams.actions.MsShowWholeProjectDiagramAction|com.intellij.microservices.ui.diagrams.model.MsDiagramDataModel$showNotificationIfNoDataFound$1}" ],
        "context_menu" : [ "{enum#boolean}" ],
        "current_file" : [ "{util#current_file}" ],
        "dumb" : [ "{enum#boolean}" ],
        "dumb_start" : [ "{enum#boolean}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "enable" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "isSubmenu" : [ "{enum#boolean}" ],
        "lang" : [ "{util#lang}" ],
        "lookup_active" : [ "{enum#boolean}" ],
        "parent" : [ "{util#class_name}", "{enum:LineMarkerActionWrapper|TreeActionWrapper|MyTreeActionWrapper}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "result.error" : [ "{util#class_name}" ],
        "result.type" : [ "{enum:ignored|performed|failed|unknown}" ],
        "size" : [ "{regexp#integer}" ],
        "start_time" : [ "{regexp#integer}" ],
        "toolwindow" : [ "{util#toolwindow}" ]
      },
      "enums" : {
        "__event_id" : [ "action.invoked", "custom.action.invoked", "action.finished", "action.updated", "action.group.expanded" ]
      }
    }
  }, {
    "id" : "actions.gtdu",
    "builds" : [ ],
    "versions" : [ {
      "from" : "53"
    } ],
    "rules" : {
      "event_id" : [ "{enum:performed|navigated}" ],
      "event_data" : {
        "choice" : [ "{enum:SU|GTD}" ],
        "context_menu" : [ "{enum#boolean}" ],
        "current_file" : [ "{util#current_file}" ],
        "input_event" : [ "{util#shortcut}" ],
        "navigation_provider_class" : [ "{util#class_name}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "actions.on.save",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:reformat.code|rearrange.code|optimize.imports|cleanup.code}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "actions.runAnything",
    "builds" : [ {
      "from" : "192.5249"
    } ],
    "rules" : {
      "event_id" : [ "{enum:click.more|execute}" ],
      "event_data" : {
        "group" : [ "{enum#__group}", "{util#class_name}" ],
        "list" : [ "{enum:RunAnythingMainListModel|RunAnythingHelpListModel|third.party}", "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "with_alt" : [ "{enum#boolean}" ],
        "with_shift" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__group" : [ "Bundler", "rails_generators", "Gradle_tasks", "npm_scripts", "Maven_goals", "rvm_use", "rake", "rbenv_shell", "General", "Recent", "Run_configurations", "Gradle", "Maven", "npm", "Python", "Recent_projects", "ruby", "Grunt", "third.party" ]
      }
    }
  }, {
    "id" : "amper",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:platforms|project}" ],
      "event_data" : {
        "amper_module_files" : [ "{regexp#integer}" ],
        "amper_project" : [ "{enum#boolean}" ],
        "amper_template_files" : [ "{regexp#integer}" ],
        "gradle_files" : [ "{regexp#integer}" ],
        "gradle_interop" : [ "{enum#boolean}" ],
        "module.platform_name" : [ "{enum:js|jvm|wasm|android|linuxX64|macosX64|macosArm64|iosSimulatorArm64|iosX64|linuxArm64|watchosSimulatorArm64|watchosX64|watchosArm32|watchosArm64|tvosSimulatorArm64|tvosX64|tvosArm64|iosArm64|androidNativeArm32|androidNativeArm64|androidNativeX86|androidNativeX64|mingwX64|watchosDeviceArm64}", "{enum#__module_platform_name}" ],
        "module.platform_percent" : [ "{regexp#integer}" ],
        "module.type" : [ "{enum:app|lib}" ]
      },
      "enums" : {
        "__module_platform_name" : [ "macosarm64", "androidnativex86", "androidnativex64", "tvossimulatorarm64", "androidnativearm64", "linuxx64", "watchossimulatorarm64", "androidnativearm32", "watchosdevicearm64", "watchosx64", "tvosx64", "mingwx64", "iosarm64", "iosx64", "watchosarm64", "watchosarm32", "macosx64", "iossimulatorarm64", "tvosarm64", "linuxarm64" ]
      }
    }
  }, {
    "id" : "analysis.pwa",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "size_bytes" : [ "{regexp#integer}" ],
        "status" : [ "{enum:Success|InterruptedByUser|Exception}" ]
      },
      "enums" : {
        "__event_id" : [ "index.metadata", "index.state", "index.tasks", "update.started", "update.finished", "scan.started", "scan.finished" ]
      }
    }
  }, {
    "id" : "analysis.pwa.counter",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:scan.started|scan.finished|update.started|update.finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "status" : [ "{enum:Success|InterruptedByUser|Exception}" ]
      }
    }
  }, {
    "id" : "appearance.file.colors",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:editor.tabs|file.colors|project.view}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "aqua.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "4"
    } ],
    "rules" : {
      "event_id" : [ "{enum:selection.updated|url.updated|locator.evaluated}" ],
      "event_data" : {
        "isAqua" : [ "{enum#boolean}" ],
        "locatorType" : [ "{enum:XPATH|CSS|TAG_WITH_CLASSES|ID|NAME|TEXT|DATA|ARIA_LABEL}" ],
        "source" : [ "{enum:NONE|BROWSER|PAGE_STRUCTURE|EVALUATOR|CODE_EDITOR|CACHE}", "{enum:intention|navigation}" ]
      }
    }
  }, {
    "id" : "automated.edit.prediction",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:suggestion.accepted|edit.detected|prediction.finished|prediction}" ],
      "event_data" : {
        "detection_mechanism" : [ "{enum:document_changed}", "{enum:DOCUMENT_CHANGED|RENAME_REFACTORING}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "edit_length" : [ "{regexp#integer}" ],
        "edit_prediction.explanation_provider" : [ "{util#class_name}" ],
        "edit_prediction.max_grouped_edit_length" : [ "{regexp#integer}" ],
        "edit_prediction.synthesizer" : [ "{util#class_name}" ],
        "edit_prediction.tokenizer" : [ "{util#class_name}" ],
        "lang" : [ "{util#lang}" ],
        "location_prediction.location_pred_algorithm" : [ "{enum:levenshtein}" ],
        "location_prediction.similarity_threshold" : [ "{regexp#float}" ],
        "num_suggestions" : [ "{regexp#integer}" ],
        "orig_psi_element" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "prediction_delay_ms" : [ "{regexp#integer}" ],
        "prev_pred_running" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "balloons",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:balloon.shown}" ],
      "event_data" : {
        "balloon_id" : [ "{enum#__balloon_id}", "{enum:cwm.contols.hidden}", "{enum:cwm.host.builtinserver.port_bind_error}", "{enum:cwm.controls.hidden}", "{enum:cwm.telephony.dialog.hidden}" ]
      },
      "enums" : {
        "__balloon_id" : [ "cwm.telephony.text_message", "cwm.host.session.nmins_left", "cwm.telephony.participant_enabled_video", "cwm.host.connection.version_mismatch_error", "cwm.host.action.getjoinlink.link_copied", "cwm.permissions.accept_decline", "cwm.host.action.copyjoinlink.link_copied", "cwm.following.started", "cwm.host.terminal.shared.status", "cwm.host.connection.user_left", "cwm.telephony.customize_audio_video_settings", "cwm.host.connection.user_joined", "cwm.following.request", "cwm.guest.telephony.voice_chat_enabled", "cwm.guest.following.stopped" ]
      }
    }
  }, {
    "id" : "bdt.connection",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:bdt.connection.load.error|rest.client.responded.with.error}" ],
      "event_data" : {
        "anonymous" : [ "{enum#boolean}" ],
        "group_id" : [ "{enum:DataProcessingPlatforms|FSConnectionGroup|MonitoringConnectionGroup|NotebookConnectionGroup|StorageConnectionGroup|OtherConnectionGroup|RfsLocalConnectionGroup|EmrConnectionGroup|HdfsJavaConnectionGroup|S3ConnectionGroup|MinioConnectionGroup|LinodeConnectionGroup|DigitalOceanSpacesGroup|AlibabaOssConnectionGroup|YandexConnectionGroup|GCSConnectionGroup|AzureConnectionGroup|HadoopMonitoringConnections|KafkaConnections|SparkMonitoringConnections|SftpConnections|ZeppelinConnections|HiveMetastoreConnections|glueConnections|FlinkConnections|TencentCosConnectionGroup|UNKNOWN}", "{enum:DataprocConnectionGroup}", "{enum:BrokerConnectionGroup}", "{enum:ArbitraryClusterConnectionGroup}" ],
        "is_enabled" : [ "{enum#boolean}" ],
        "is_oauth_redirect_to_self" : [ "{enum#boolean}" ],
        "is_per_project" : [ "{enum#boolean}" ],
        "oauth_request_params" : [ "{enum:response_type|redirect_uri|state|client_id|scope|code_challenge|code_challenge_method|request_uri|UNKNOWN}" ],
        "reason" : [ "{enum:CNF|UNKNOWN|MIXED}" ],
        "redirect_count" : [ "{regexp#integer}" ],
        "response" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "bdt.stateviewer",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:variables.refreshed|interacted|settings.opened}" ],
      "event_data" : {
        "group" : [ "{enum:spark|pyspark|errors|sql|unknown}" ]
      }
    }
  }, {
    "id" : "bigdatatools.connections",
    "builds" : [ ],
    "versions" : [ {
      "from" : "6"
    } ],
    "rules" : {
      "event_id" : [ "{enum:configured}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "is_depend" : [ "{enum#boolean}" ],
        "per_project" : [ "{enum#boolean}" ],
        "type" : [ "{enum:LOCAL|SFTP|YARN|HIVE|GLUE|EMR|DATAPROC|TENCENT_COS|HDFS|GCS|YANDEX|ALIBABA_OSS|AZURE|MINIO|LINODE|DOS|S3|KAFKA|ZEPPELIN|SPARK_MONITORING|FLINK|DATABRICKS|TEST}", "{enum:SPARK_SUBMIT_CLUSTER}", "{enum:ARBITRARY_CLUSTER}" ]
      }
    }
  }, {
    "id" : "bigdatatools.hadoop.monitoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "new_time" : [ "{regexp:-?\\d+(\\+)?}", "{enum:-1|5000|10000|30000}" ],
        "size" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "app.attempts.received", "app.kill", "apps.received", "log.file.opened", "log.list.opened", "node.labels.received", "nodes.received", "opened.in.browser", "opened.in.separate.tab", "refresh.click", "refresh.time.changed" ]
      }
    }
  }, {
    "id" : "bigdatatools.hadoop.monitoring.configurations",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:connection.configured}" ],
      "event_data" : {
        "basic_auth_enabled" : [ "{enum#boolean}" ],
        "connection_secured" : [ "{enum#boolean}" ],
        "enabled" : [ "{enum#boolean}" ],
        "per_project" : [ "{enum#boolean}" ],
        "proxy_type" : [ "{enum:DISABLED|GLOBAL|CUSTOM}" ],
        "server_is_local" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "bigdatatools.kafka",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "key_type" : [ "{enum#__key_type}", "{enum:PROTOBUF_REGISTRY|JSON_REGISTRY|AVRO_REGISTRY}", "{enum:SCHEMA_REGISTRY}", "{enum:AVRO_CUSTOM|PROTOBUF_CUSTOM}", "{enum:INTEGER}" ],
        "value_type" : [ "{enum#__key_type}", "{enum:PROTOBUF_REGISTRY|JSON_REGISTRY|AVRO_REGISTRY}", "{enum:SCHEMA_REGISTRY}", "{enum:AVRO_CUSTOM|PROTOBUF_CUSTOM}", "{enum:INTEGER}" ]
      },
      "enums" : {
        "__event_id" : [ "open.producer", "open.consumer", "open.producer.and.consumer", "topic.created", "topic.deleted", "topic.clear", "partitions.clear", "produced.keyvalue", "consumed.keyvalue", "consumer.group.change.offsets", "consumer.group.delete" ],
        "__key_type" : [ "JSON", "STRING", "LONG", "DOUBLE", "FLOAT", "BASE64", "NULL" ]
      }
    }
  }, {
    "id" : "bigdatatools.rfs.configurations",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "6"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "auth_type" : [ "{enum:secret_key|auth_chain}", "{enum:username_and_key|connection_string|sas_token}" ],
        "config_type" : [ "{enum:uri|config_directory}" ],
        "custom_base_dir" : [ "{enum#boolean}" ],
        "custom_endpoint" : [ "{enum#boolean}" ],
        "custom_root" : [ "{enum#boolean}" ],
        "custom_username" : [ "{enum#boolean}" ],
        "enabled" : [ "{enum#boolean}" ],
        "fs_type" : [ "{enum#__fs_type}" ],
        "id" : [ "GS@GCSConnectionGroup@-{regexp#integer}", "GS@GCSConnectionGroup@{regexp#integer}", "Google Cloud Storage@GCSConnectionGroup@-{regexp#integer}", "Google Cloud Storage@GCSConnectionGroup@{regexp#integer}", "HDFS@HdfsJavaConnectionGroup@{regexp#integer}", "HDFS@HdfsJavaConnectionGroup@-{regexp#integer}", "Local@RfsLocalConnectionGroup@{regexp#integer}", "Local@RfsLocalConnectionGroup@-{regexp#integer}", "AWS_S3@S3ConnectionGroup@{regexp#integer}", "AWS_S3@S3ConnectionGroup@-{regexp#integer}", "Azure@AzureConnectionGroup@{regexp#integer}", "Azure@AzureConnectionGroup@-{regexp#integer}", "Minio@MinioConnectionGroup@{regexp#integer}", "Minio@MinioConnectionGroup@-{regexp#integer}", "Linode@LinodeConnectionGroup@{regexp#integer}", "Linode@LinodeConnectionGroup@-{regexp#integer}", "Digital_Ocean_Spaces@DigitalOceanSpacesGroup@{regexp#integer}", "Digital_Ocean_Spaces@DigitalOceanSpacesGroup@-{regexp#integer}", "Yandex Object Storage@YandexConnectionGroup@-{regexp#integer}", "Yandex Object Storage@YandexConnectionGroup@{regexp#integer}", "SFTP connection@SftpConnections@-{regexp#integer}", "SFTP connection@SftpConnections@{regexp#integer}", "Alibaba OSS@AlibabaOssConnectionGroup@-{regexp#integer}", "Alibaba OSS@AlibabaOssConnectionGroup@{regexp#integer}" ],
        "kerberos" : [ "{enum#boolean}" ],
        "non_ms_endpoint" : [ "{enum#boolean}" ],
        "per_project" : [ "{enum#boolean}" ],
        "type" : [ "{enum:LOCAL|SFTP|HDFS|S3|MINIO|LINODE|DIGITAL_SPACES_OCEAN|YANDEX_STORAGE|ALIBABA_OSS|TENCENT_COS|AZURE|GOOGLE_CLOUD_STORAGE|ZEPPELIN|HIVE_METASTORE|GLUE|EMR|DATABRICKS|SPARK_MONITORING|HADOOP_MONITORING|FLINK|KAFKA|TEST}", "{enum:DATAPROC}" ]
      },
      "enums" : {
        "__event_id" : [ "gcs.connection.configured", "hdfs.connection.configured", "local.connection.configured", "s3.connection.configured", "azure.connection.configured", "minio.connection.configured", "linode.connection.configured", "do_spaces.connection.configured", "yandexstorage.connection.configured", "sftp.connection.configured", "alibaba.connection.configured", "rfs.connection.configured" ],
        "__fs_type" : [ "s3a", "file", "hdfs", "webhdfs", "unknown", "swebhdfs", "sftp", "ftp" ]
      }
    }
  }, {
    "id" : "bigdatatools.rfs.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "activity_source" : [ "{enum:DRIVER_CREATION|TIMER|ZEPPELIN_RECONNECT|AWAIT_MONITORING|ARBITRARY_CLUSTER_DEPENDENT|EMR_DEPENDENT|DATABRICKS_DELEGATE|ACTION|TEST_ACTION|SFTP_CLONE_SUDO|DATAPROC_DEPENDENT|EMR_DEPENDENT_USER|DATABRICKS_DELEGATE_USER|TEST}" ],
        "connection_driver_types" : [ "{enum#__connection_driver_types}", "{enum:DATAPROC}", "{enum:SPARK_SUBMIT_CLUSTER}", "{enum:ARBITRARY_CLUSTER}" ],
        "connection_id" : [ "AWS_S3@S3ConnectionGroup@-{regexp#integer}", "AWS_S3@S3ConnectionGroup@{regexp#integer}", "HDFS@HdfsJavaConnectionGroup@{regexp#integer}", "HDFS@HdfsJavaConnectionGroup@-{regexp#integer}", "Local@RfsLocalConnectionGroup@{regexp#integer}", "Local@RfsLocalConnectionGroup@-{regexp#integer}", "GS@GCSConnectionGroup@-{regexp#integer}", "GS@GCSConnectionGroup@{regexp#integer}", "Google Cloud Storage@GCSConnectionGroup@-{regexp#integer}", "Google Cloud Storage@GCSConnectionGroup@{regexp#integer}", "Azure@AzureConnectionGroup@{regexp#integer}", "Azure@AzureConnectionGroup@-{regexp#integer}", "Minio@MinioConnectionGroup@{regexp#integer}", "Minio@MinioConnectionGroup@-{regexp#integer}", "Linode@LinodeConnectionGroup@{regexp#integer}", "Linode@LinodeConnectionGroup@-{regexp#integer}", "Digital_Ocean_Spaces@DigitalOceanSpacesGroup@{regexp#integer}", "Digital_Ocean_Spaces@DigitalOceanSpacesGroup@-{regexp#integer}", "Alibaba OSS@AlibabaOssConnectionGroup@-{regexp#integer}", "Alibaba OSS@AlibabaOssConnectionGroup@{regexp#integer}", "SFTP connection@SftpConnections@-{regexp#integer}", "SFTP connection@SftpConnections@{regexp#integer}", "Yandex Object Storage@YandexConnectionGroup@-{regexp#integer}", "Yandex Object Storage@YandexConnectionGroup@{regexp#integer}" ],
        "connection_ids" : [ "AWS_S3@S3ConnectionGroup@-{regexp#integer}", "AWS_S3@S3ConnectionGroup@{regexp#integer}", "HDFS@HdfsJavaConnectionGroup@{regexp#integer}", "HDFS@HdfsJavaConnectionGroup@-{regexp#integer}", "Local@RfsLocalConnectionGroup@{regexp#integer}", "Local@RfsLocalConnectionGroup@-{regexp#integer}", "GS@GCSConnectionGroup@-{regexp#integer}", "GS@GCSConnectionGroup@{regexp#integer}", "Google Cloud Storage@GCSConnectionGroup@-{regexp#integer}", "Google Cloud Storage@GCSConnectionGroup@{regexp#integer}", "Azure@AzureConnectionGroup@{regexp#integer}", "Azure@AzureConnectionGroup@-{regexp#integer}", "Minio@MinioConnectionGroup@{regexp#integer}", "Minio@MinioConnectionGroup@-{regexp#integer}", "Linode@LinodeConnectionGroup@{regexp#integer}", "Linode@LinodeConnectionGroup@-{regexp#integer}", "Digital_Ocean_Spaces@DigitalOceanSpacesGroup@{regexp#integer}", "Digital_Ocean_Spaces@DigitalOceanSpacesGroup@-{regexp#integer}", "Alibaba OSS@AlibabaOssConnectionGroup@-{regexp#integer}", "Alibaba OSS@AlibabaOssConnectionGroup@{regexp#integer}", "SFTP connection@SftpConnections@-{regexp#integer}", "SFTP connection@SftpConnections@{regexp#integer}", "Yandex Object Storage@YandexConnectionGroup@-{regexp#integer}", "Yandex Object Storage@YandexConnectionGroup@{regexp#integer}" ],
        "contain_directories" : [ "{enum#boolean}" ],
        "contain_files" : [ "{enum#boolean}" ],
        "contains_roots" : [ "{enum#boolean}" ],
        "driver_type" : [ "{enum#__driver_type}", "{enum:LOCAL|SFTP|YARN|HIVE|GLUE|EMR|DATAPROC|ARBITRARY_CLUSTER|TENCENT_COS|HDFS|GCS|YANDEX|ALIBABA_OSS|AZURE|MINIO|LINODE|DOS|S3|KAFKA|ZEPPELIN|SPARK_MONITORING|SPARK_SUBMIT_CLUSTER|FLINK|DATABRICKS|TEST}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "errors_count" : [ "{regexp#integer}" ],
        "exception_class" : [ "{util#class_name}" ],
        "expanded_rows" : [ "{regexp#integer}" ],
        "file_extension" : [ "{enum#__file_extensions}" ],
        "file_extensions" : [ "{enum#__file_extensions}" ],
        "file_size" : [ "{enum#__file_sizes}", "{enum#__file_size}" ],
        "file_sizes" : [ "{enum#__file_sizes}" ],
        "has_meta" : [ "{enum#boolean}" ],
        "is_directory" : [ "{enum#boolean}" ],
        "nodes_count" : [ "{enum#__nodes_count}", "{enum:6-25|51-200|2-5|26-50}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "success" : [ "{enum#boolean}" ],
        "target_connection_id" : [ "AWS_S3@S3ConnectionGroup@-{regexp#integer}", "AWS_S3@S3ConnectionGroup@{regexp#integer}", "HDFS@HdfsJavaConnectionGroup@{regexp#integer}", "HDFS@HdfsJavaConnectionGroup@-{regexp#integer}", "Local@RfsLocalConnectionGroup@{regexp#integer}", "Local@RfsLocalConnectionGroup@-{regexp#integer}", "GS@GCSConnectionGroup@-{regexp#integer}", "GS@GCSConnectionGroup@{regexp#integer}", "Google Cloud Storage@GCSConnectionGroup@-{regexp#integer}", "Google Cloud Storage@GCSConnectionGroup@{regexp#integer}", "Azure@AzureConnectionGroup@{regexp#integer}", "Azure@AzureConnectionGroup@-{regexp#integer}", "Minio@MinioConnectionGroup@{regexp#integer}", "Minio@MinioConnectionGroup@-{regexp#integer}", "Linode@LinodeConnectionGroup@{regexp#integer}", "Linode@LinodeConnectionGroup@-{regexp#integer}", "Digital_Ocean_Spaces@DigitalOceanSpacesGroup@{regexp#integer}", "Digital_Ocean_Spaces@DigitalOceanSpacesGroup@-{regexp#integer}", "Alibaba OSS@AlibabaOssConnectionGroup@-{regexp#integer}", "Alibaba OSS@AlibabaOssConnectionGroup@{regexp#integer}", "SFTP connection@SftpConnections@-{regexp#integer}", "SFTP connection@SftpConnections@{regexp#integer}", "Yandex Object Storage@YandexConnectionGroup@-{regexp#integer}", "Yandex Object Storage@YandexConnectionGroup@{regexp#integer}" ],
        "target_driver_type" : [ "{enum#__target_driver_type}", "{enum:DATAPROC}", "{enum:SPARK_SUBMIT_CLUSTER}", "{enum:ARBITRARY_CLUSTER}" ]
      },
      "enums" : {
        "__connection_driver_types" : [ "s3", "local", "hdfs", "gcs", "sftp", "azure", "linode", "minio", "ceph", "do_spaces", "alibabaOSS", "yandexCloud", "S3", "DATABRICKS", "LINODE", "GOOGLE_CLOUD_STORAGE", "MINIO", "HDFS", "SFTP", "ALIBABA_OSS", "HADOOP_MONITORING", "HIVE_METASTORE", "EMR", "YANDEX_STORAGE", "AZURE", "ZEPPELIN", "GLUE", "TEST", "SPARK_MONITORING", "LOCAL", "KAFKA", "DIGITAL_SPACES_OCEAN", "FLINK", "TENCENT_COS", "HIVE", "YANDEX", "GCS", "DOS", "YARN", "alibaba_OSS" ],
        "__driver_type" : [ "s3", "local", "hdfs", "gcs", "sftp", "azure", "linode", "minio", "ceph", "do_spaces", "alibabaOSS", "yandexCloud", "S3", "DATABRICKS", "LINODE", "GOOGLE_CLOUD_STORAGE", "MINIO", "HDFS", "SFTP", "ALIBABA_OSS", "HADOOP_MONITORING", "HIVE_METASTORE", "EMR", "YANDEX_STORAGE", "AZURE", "ZEPPELIN", "GLUE", "TEST", "SPARK_MONITORING", "LOCAL", "KAFKA", "DIGITAL_SPACES_OCEAN", "FLINK", "TENCENT_COS", "HIVE", "YANDEX", "GCS", "DOS", "YARN" ],
        "__event_id" : [ "action.copy.file.path", "action.delete", "action.mkdir", "action.move", "action.refresh", "action.rename", "action.save.to.disk", "action.show.in.file.manager", "connection.refreshed", "copy.paste", "drag.and.drop", "file.viewer.opened", "panel.refreshed", "rows.expanded", "action.show.file.info", "action.upload.from.disk", "connection.refresh.finished" ],
        "__file_extensions" : [ "csv", "no_extension", "parquet", "orc", "tsv", "json", "sequence", "avro", "unknown" ],
        "__file_size" : [ "RANGE_0_0", "RANGE_100M_1G", "RANGE_1M_10M", "RANGE_10M_100M", "RANGE_1_1K", "RANGE_1K_10K", "RANGE_10K_1M", "RANGE_OVER_1G" ],
        "__file_sizes" : [ "0", "1_1k", "1k_10k", "10k_1m", "1m_10m", "10m_100m", "100m_1g", "over_1g" ],
        "__nodes_count" : [ "1", "2_5", "6_25", "26_50", "51_200", "201_more" ],
        "__target_driver_type" : [ "s3", "hdfs", "local", "gcs", "sftp", "azure", "linode", "minio", "ceph", "do_spaces", "alibabaOSS", "yandexCloud", "S3", "DATABRICKS", "LINODE", "GOOGLE_CLOUD_STORAGE", "MINIO", "HDFS", "SFTP", "ALIBABA_OSS", "HADOOP_MONITORING", "HIVE_METASTORE", "EMR", "YANDEX_STORAGE", "AZURE", "ZEPPELIN", "GLUE", "TEST", "SPARK_MONITORING", "LOCAL", "KAFKA", "DIGITAL_SPACES_OCEAN", "FLINK", "TENCENT_COS", "HIVE", "YANDEX", "GCS", "DOS", "YARN" ]
      }
    }
  }, {
    "id" : "bigdatatools.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "index" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "selected" : [ "{util#class_name}" ],
        "status" : [ "{enum:SUCCESS|VALIDATION_ERROR|ERROR|CANCEL}", "{enum:SUCCESS|ERROR|CANCELED}" ],
        "type" : [ "{enum:LOCAL|SFTP|YARN|HIVE|GLUE|EMR|DATAPROC|ARBITRARY_CLUSTER|TENCENT_COS|HDFS|GCS|YANDEX|ALIBABA_OSS|AZURE|MINIO|LINODE|DOS|S3|KAFKA|ZEPPELIN|SPARK_MONITORING|SPARK_SUBMIT_CLUSTER|FLINK|DATABRICKS|TEST}" ],
        "value" : [ "{enum#boolean}", "{enum:direct|file}", "{enum:DISABLED|GLOBAL|CUSTOM}", "{enum:Explicit uri|Configuration files directory}", "{enum:PLAIN|SCRAM_512|SCRAM_256|KERBEROS}", "{enum:LOCAL|STANDALONE|MESOS|YARN|KUBERNETES|NOMAD}", "{enum:MATCH|START_WITH|CONTAINS|REGEX}", "{enum:Default credential providers chain|Explicit access key and secret key|Profile from credentials file|anonymous}", "{enum:NOT_SPECIFIED|SASL|SSL|AWS_IAM}", "{enum:HTTP|SOCKS}", "{enum:CLIENT|CLUSTER}", "{enum:EMR|DATAPROC|SSH|ADD_SSH|ADD_EMR|ADD_DATAPROC}", "{enum:ARBITRARY_CLUSTER|ADD_ARBITRARY_CLUSTER}", "{enum:confluent|aws_msk}", "{enum:none|confluent|glue}", "{enum:NOT_SPECIFIED|BASIC_AUTH|BEARER}", "{enum:cloud|from_ui|from_properties}", "{enum:2.10|2.11|2.12}", "{enum:KEYTAB|PASSWORD|SUBJECT}" ]
      },
      "enums" : {
        "__event_id" : [ "showVersioning.changed", "urlField.changed", "sshLink.invoke", "brokerPropertiesEditor.changed", "sudoCommand.changed", "classNameField.changed", "brokerSslKeystorePassword.changed", "proxyPasswordField.changed", "isInteractiveField.changed", "region.changed", "propertiesFileField.invoke", "password.changed", "databasePatternField.changed", "nameField.changed", "customEndpoint.changed", "operationTimeout.changed", "targetDirectory.changed", "brokerPropertiesSource.changed", "registryConfluentProxyUrl.changed", "proxyLoginField.changed", "bucketFilter.changed", "test.connection.result", "clusterComboBox.invoke", "secretKey.changed", "workDirectoryField.invoke", "url.changed", "tablePatternField.changed", "sparkHomeField.invoke", "propertiesEditor.changed", "archivesField.changed", "sparkVersion.changed", "brokerSaslPassword.changed", "proxyEnableComboBox.changed", "notificationAfter.changed", "envParamsField.changed", "ssh.status.updated", "endpoint.changed", "brokerSslUseKeystore.changed", "login.changed", "profileConfigPath.changed", "connection.is.enabled.changed", "registryGlueRegistryName.changed", "totalExecutorCoresField.changed", "authTypeChooser.changed", "anonymous.changed", "brokerSaslSecurityProtocol.changed", "brokerAwsIamSecretKey.changed", "useKerberosTicketCache.changed", "registryConfluentSslKeystoreLocation.changed", "proxyUserField.changed", "beforeShellScriptField.changed", "numExecutorsField.changed", "principalField.changed", "brokerSaslMechanism.changed", "proxyHostField.changed", "sslTrustAllCheckBox.changed", "classNameField.invoke", "test.connection.invoke", "rootPath.changed", "brokerAwsIamAccess.changed", "masterField.changed", "brokerSaslUseTicketCache.changed", "targetDirectory.invoke", "clusterManagerField.changed", "executorCoresField.changed", "proxyWorkstation.changed", "driverClassPathField.changed", "sourceTypeChooser.changed", "sparkMonitoringField.changed", "accessKey.changed", "registryConfluentSslKeystorePassword.changed", "connectionString.changed", "useCustomSftpCommand.changed", "basicPass.changed", "customRegion.changed", "regions.changed", "suggestSudo.changed", "sparkPropertiesEditor.changed", "superviseField.changed", "brokerSslTrustStoreLocation.changed", "proxyBasicAuthCheckbox.changed", "artifactArgsField.changed", "brokerMskUrl.changed", "bucketFilterComboBox.changed", "configPathField.changed", "registryConfluentUrl.changed", "sshComponent.changed", "brokerAwsIamProfile.changed", "loadSparkCommand.invoke", "changeAccount.invoke", "jarsField.invoke", "saslPrincipal.changed", "sparkMonitoringComboBox.changed", "username.changed", "registryConfluentBasicPassword.changed", "jaasEntryField.changed", "basicAuthPasswordField.changed", "profileCredentialsPath.changed", "registryConfluentSslTruststorePassword.changed", "brokerSslKeystoreLocation.changed", "brokerConfluentConf.changed", "keytabField.changed", "brokerSaslPrincipal.changed", "connection.apply.invoke", "registryConfluentBasicAuth.changed", "proxyPortField.changed", "registryGlueAuthType.changed", "enableCacheAuthField.changed", "proxyIsDisabledProxy.changed", "connection.cancel.invoke", "connection.per.project.changed", "isBucketSourceFromWorkspace.changed", "brokerSaslUsername.changed", "registryGlueProfile.changed", "bucketFilterByRegion.changed", "systemNotificationEnabled.changed", "enableZtools.changed", "brokerPropertiesFile.changed", "registryConfluentSslTrustoreLocation.changed", "customEndpointCheckbox.changed", "tunnelField.changed", "brokerSslTruststorePassword.changed", "propertiesFileField.changed", "queueField.changed", "basicAuthLoginField.changed", "keytabField.invoke", "brokerSaslKeytab.changed", "profileName.changed", "flinkVersion.changed", "verboseField.changed", "excludePackagesField.changed", "brokerAwsIamAuthType.changed", "bucket.changed", "address.changed", "brokerAuthType.changed", "workDirectoryField.changed", "brokerMskCloudAuthType.changed", "sasToken.changed", "regionCombobox.changed", "useSshPasswordForSudo.changed", "proxyTypeComboBox.changed", "proxyDomainField.changed", "userName.changed", "credentialFileChooser.changed", "deployModeField.changed", "userCustomConfigPath.changed", "driverLibraryPathField.changed", "brokerMskCloudSecretKey.changed", "registryConfluentSslKeyPassword.changed", "driverCoresField.changed", "clusterComboBox.changed", "brokerCloudSource.changed", "registryConfluentProperties.changed", "registryType.changed", "useSudo.changed", "registryConfluentSslEnableValidation.changed", "googleProject.changed", "shellExecutorField.changed", "saslKeytab.changed", "jarsField.changed", "registryGlueAccessKey.changed", "actionLink.invoke", "container.changed", "sparkHomeField.changed", "registryConfluentAuth.changed", "artifactPathField.changed", "registryConfluentSslUseKeystore.changed", "registryGlueRegion.changed", "storageChooser.changed", "executorMemoryField.changed", "driverMemoryField.changed", "key.changed", "packagesField.changed", "filesField.invoke", "registryConfluentSource.changed", "registryGlueSecretKey.changed", "configFolder.changed", "brokerSslKeyPassword.changed", "appidField.changed", "pyFilesField.changed", "hadoopVersion.changed", "brokerMskCloudProfile.changed", "kerberosPasswordField.changed", "repositoriesField.changed", "brokerConfSource.changed", "driverLibraryPathField.invoke", "pyFilesField.invoke", "driverJavaOptionsField.changed", "tunnelComponent.changed", "scalaVersion.changed", "sftpCommand.changed", "filesField.changed", "proxyNonProxyHostsField.changed", "brokerMskCloudAccessKey.changed", "brokerSslEnableValidation.changed", "archivesField.invoke", "kerberosTypeField.changed", "proxyAuthEnabledCheckbox.changed", "driverClassPathField.invoke", "enableBasicAuthCheckbox.changed", "rootPathComponent.changed", "registryConfluentUseBrokerSsl.changed", "artifactPathField.invoke", "registryConfluentBearerToken.changed", "registryConfluentUseProxy.changed", "jaasConfigPathPerIde.changed", "kerberosPrincipalField.changed", "enableTunnelField.changed", "kerberosAuthType.changed", "noneAuthType.changed", "settings.group.visibility.updated", "sftpConnection.changed", "sparkMonitoringConnection.changed", "attach.inlay.ssh.shown", "attach.inlay.ssh" ]
      }
    }
  }, {
    "id" : "bigdatatools.spark.analyze",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:inlay.is.shown|inspection.is.shown|dataframe.is.calculated|add.columns.to.completion}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "isConstant" : [ "{enum#boolean}" ],
        "isPartial" : [ "{enum#boolean}" ],
        "kind" : [ "{enum:NON_EXISTING_COLUMN|CONFLICT|COLUMN_EXISTS|ALIAS_EXISTS|SUSPICIOUS_CAST|OTHER}" ],
        "lang" : [ "{util#lang}" ],
        "source" : [ "{enum:EXPLICIT_SCHEMA|UNKNOWN_SCHEMA|INLAY_SCHEMA|PARSE_FILE_SCHEMA|DATAFRAME_TRANSFORM|DATAFRAME_TRANSFORM_PARTIAL}" ],
        "withSchema" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "bigdatatools.spark.monitoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "column" : [ "{util#spark_monitoring_column_name}" ],
        "field" : [ "{enum#__field}", "{enum:Starting|Error}" ],
        "name" : [ "{enum:Applications|Spark_properties|System_properties|Classpath_entries|Runtime|Tasks|Tasks_summary}", "{enum:TasksSummary}", "{enum:StageDetails|StageTasks}", "{enum#__name}" ],
        "running_applications" : [ "{enum#__running_applications}", "{enum#__total_applications}" ],
        "total_applications" : [ "{enum#__running_applications}", "{enum#__total_applications}" ],
        "type" : [ "{enum#__type}", "{enum:JobStatus|ApplicationStatus|SqlStatus|StageStatus}", "{enum:CreateConnection|OpenUrl|OpenSettings|Refresh}" ],
        "value" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "columns.visibility.changed", "connected", "panel.expanded", "block.shown", "page.selected", "state.filter.changed", "toolbar.action.invoked" ],
        "__field" : [ "Succeeded", "Active", "Unknown", "Complete", "Failed", "Skipped", "Running", "Completed", "Pending" ],
        "__name" : [ "Storage", "Jobs", "Stages", "Environment", "Executors", "SQL", "Unknown", "EXECUTORS", "JOBS", "STORAGES", "STAGES", "ENVIRONMENT", "UNKNOWN" ],
        "__running_applications" : [ "0", "1", "2_5", "6_15", "16_30", "31_more" ],
        "__total_applications" : [ "INTERVAL_2_5", "INTERVAL_1", "INTERVAL_0", "INTERVAL_16_30", "INTERVAL_6_15", "INTERVAL_31_MORE" ],
        "__type" : [ "TaskColumns", "SqlColumns", "ExecutorColumns", "JobColumns", "StageColumns", "ApplicationColumns", "StorageColumns", "Task", "Executor", "Storage", "Stage", "Job", "Application", "Sql" ]
      }
    }
  }, {
    "id" : "bigdatatools.spark.monitoring.configurations",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:connection.configured}" ],
      "event_data" : {
        "basic_auth_enabled" : [ "{enum#boolean}" ],
        "connection_secured" : [ "{enum#boolean}" ],
        "driver_type" : [ "{enum:LOCAL|SFTP|HDFS|S3|MINIO|LINODE|DIGITAL_SPACES_OCEAN|YANDEX_STORAGE|ALIBABA_OSS|TENCENT_COS|AZURE|GOOGLE_CLOUD_STORAGE|ZEPPELIN|HIVE_METASTORE|GLUE|EMR|DATABRICKS|SPARK_MONITORING|HADOOP_MONITORING|FLINK|KAFKA|TEST}", "{enum:DATAPROC}", "{enum#__driver_type}", "{enum:SPARK_SUBMIT_CLUSTER}", "{enum:ARBITRARY_CLUSTER}" ],
        "enabled" : [ "{enum#boolean}" ],
        "history_server" : [ "{enum#boolean}" ],
        "id" : [ "Spark_monitoring_connection@SparkMonitoringConnections@-{regexp#integer}", "Spark_monitoring_connection@SparkMonitoringConnections@{regexp#integer}" ],
        "per_project" : [ "{enum#boolean}" ],
        "proxy_type" : [ "{enum:DISABLED|GLOBAL|CUSTOM}" ],
        "server_is_local" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__driver_type" : [ "HIVE", "YANDEX", "GCS", "DOS", "YARN" ]
      }
    }
  }, {
    "id" : "bigdatatools.spark.submit.configurations",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:global|connection.configured}" ],
      "event_data" : {
        "archives_size" : [ "{regexp#integer}" ],
        "driver_class_paths_size" : [ "{regexp#integer}" ],
        "driver_library_paths_size" : [ "{regexp#integer}" ],
        "factory" : [ "{enum:ClusterSparkJobConfigurationType|SparkJobConfigurationType|SshSparkJobConfigurationType}" ],
        "factory_type" : [ "{enum:SparkSubmitConfigurationType|PySparkSubmitConfigurationType}" ],
        "jars_files_size" : [ "{regexp#integer}" ],
        "py_files_size" : [ "{regexp#integer}" ],
        "type" : [ "{enum:local|ssh}" ],
        "visible_blocks" : [ "{enum:SPARK_CONFIG|SPARK_DEBUG|DEPENDENCIES|MAVEN_DEPENDENCIES|DRIVER|EXECUTOR|KERBEROS|INTEGRATION|ADDITIONAL|SHELL_OPTIONS|SSH_OPTIONS}" ]
      }
    }
  }, {
    "id" : "bigdatatools.visualization",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:visualization.change|visualization.load|visualization.run}" ],
      "event_data" : {
        "cell_index" : [ "{regexp#integer}" ],
        "cell_type" : [ "{enum#__cell_type}", "{enum:scala}" ],
        "collapsed" : [ "{enum#boolean}" ],
        "current_page" : [ "{enum#__current_page}" ],
        "inlays_full_load_duration" : [ "{regexp#integer}" ],
        "inlays_self_load_duration" : [ "{regexp#integer}" ],
        "notebook_json_length" : [ "{regexp#integer}" ],
        "notebook_paragraphs_count" : [ "{regexp#integer}" ],
        "notebook_text_length" : [ "{regexp#integer}" ],
        "series" : [ "{regexp#series}" ],
        "table_columns" : [ "{regexp#integer}" ],
        "table_rows" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__cell_type" : [ "alluxio", "angular", "bigquery", "cassandra", "elasticsearch", "file", "flink", "groovy", "hbase", "ignite", "ignitesql", "jdbc", "kylin", "lens", "livy", "pyspark", "pyspark3", "sparkr", "shared", "md", "neo4j", "pig", "query", "python", "ipython", "sql", "conda", "docker", "sap", "sh", "spark", "dep", "ipyspark", "r", "athena", "default", "unknown" ],
        "__current_page" : [ "Chart", "Table", "Console", "Image", "Html", "Text" ]
      }
    }
  }, {
    "id" : "bigdatatools.zeppelin.bindings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:updated|default.used}" ],
      "event_data" : {
        "connection_id" : [ "Zeppelin_connection@ZeppelinConnections@-{regexp#integer}", "Zeppelin_connection@ZeppelinConnections@{regexp#integer}" ],
        "count_selected" : [ "{regexp#integer}" ],
        "count_total" : [ "{regexp#integer}" ],
        "group" : [ "{enum#__group}" ],
        "name_is_default" : [ "{enum#boolean}" ],
        "zeppelin_version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__group" : [ "spark", "md", "angular", "sh", "livy", "alluxio", "file", "flink", "python", "ignite", "lens", "cassandra", "kylin", "elasticsearch", "jdbc", "hbase", "bigquery", "pig", "groovy", "neo4j", "sap", "athena", "default", "unknown" ]
      }
    }
  }, {
    "id" : "bigdatatools.zeppelin.configurations",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:connection.configured}" ],
      "event_data" : {
        "connection_anonymous" : [ "{enum#boolean}" ],
        "connection_hadoop_version" : [ "{regexp#version}" ],
        "connection_nginx_auth_enabled" : [ "{enum#boolean}" ],
        "connection_perProject" : [ "{enum#boolean}" ],
        "connection_scala_version" : [ "{regexp#version}" ],
        "connection_secured" : [ "{enum#boolean}" ],
        "connection_spark_version" : [ "{regexp#version}" ],
        "server_is_local" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "bigdatatools.zeppelin.instance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:notebook.list.update|connect}" ],
      "event_data" : {
        "connection_id" : [ "Zeppelin_connection@ZeppelinConnections@-{regexp#integer}", "Zeppelin_connection@ZeppelinConnections@{regexp#integer}" ],
        "notebooks_count" : [ "{regexp#integer}" ],
        "zeppelin_version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "bigdatatools.zeppelin.interpreter",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "connection_id" : [ "Zeppelin_connection@ZeppelinConnections@-{regexp#integer}", "Zeppelin_connection@ZeppelinConnections@{regexp#integer}" ],
        "count_maven" : [ "{regexp#integer}" ],
        "count_total" : [ "{regexp#integer}" ],
        "driver_type" : [ "{enum#__driver_type}", "{enum:unknown}" ],
        "interpreter_type" : [ "{enum#__interpreter_type}" ],
        "interpreters_count_custom_id" : [ "{regexp#integer}" ],
        "interpreters_count_custom_name" : [ "{regexp#integer}" ],
        "interpreters_count_total" : [ "{regexp#integer}" ],
        "name_is_default" : [ "{enum#boolean}" ],
        "zeppelin_version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__driver_type" : [ "postgres", "mysql", "mariadb", "redshift", "hive", "phoenix", "tajo" ],
        "__event_id" : [ "list.get", "list.get.no.rights", "interpreter.dependencies.used", "interpreter.used", "jdbc.driver.used" ],
        "__interpreter_type" : [ "spark", "md", "angular", "sh", "livy", "alluxio", "file", "flink", "python", "ignite", "lens", "cassandra", "kylin", "elasticsearch", "jdbc", "hbase", "bigquery", "pig", "groovy", "neo4j", "sap", "athena", "default", "unknown" ]
      }
    }
  }, {
    "id" : "bigdatatools.zeppelin.notebook",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action_id" : [ "{enum#__action_id}", "{enum:OPEN_DEPENDENCIES|EXPORT_TO_HTML}", "{enum:EXTRACT_SCALA}" ],
        "cell_field_change" : [ "{enum:text|meta|unknown}", "{enum:META|TEXT|UNKNOWN}" ],
        "cell_index" : [ "{regexp#integer}" ],
        "cell_json_size" : [ "{regexp#integer}" ],
        "cell_line_size" : [ "{regexp#integer}" ],
        "cell_status" : [ "{enum#__cell_status}", "{enum:UNKNOWN}" ],
        "cell_text_size" : [ "{regexp#integer}" ],
        "cell_type" : [ "{enum#__cell_type}" ],
        "cells_results_angular_count" : [ "{regexp#integer}" ],
        "cells_results_bokeh_html_count" : [ "{regexp#integer}" ],
        "cells_results_data_count" : [ "{regexp#integer}" ],
        "cells_results_html_count" : [ "{regexp#integer}" ],
        "cells_results_img_count" : [ "{regexp#integer}" ],
        "cells_results_network_count" : [ "{regexp#integer}" ],
        "cells_results_null_count" : [ "{regexp#integer}" ],
        "cells_results_svg_count" : [ "{regexp#integer}" ],
        "cells_results_table_count" : [ "{regexp#integer}" ],
        "cells_results_text_count" : [ "{regexp#integer}" ],
        "editor_created_time" : [ "{regexp#integer}" ],
        "execution_duration" : [ "{regexp#integer}", "{enum:-1}" ],
        "full_init_time" : [ "{regexp#integer}" ],
        "note_id" : [ "{regexp#hash}" ],
        "notebook_json_length" : [ "{regexp#integer}" ],
        "notebook_paragraphs_count" : [ "{regexp#integer}" ],
        "notebook_synchronized" : [ "{enum#boolean}" ],
        "notebook_text_length" : [ "{regexp#integer}" ],
        "results_code" : [ "{enum:SUCCESS|INCOMPLETE|ERROR|KEEP_PREVIOUS_RESULT|unknown}", "{enum#__results_code}" ],
        "results_count_angular" : [ "{regexp#integer}" ],
        "results_count_bokeh_html" : [ "{regexp#integer}" ],
        "results_count_data" : [ "{regexp#integer}" ],
        "results_count_html" : [ "{regexp#integer}" ],
        "results_count_img" : [ "{regexp#integer}" ],
        "results_count_network" : [ "{regexp#integer}" ],
        "results_count_null" : [ "{regexp#integer}" ],
        "results_count_svg" : [ "{regexp#integer}" ],
        "results_count_table" : [ "{regexp#integer}" ],
        "results_count_text" : [ "{regexp#integer}" ],
        "results_count_total" : [ "{regexp#integer}" ],
        "results_table_column_count" : [ "{regexp#integer}" ],
        "results_table_row_count" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__action_id" : [ "RUN_ALL", "STOP_ALL", "CLEAR_ALL_OUTPUT", "OPEN_INTERPRETER_BINDINGS", "OPEN_IN_EXTERNAL_BROWSER", "OPEN_MODULE_CONFIG" ],
        "__cell_status" : [ "READY", "PENDING", "RUNNING", "FINISHED", "ABORT", "ERROR" ],
        "__cell_type" : [ "alluxio", "angular", "bigquery", "cassandra", "elasticsearch", "file", "flink", "groovy", "hbase", "ignite", "ignitesql", "jdbc", "kylin", "lens", "livy", "pyspark", "pyspark3", "sparkr", "shared", "md", "neo4j", "pig", "query", "python", "ipython", "sql", "conda", "docker", "sap", "sh", "spark", "dep", "ipyspark", "r", "athena", "default", "unknown" ],
        "__event_id" : [ "note.open", "toolbar.click", "note.run", "note.stop", "note.output.clear", "cell.remove", "cell.add", "cell.output.clear", "cell.run", "cell.edit", "cell.executed", "cell.open" ],
        "__results_code" : [ "SUCCESS", "INCOMPLETE", "ERROR", "KEEP_PREVIOUS_RESULT", "NO_RESULT" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "cell.output.clear",
      "fields" : [ "note_id" ]
    }, {
      "event" : "cell.remove",
      "fields" : [ "note_id" ]
    }, {
      "event" : "cell.executed",
      "fields" : [ "note_id" ]
    }, {
      "event" : "cell.run",
      "fields" : [ "note_id" ]
    }, {
      "event" : "cell.add",
      "fields" : [ "note_id" ]
    }, {
      "event" : "cell.open",
      "fields" : [ "note_id" ]
    }, {
      "event" : "cell.edit",
      "fields" : [ "note_id" ]
    } ]
  }, {
    "id" : "bookmarks",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "{util#favorite_type}" ]
      },
      "enums" : {
        "__event_id" : [ "bookmarks.total", "bookmarks.with.letter.mnemonic", "bookmarks.with.line", "bookmarks.with.number.mnemonic", "favorites.directories", "favorites.files", "favorites.lists", "favorites.total", "favorites.custom", "bookmarks.lists" ]
      }
    }
  }, {
    "id" : "bookmarks.counters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:bookmark.navigate|favorites.navigate}" ],
      "event_data" : {
        "mnemonicType" : [ "{enum:Number|None|Letter}" ],
        "navigatable" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "withLine" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "build",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started|finished}" ],
      "event_data" : {
        "build_originator" : [ "{util#class_name}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "has_errors" : [ "{enum#boolean}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "incremental" : [ "{enum#boolean}" ],
        "modules" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "task_runner_class" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "build.ant.actions",
    "builds" : [ {
      "from" : "191.6873"
    } ],
    "rules" : {
      "event_id" : [ "{enum:RunSelectedBuild|RunTargetAction}" ],
      "event_data" : {
        "context_menu" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "build.ant.state",
    "builds" : [ {
      "from" : "192.4883"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "isColoredOutputMessages", "isCollapseFinishedTargets", "isRunInBackground", "isViewClosedWhenNoErrors", "hasAntProjects" ]
      }
    }
  }, {
    "id" : "build.gradle.actions",
    "builds" : [ {
      "from" : "192.4258"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "context_menu" : [ "{enum#boolean}" ],
        "place" : [ "{util#place}" ]
      },
      "enums" : {
        "__event_id" : [ "GradleExecuteTaskAction", "PasteMvnDependency", "ToggleOfflineAction", "GradleOpenProjectCompositeConfigurationAction", "showGradleDaemonsAction", "stopAllDaemons", "refreshDaemons", "stopSelectedDaemons", "gracefulStopAllDaemons" ]
      }
    }
  }, {
    "id" : "build.gradle.errors",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:model.builder.message.received}" ],
      "event_data" : {
        "ide_activity_id" : [ "{regexp#integer}" ],
        "message_group" : [ "{enum:gradle.projectModel.group|gradle.scalaProjectModel.group|gradle.taskModel.group|gradle.taskModel.collecting.group|gradle.taskModel.cacheGet.group|gradle.taskModel.cacheSet.group|gradle.sourceSetModel.group|gradle.sourceSetModel.projectArtifact.group|gradle.sourceSetModel.nonSourceSetArtifact.group|gradle.sourceSetModel.projectConfigurationArtifact.group|gradle.sourceSetModel.cacheGet.group|gradle.sourceSetModel.cacheSet.group|gradle.resourceModel.group|gradle.earConfigurationModel.group|gradle.warConfigurationModel.group|gradle.dependencyAccessorModel.group|gradle.dependencyGraphModel.group|gradle.intellijSettingsModel.group|gradle.intellijProjectSettingsModel.group|gradle.testModel.group|gradle.mavenRepositoryModel.group|gradle.annotationProcessorModel.group|gradle.buildscriptClasspathModel.group|gradle.projectExtensionModel.group|gradle.versionCatalogModel.group}", "{enum:gradle.sourceSetModel.nonSourceSetArtifact.skipped.group|gradle.sourceSetModel.projectArtifact.skipped.group|gradle.sourceSetModel.projectConfigurationArtifact.skipped.group}", "{enum:gradle.dependencyDownloadPolicyModel.group|gradle.dependencyDownloadPolicyModel.cacheSet.group|gradle.dependencyDownloadPolicyModel.cacheGet.group}", "{enum:gradle.buildScriptClasspathModel.cacheSet.group|gradle.buildScriptClasspathModel.group|gradle.buildScriptClasspathModel.cacheGet.group}", "{enum:gradle.sourceSetModel.sourceSetArtifact.group|gradle.sourceSetModel.sourceSetArtifact.skipped.group|gradle.dependencyCompileClasspathModel.group|gradle.sourceSetDependencyModel.group}", "{enum#__message_group}" ],
        "message_kind" : [ "{enum:ERROR|WARNING|INFO}", "{enum:INTERNAL}" ]
      },
      "enums" : {
        "__message_group" : [ "gradle.projectModel.cacheSet.group", "gradle.sourceSetArtifactIndex.group", "gradle.sourceSetDependencyModel.cacheSet.group", "gradle.sourceSetArtifactIndex.cacheSet.group", "gradle.sourceSetDependencyModel.cacheGet.group", "gradle.projectModel.cacheGet.group" ]
      }
    }
  }, {
    "id" : "build.gradle.import",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "error" : [ "{util#class_name}" ],
        "error_count" : [ "{regexp#integer}" ],
        "error_hash" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "phase" : [ "{enum:GRADLE_CALL|PROJECT_RESOLVERS|DATA_SERVICES}", "{enum:WORKSPACE_MODEL_APPLY}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "severity" : [ "{enum:fatal|warning}" ],
        "sync_successful" : [ "{enum#boolean}" ],
        "too_many_errors" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "gradle.sync.started", "phase.started", "error", "phase.finished", "gradle.sync.finished" ]
      }
    }
  }, {
    "id" : "build.gradle.performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "executed" : [ "{regexp#integer}" ],
        "failed_count" : [ "{regexp#integer}" ],
        "from_cache_count" : [ "{regexp#integer}" ],
        "gradle_plugin" : [ "{util#build_gradle_performance_task_plugin}" ],
        "name" : [ "{util#build_gradle_performance_task_name}" ],
        "sum_duration_from_cache_ms" : [ "{regexp#integer}" ],
        "sum_duration_ms" : [ "{regexp#integer}" ],
        "sum_duration_up_to_date_ms" : [ "{regexp#integer}" ],
        "task_id" : [ "{regexp#integer}" ],
        "up_to_date_count" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "settings.evaluated", "container.callback.executed", "task.executed", "build.loaded", "project.loaded", "task.graph.calculated", "task.graph.executed", "execution.completed" ]
      }
    }
  }, {
    "id" : "build.gradle.state",
    "builds" : [ {
      "from" : "192.4883"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum#value_set}", "{regexp#version}", "{enum:bundled}", "{enum:empty}" ]
      },
      "enums" : {
        "__event_id" : [ "createModulePerSourceSet", "delegateBuildRun", "disableWrapperSourceDistributionNotification", "distributionType", "gradleJvmType", "gradleJvmVersion", "gradleVersion", "hasCustomGradleVmOptions", "hasCustomServiceDirectoryPath", "hasGradleProject", "ideaSpecificConfigurationUsed", "isCompositeBuilds", "isUseQualifiedModuleNames", "offlineWork", "preferredTestRunner", "showSelectiveImportDialogOnInitialImport", "storeProjectFilesExternally", "gradleDownloadDependencySources", "gradleParallelModelFetch", "org.gradle.parallel" ],
        "value_set" : [ "null", "default_wrapped", "local", "wrapped", "custom", "#JAVA_HOME", "#USE_PROJECT_JDK", "#JAVA_INTERNAL", "unknown", "platform", "gradle", "choose_per_test" ]
      }
    }
  }, {
    "id" : "build.jps",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "pre_compile" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "rebuild.completed", "autobuild.completed", "build.completed", "compile.tasks.started", "compile.tasks.finished" ]
      }
    }
  }, {
    "id" : "build.maven.actions",
    "builds" : [ {
      "from" : "191.4811"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "context_menu" : [ "{enum#boolean}" ],
        "executor" : [ "{util#run_config_executor}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__event_id" : [ "RunBuildAction", "ExecuteMavenRunConfigurationAction", "ExtractManagedDependenciesAction", "IntroducePropertyAction", "ShowMavenConnectors", "KillMavenConnector", "StartLocalMavenServer", "StartWslMavenServer", "CreateMavenProjectOrModuleFromArchetype", "CreateMavenProjectOrModule" ]
      }
    }
  }, {
    "id" : "build.maven.packagesearch",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:packagesearch.success|packagesearch.error}" ],
      "event_data" : {
        "endpoint" : [ "{enum:suggestPrefix|fulltext}" ],
        "exception" : [ "{util#class_name}" ],
        "time" : [ "{regexp#integer}" ],
        "timeout" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "build.maven.state",
    "builds" : [ {
      "from" : "192.4883"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum#value_set}", "{regexp#version}", "{enum:empty}", "{enum:disabled}", "{enum:generate-test-sources|process-test-sources}" ]
      },
      "enums" : {
        "__event_id" : [ "alwaysUpdateSnapshots", "autoDetectCompiler", "checksumPolicy", "createModuleGroups", "createModulesForAggregators", "customDependencyTypes", "dedicatedModuleDir", "delegateBuildRun", "downloadDocsAutomatically", "downloadSourcesAutomatically", "excludeTargetFolder", "failureBehavior", "generatedSourcesFolder", "hasIgnoredFiles", "hasIgnoredPatterns", "hasMavenProject", "hasRunnerEnvVariables", "hasRunnerMavenProperties", "hasRunnerVmOptions", "hasVmOptionsForImporter", "jdkTypeForImporter", "jdkVersionForImporter", "keepSourceFolders", "localRepository", "loggingLevel", "lookForNested", "mavenVersion", "nonRecursive", "outputLevel", "passParentEnv", "pluginUpdatePolicy", "printErrorStackTraces", "runMavenInBackground", "runnerJreType", "runnerJreVersion", "skipTests", "storeProjectFilesExternally", "updateFoldersOnImportPhase", "useMavenOutput", "usePluginRegistry", "userSettingsFile", "workOffline", "createSeparateModulesForMainAndTest", "useWorkspaceImport", "useDirectoryBasedProject", "showDialogWithAdvancedSettings" ],
        "value_set" : [ "fail", "not_set", "warn", "at_end", "fast", "never", "debug", "error", "fatal", "info", "default", "do_not_update", "update", "unknown", "autodetect", "generated_source_folder", "ignore", "subfolder", "generate-resources", "generate-sources", "generate-test-resources", "process-resources", "process-sources", "process-test-resources", "#JAVA_INTERNAL", "#JAVA_HOME", "custom", "#USE_PROJECT_JDK" ]
      }
    }
  }, {
    "id" : "build.tools",
    "builds" : [ {
      "from" : "192.4883"
    } ],
    "rules" : {
      "event_id" : [ "{enum:externalSystemId}" ],
      "event_data" : {
        "value" : [ "{enum#build_tools}", "{util#external_system_id}" ]
      }
    }
  }, {
    "id" : "build.tools.actions",
    "builds" : [ {
      "from" : "202.4357"
    } ],
    "rules" : {
      "event_id" : [ "{enum:action.invoked}" ],
      "event_data" : {
        "action_id" : [ "{util#action}", "{enum#__action_id}", "{enum#action}" ],
        "class" : [ "{util#class_name}" ],
        "context_menu" : [ "{enum#boolean}" ],
        "current_file" : [ "{util#current_file}" ],
        "dumb" : [ "{enum#boolean}" ],
        "enable" : [ "{enum#boolean}" ],
        "executor" : [ "{util#run_config_executor}" ],
        "input_event" : [ "{util#shortcut}" ],
        "parent" : [ "{util#class_name}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "system_id" : [ "{enum#build_tools}" ]
      },
      "enums" : {
        "__action_id" : [ "RefreshAllExternalProjectsAction", "RunExternalSystemTaskAction", "ShowExternalSystemSettingsAction", "RefreshExternalProjectAction", "ExecuteExternalSystemRunConfigurationAction", "AttachExternalProjectAction", "DetachExternalProjectAction", "OpenExternalConfigAction", "GradleRefreshProjectDependenciesAction", "ExternalSystemSelectProjectDataToImportAction", "RunTaskAction", "ToggleAutoImportAction", "EditExternalSystemRunConfigurationAction", "OpenTasksActivationManagerAction", "IgnoreExternalProjectAction", "RemoveExternalSystemRunConfigurationAction", "RunCommandAction", "ShowSettingAction", "GroupModulesAction", "AssignShortcutAction", "ToggleAfterCompileTasksAction", "ToggleAfterSyncTaskAction", "ShowTaskAction", "ToggleBeforeCompileTasksAction", "ToggleBeforeSyncTaskAction", "ToggleAfterRebuildTasksAction", "GroupTasksAction", "ShowIgnoredAction", "ShowInheritedTasksAction", "SbtHelpAction", "InspectTaskAction", "InspectSettingAction", "ToggleBeforeRebuildTasksAction", "AssignRunConfigurationShortcutAction" ]
      }
    }
  }, {
    "id" : "build.tools.sources",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:attached}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "handler" : [ "{util#class_name}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "success" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "build.tools.state",
    "builds" : [ {
      "from" : "191.7167"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "count_rounded" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "externalSystemId" : [ "{enum#build_tools}" ],
        "value" : [ "{enum:all|selective|none}" ]
      },
      "enums" : {
        "__event_id" : [ "modules.count", "numberOfLinkedProject", "useQualifiedModuleNames", "autoImport", "autoReloadType", "has.shared.sources" ]
      }
    }
  }, {
    "id" : "bundled.resource.reference",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:ide.file|plugin.file}" ],
      "event_data" : {
        "path" : [ "{util#bundled_resource_path}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "cache.recovery.actions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:perform|recovery.from.log.finished|recovery.from.log.started}" ],
      "event_data" : {
        "action-id" : [ "{enum:refresh|hammer|reindex|drop-shared-index|rescan|stop|reload-workspace-model}", "{enum:recover-from-log}" ],
        "botched_files" : [ "{regexp#integer}" ],
        "dropped_attributes" : [ "{regexp#integer}" ],
        "duplicate_children_deduplicated" : [ "{regexp#integer}" ],
        "duplicate_children_lost" : [ "{regexp#integer}" ],
        "from-guide" : [ "{enum#boolean}" ],
        "lost_contents" : [ "{regexp#integer}" ],
        "on_vfs_init" : [ "{enum#boolean}" ],
        "recovered_attributes" : [ "{regexp#integer}" ],
        "recovered_contents" : [ "{regexp#integer}" ],
        "recovered_files" : [ "{regexp#integer}" ],
        "recovery_time_millis" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "charts",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "modifier" : [ "{enum:None|Group|GroupAndSort|Min|Max|Mean|Median|Std|Var|Mad|First|Last|Sum|Prod|Count}" ],
        "type" : [ "{enum:AreaRange|Area|Bar|Bubble|Heatmap|Line|Pie|Scatter|Stock|Histogram}" ]
      },
      "enums" : {
        "__event_id" : [ "column.removed", "series.settings.closed", "series.added", "series.removed", "column.added", "series.settings.opened", "chart.type.changed", "column.modifier.changed" ]
      }
    }
  }, {
    "id" : "cidr.codeInsight",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:status}" ],
      "event_data" : {
        "file_path" : [ "{regexp#hash}" ],
        "status" : [ "{enum:OK|TOO_LARGE|NOT_IN_SOURCES}" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "status",
      "fields" : [ "file_path" ]
    } ]
  }, {
    "id" : "cidr.compiler.info.cache",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:collect.failed}" ]
    }
  }, {
    "id" : "cidr.compilers",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:cidr.compiler}" ],
      "event_data" : {
        "value" : [ "{enum:CLANG|CLANG_CL|EMSCRIPTEN|GCC_ARM|GCC_AVR|GCC_ESP32|GCC_ESP8266|GCC_MIPS|GCC_NATIVE|GCC_RISCV|IAR_8051|IAR_ARM|IAR_AVR|IAR_MSP430|IAR_RISCV|IAR_RX|IAR_STM8|KEIL_ARMCC|KEIL_ARMCLANG|MSVC_NATIVE|NVCC|SDCC|SYSTEM_DEFAULT|UNKNOWN|USER_DEFINED}" ]
      }
    }
  }, {
    "id" : "cidr.coverage.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:execute}" ],
      "event_data" : {
        "runner" : [ "{enum:LLVM|gcov/llvm-cov}", "{enum:gcov/llvm}" ]
      }
    }
  }, {
    "id" : "cidr.dfa",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:dfa.finished}" ],
      "event_data" : {
        "bdd_op_count_mean" : [ "{regexp#integer}" ],
        "domain_c" : [ "{regexp#integer}" ],
        "domain_i" : [ "{regexp#integer}" ],
        "domain_m" : [ "{regexp#integer}" ],
        "domain_s" : [ "{regexp#integer}" ],
        "domain_v" : [ "{regexp#integer}" ],
        "file_lines_count_mean" : [ "{regexp#integer}" ],
        "file_path" : [ "{regexp#hash}" ],
        "has_errors" : [ "{enum#boolean}" ],
        "memory_95P_byte" : [ "{regexp#integer}" ],
        "memory_max_byte" : [ "{regexp#integer}" ],
        "memory_mean_byte" : [ "{regexp#integer}" ],
        "record_count" : [ "{regexp#integer}" ],
        "status" : [ "{enum:SUCCESS|TIME_LIMIT|MEMORY_OVERFLOW|CONTEXT_OVERFLOW|FAILED}" ],
        "time_95p_ms" : [ "{regexp#integer}" ],
        "time_max_ms" : [ "{regexp#integer}" ],
        "time_mean_ms" : [ "{regexp#integer}" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "dfa.finished",
      "fields" : [ "file_path" ]
    } ]
  }, {
    "id" : "cidr.embedded",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "ACTIVE_PERIPHERAL_NODES" : [ "{regexp#integer}" ],
        "AUTOMATIC" : [ "{enum#boolean}" ],
        "MCU_NAME" : [ "{enum#__MCU_NAME}", "{enum:STM32C0}", "{enum:STM32WBA|STM32WB3|STM32WB5|STM32H5}" ],
        "SERVER_TYPE" : [ "{enum#__SERVER_TYPE}", "{enum:pe-micro|unknown-via-ssh}" ],
        "gdbserverType" : [ "{enum:JLink|qemu|pyocd|st-util|ST-LINK Gdbserver|pe-micro|gdbserver|OpenOCD|unknown-via-ssh|Xilinx XMD|Other}" ]
      },
      "enums" : {
        "__MCU_NAME" : [ "STM32L1", "STM32L4", "STM32WB1", "STM32F0", "STM32G0", "STM32L4P", "STM32L5", "STM32F2", "STM32L4Q", "STM32F1", "STM32L4R", "STM32F4", "STM32F3", "STM32G4", "STM32H7", "STM32F7", "STM32WL", "STM32L4A", "STM32L4S", "STM32U5", "UPDATE_FAILED", "STM32MP1", "UNKNOWN", "STM32L0" ],
        "__SERVER_TYPE" : [ "gdbserver", "OpenOCD", "st-util", "JLink", "ST-LINK Gdbserver", "qemu", "pyocd", "Xilinx XMD", "Other" ],
        "__event_id" : [ "STM32CUBEMX_PROJECT_UPDATE", "CUSTOM_GDB_SERVER_STARTED", "PERIPHERAL_VIEW_SHOWN", "gdbserver.wizard.started", "gdbserver.runconfig.created" ]
      }
    }
  }, {
    "id" : "cidr.embedded.platformio",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "name" : [ "{enum:BUILD|BUILD_PRODUCTION|CHECK|CLEAN|CREATE_PROJECT|DEBUG|HOME|INIT|MONITOR|PROGRAM|TEST|UPDATE_ALL|UPLOAD|UPLOADFS}" ]
      },
      "enums" : {
        "__event_id" : [ "command", "file-open-via-home", "new-project", "project-open-via-home", "start-debug" ]
      }
    }
  }, {
    "id" : "cidr.embedded.rtos",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:debug.try.detect|settings.changed|debug.started}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "id" : [ "{regexp#integer}" ],
        "type" : [ "{enum:FreeRTOS|Auto}", "{enum:Zephyr}", "{enum:Azure RTOS ThreadX}" ]
      }
    }
  }, {
    "id" : "cidr.makefile",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:build.system.detected}" ],
      "event_data" : {
        "build_system_detector_class" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "cidr.makefile.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:preconfigure.commands}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "cidr.quickdoc",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:link.clicked}" ],
      "event_data" : {
        "isCppReference" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "cidr.toolchains",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "bundledCMake" : [ "{enum#boolean}" ],
        "cmakeVersion" : [ "{regexp#version}" ],
        "customBuildTool" : [ "{enum#boolean}" ],
        "customCCompiler" : [ "{enum#boolean}" ],
        "customCxxCompiler" : [ "{enum#boolean}" ],
        "customMake" : [ "{enum#boolean}" ],
        "debugger" : [ "{enum:LLDB|GDB}", "{enum:BUNDLED_GDB|CUSTOM_GDB|BUNDLED_LLDB}" ],
        "debuggerVersion" : [ "{regexp#version}" ],
        "envFile" : [ "{enum#boolean}" ],
        "toolset" : [ "{enum#__toolset}" ],
        "toolsetType" : [ "{enum:MinGW|Cygwin|Visual Studio|WSL|System|System|Remote Host|Docker|third.party}", "{enum#__toolsetType}", "{enum:SSH}" ],
        "toolsetVersion" : [ "{regexp#version}" ],
        "total" : [ "{regexp#integer}" ],
        "value" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}" ],
        "version_type" : [ "{enum:custom|bundled|default}" ]
      },
      "enums" : {
        "__event_id" : [ "Toolchains.number", "Toolset", "CMake", "Make", "C.Compiler", "CXX.Compiler", "Debugger", "number", "toolchain" ],
        "__toolset" : [ "System", "!system!", "Visual_Studio", "MinGW-w64", "Remote_Host", "Cygwin", "WSL", "MinGW", "Docker" ],
        "__toolsetType" : [ "SYSTEM_WINDOWS_TOOLSET", "DOCKER", "SYSTEM_UNIX_TOOLSET", "CYGWIN", "MSVC", "REMOTE", "MINGW" ]
      }
    }
  }, {
    "id" : "cidr.workspace",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:info|remote.toolchain}" ],
      "event_data" : {
        "hasRemote" : [ "{enum#boolean}" ],
        "hasWSL" : [ "{enum#boolean}" ],
        "names" : [ "{enum#__names}", "{enum:Meson}" ],
        "number" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__names" : [ "CMakeWorkspace", "XcodeMetaData", "CompDBWorkspace", "MakefileWorkspace", "SwiftPackageManagerWorkspace", "OCMockWorkspace", "Unknown", "Xcode", "Rust", "CMake", "Makefile", "CompDB", "GradleNative", "SwiftPackageManager", "Bazel", "OCMock", "Cargo" ]
      }
    }
  }, {
    "id" : "cidr.workspace.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:project.created|project.linked|project.resolved|makefile.resolver.errors}" ],
      "event_data" : {
        "cancelled" : [ "{enum#boolean}" ],
        "count" : [ "{regexp#integer}" ],
        "error_type" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "projectKind" : [ "{enum:SPM|Xcode|Unknown|CMake|Makefile|CompDB|Gradle}", "{enum:SwiftPM}", "{enum:PlatformIO}", "{enum:Meson}" ],
        "session_id" : [ "{regexp#integer}" ],
        "success" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "clangd.completion",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:item.selected}" ],
      "event_data" : {
        "from_namespace" : [ "{enum#boolean}" ],
        "general_kind" : [ "{enum:Text|Method|Function|Constructor|Field|Variable|Class|Interface|Module|Property|Unit|Value|Enum|Keyword|Snippet|Color|File|Reference|Folder|EnumMember|Constant|Struct|Event|Operator|TypeParameter}" ],
        "postfix_kind" : [ "{enum:None|FreeFunction|If|For|Switch|Do|While|Return|ReinterpretCast|StaticCast|DynamicCast|ConstCast|Begin|CBegin|RBegin|CRBegin|Forward|Ref|CRef|Move|New|MakeShared|MakeUnique|Else|Not|Fori|Formut|CoReturn|CoYield|CoAwait|AlgorithmFunction}" ]
      }
    }
  }, {
    "id" : "clion.ab.test",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:plugin.chosen}" ],
      "event_data" : {
        "selected" : [ "{enum:Classic|Radler}" ]
      }
    }
  }, {
    "id" : "clion.package.manager",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "is_triplet" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "clion.cmake.error.fix.show", "vcpkg.install", "clion.build.error.fix.show", "vcpkg.remove", "vcpkg.remove.package", "clion.build.error.fix.resolve", "vcpkg.registry.remove", "clion.cmake.error.fix.resolve", "vcpkg.registry.install", "vcpkg.install.package", "clion.force.using.system.binaries" ]
      }
    }
  }, {
    "id" : "clion.sanitizers.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:execute}" ],
      "event_data" : {
        "visual_representation" : [ "{enum:Enabled|Disabled}" ]
      }
    }
  }, {
    "id" : "cloud.tools",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:tool.installed|config.exists}" ],
      "event_data" : {
        "config" : [ "{enum:kubeconfig}" ],
        "tool" : [ "{enum:docker|helm|kubectl|minikube|podman|telepresence|terraform|ansible}", "{enum:packer|kind|pulumi|skaffold}", "{enum:tfswitch}", "{enum#__tool}", "{enum:bicep|localstack|okteto}", "{enum:az}", "{enum:colima}", "{enum:terramate|terragrunt}" ]
      },
      "enums" : {
        "__tool" : [ "puppet", "dsc", "gcloud", "chef", "rancher", "microk8s", "aws", "eksctl", "kubeval", "k9s", "kube-hunter", "calicoctl", "kubetail", "stern", "kube-ops-view", "kube-bench", "clusterctl", "mirrord", "draft", "kube-score", "istioctl" ]
      }
    }
  }, {
    "id" : "cmake",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "isDefault" : [ "{enum#boolean}" ],
        "name" : [ "{enum:Ninja|Ninja Multi-Config|Unix Makefiles|Borland Makefiles|NMake Makefiles|NMake Makefiles JOM|MSYS Makefiles|MinGW Makefiles|Watcom WMake|Visual Studio 9 2008|Visual Studio 10 2010|Visual Studio 11 2012|Visual Studio 12 2013|Visual Studio 14 2015|Visual Studio 15 2017|Visual Studio 16 2019|Visual Studio 17 2022|Xcode|Green Hills MULTI|None|Unknown}", "{enum:Visual Studio 7|Visual Studio 6|Visual Studio 8 2005|Visual Studio 7 .NET 2003}" ],
        "number" : [ "{regexp#integer}" ],
        "success" : [ "{regexp#integer}" ],
        "total" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "reload.started", "reload.finished", "error", "reload.active.profiles", "profiles.loaded", "load.model.failed", "prepare.failed", "sync.failed", "generator.used", "options.table.value.edited", "options.table.expanded" ]
      }
    }
  }, {
    "id" : "cmake.checker",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:error}" ],
      "event_data" : {
        "kind" : [ "{enum:MINGW|CYGWIN|MSVC|WSL|SYSTEM_UNIX_TOOLSET|SYSTEM_WINDOWS_TOOLSET|REMOTE|DOCKER}", "{enum:SSH}" ]
      }
    }
  }, {
    "id" : "cmake.debugger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:debugger.used}" ]
    }
  }, {
    "id" : "cmake.exit.code",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:build|configure}" ],
      "event_data" : {
        "is_zero" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "cmake.presets",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:number}" ],
      "event_data" : {
        "enabled" : [ "{regexp#integer}" ],
        "total" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "cmake.presets.counter",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:parse}" ],
      "event_data" : {
        "version" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "cmake.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:opened}" ],
      "event_data" : {
        "ProjectType" : [ "{enum:Regular|WithQt}" ]
      }
    }
  }, {
    "id" : "cmake.quickdoc",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:requested|link.clicked|shown}" ],
      "event_data" : {
        "element" : [ "{util#class_name}" ],
        "hasAnchor" : [ "{enum#boolean}" ],
        "isInternal" : [ "{enum#boolean}" ],
        "kind" : [ "{enum:COMMAND|VARIABLE|MODULE|POLICY|GLOBAL_PROPERTY|DIRECTORY_PROPERTY|TARGET_PROPERTY|SOURCE_PROPERTY|INSTALL_PROPERTY|TEST_PROPERTY|CACHE_PROPERTY}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "cmake.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:number|autoReload|profile}" ],
      "event_data" : {
        "buildType" : [ "{enum:Default|Debug|Release|RelWithDebInfo|MinSizeRel}" ],
        "emptyGenerationOptions" : [ "{enum#boolean}" ],
        "enabled" : [ "{regexp#integer}", "{enum#boolean}" ],
        "fromPreset" : [ "{enum#boolean}" ],
        "hasAdditionalEnvironment" : [ "{enum#boolean}" ],
        "hasCustomBuildOptions" : [ "{enum#boolean}" ],
        "hasCustomDefinitionOption" : [ "{enum#boolean}" ],
        "hasCustomGenerationDir" : [ "{enum#boolean}" ],
        "hasCustomGeneratorOption" : [ "{enum#boolean}" ],
        "hasPresetOption" : [ "{enum#boolean}" ],
        "isDefaultToolchain" : [ "{enum#boolean}" ],
        "isEnabled" : [ "{enum#boolean}" ],
        "isShared" : [ "{enum#boolean}" ],
        "noGenerator" : [ "{enum#boolean}" ],
        "passSystemEnvironment" : [ "{enum#boolean}" ],
        "similarProfilesPercent" : [ "{regexp#integer}" ],
        "toolchain" : [ "{enum:default|MinGW|Cygwin|Visual Studio|WSL|System|System|Remote Host|Docker}" ],
        "toolchainKind" : [ "{enum:unknown|MinGW|Cygwin|Visual Studio|WSL|System|System|Remote Host|Docker}" ],
        "total" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "code.floating.toolbar",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:shown}" ],
      "event_data" : {
        "lines_selected" : [ "{regexp#integer}" ],
        "top_to_bottom" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "commit.interactions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "commit_check_class" : [ "{util#class_name}" ],
        "commit_option" : [ "{enum:SIGN_OFF|RUN_HOOKS|AMEND}" ],
        "commit_problem_class" : [ "{util#class_name}" ],
        "commit_problem_place" : [ "{enum:NOTIFICATION|COMMIT_TOOLWINDOW|PUSH_DIALOG}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "errors_count" : [ "{regexp#integer}" ],
        "execution_order" : [ "{enum:EARLY|MODIFICATION|LATE|POST_COMMIT}" ],
        "files_included" : [ "{regexp#integer}" ],
        "files_total" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "input_event" : [ "{util#shortcut}" ],
        "is_from_settings" : [ "{enum#boolean}" ],
        "is_success" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "unversioned_included" : [ "{regexp#integer}" ],
        "unversioned_total" : [ "{regexp#integer}" ],
        "warnings_count" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "select.item", "session.started", "session.finished", "show.diff", "close.diff", "commit", "jump.to.source", "commit.and.push", "include.file", "exclude.file", "toggle.commit.check", "commit_check_session.finished", "code.analysis.warning", "commit_check_session.started", "toggle.commit.option", "view.commit.problem" ]
      }
    }
  }, {
    "id" : "completion",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:finished}" ],
      "event_data" : {
        "additional.async_fn" : [ "{enum#boolean}" ],
        "additional.blanked_impl_member" : [ "{enum#boolean}" ],
        "additional.cfg_disabled" : [ "{enum#boolean}" ],
        "additional.const_fn_or_const" : [ "{enum#boolean}" ],
        "additional.element_kind" : [ "{enum:DERIVE_GROUP|DERIVE|LINT|LINT_GROUP|VARIABLE|ENUM_VARIANT|FIELD_DECL|ASSOC_FN|DEFAULT|MACRO|DEPRECATED|FROM_UNRESOLVED_IMPORT}" ],
        "additional.extern_fn" : [ "{enum#boolean}" ],
        "additional.full_line.added" : [ "{enum#boolean}" ],
        "additional.full_line.avg_entropy" : [ "{regexp#float}" ],
        "additional.full_line.avg_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.avg_probability" : [ "{regexp#float}" ],
        "additional.full_line.context_features.argument_index" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.block_statement_level" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.element_prefix_length" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.has_data_science_imports" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.has_web_imports" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.have_named_arg_left" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.have_named_arg_right" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.have_opening_angle_bracket_left" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.have_opening_brace_left" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.have_opening_bracket_left" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.have_opening_parenthesis_left" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.imports_count" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.is_directly_in_arguments_context" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.is_in_arguments" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.is_in_conditional_statement" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.is_in_for_statement" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.library_imports_count" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.library_imports_ratio" : [ "{regexp#float}" ],
        "additional.full_line.context_features.num_of_prev_qualifiers" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.number_of_arguments_already" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.popular_library_imports_count" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.popular_library_imports_ratio" : [ "{regexp#float}" ],
        "additional.full_line.context_features.prev_neighbour_keyword_1" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.prev_neighbour_keyword_2" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.prev_same_column_keyword_1" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.prev_same_column_keyword_2" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.prev_same_line_keyword_1" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.prev_same_line_keyword_2" : [ "{regexp#integer}" ],
        "additional.full_line.context_size" : [ "{regexp#integer}" ],
        "additional.full_line.enabled" : [ "{enum#boolean}" ],
        "additional.full_line.filter_model_decision" : [ "{enum:SKIP|PASS|RANDOM_PASS|UNAVAILABLE|DISABLED}" ],
        "additional.full_line.filter_model_enabled" : [ "{enum#boolean}" ],
        "additional.full_line.filter_model_score" : [ "{regexp#float}" ],
        "additional.full_line.finished" : [ "{enum#boolean}", "{regexp#integer}" ],
        "additional.full_line.finished_cancelled" : [ "{regexp#integer}" ],
        "additional.full_line.finished_exception" : [ "{regexp#integer}" ],
        "additional.full_line.finished_timed_out" : [ "{regexp#integer}" ],
        "additional.full_line.finished_times" : [ "{regexp#integer}" ],
        "additional.full_line.fl_features_computation_time" : [ "{regexp#integer}" ],
        "additional.full_line.hardware_fast_enough" : [ "{enum#boolean}" ],
        "additional.full_line.inapplicable" : [ "{enum:LANGUAGE_IS_NOT_SUPPORTED|DISABLED_IN_RIDER|DISABLED_LANGUAGE|UNSUPPORTED_COMPLETION_MODE|SLOW_MACHINE|IS_NOT_MAIN_EDITOR|NOT_A_BASIC_COMPLETION|UNSUPPORTED_PLATFORM}", "{enum:THIRD_PARTY_CONFLICT|IN_POWER_SAFE_MODE}" ],
        "additional.full_line.items_analyzed" : [ "{regexp#integer}" ],
        "additional.full_line.items_generated" : [ "{regexp#integer}" ],
        "additional.full_line.items_invalid_critical" : [ "{regexp#integer}" ],
        "additional.full_line.items_invalid_syntax" : [ "{regexp#integer}" ],
        "additional.full_line.items_invalid_total" : [ "{regexp#integer}" ],
        "additional.full_line.items_not_analyzed_timeout" : [ "{regexp#integer}" ],
        "additional.full_line.items_not_analyzed_unknown" : [ "{regexp#integer}" ],
        "additional.full_line.items_proposed" : [ "{regexp#integer}" ],
        "additional.full_line.max_entropy" : [ "{regexp#float}" ],
        "additional.full_line.max_entropy_position" : [ "{regexp#float}" ],
        "additional.full_line.max_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.max_normalized_probability_position" : [ "{regexp#float}" ],
        "additional.full_line.max_probability" : [ "{regexp#float}" ],
        "additional.full_line.max_probability_position" : [ "{regexp#float}" ],
        "additional.full_line.min_entropy" : [ "{regexp#float}" ],
        "additional.full_line.min_entropy_position" : [ "{regexp#float}" ],
        "additional.full_line.min_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.min_normalized_probability_position" : [ "{regexp#float}" ],
        "additional.full_line.min_probability" : [ "{regexp#float}" ],
        "additional.full_line.min_probability_position" : [ "{regexp#float}" ],
        "additional.full_line.num_of_suggestion_references" : [ "{regexp#integer}" ],
        "additional.full_line.proposal_next_line_similarity" : [ "{regexp#float}" ],
        "additional.full_line.proposal_prev_line_similarity" : [ "{regexp#float}" ],
        "additional.full_line.rag_context_computation_time" : [ "{regexp#integer}" ],
        "additional.full_line.rag_context_size" : [ "{regexp#integer}" ],
        "additional.full_line.raw_prefix_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.raw_score" : [ "{regexp#float}" ],
        "additional.full_line.selected" : [ "{enum#boolean}" ],
        "additional.full_line.selected_cache_extension_length" : [ "{regexp#integer}" ],
        "additional.full_line.selected_cache_hit_length" : [ "{regexp#integer}" ],
        "additional.full_line.selected_checks_time" : [ "{regexp#integer}" ],
        "additional.full_line.selected_code_tokens_count" : [ "{regexp#integer}" ],
        "additional.full_line.selected_inference_time" : [ "{regexp#integer}" ],
        "additional.full_line.selected_last_char" : [ "{enum:LETTER|DIGIT|DOT|SPACE|OPENED_BRACKET|CLOSED_BRACKET|TERMINATION}" ],
        "additional.full_line.selected_local_inference_type" : [ "{enum:K_INFERENCE|ONNX_NATIVE|LLAMA_NATIVE}" ],
        "additional.full_line.selected_prefix_length" : [ "{regexp#integer}" ],
        "additional.full_line.selected_provider" : [ "{util#class_name}" ],
        "additional.full_line.selected_score" : [ "{regexp#float}" ],
        "additional.full_line.selected_semantic_state" : [ "{enum:CORRECT|UNKNOWN|INCORRECT_ACCEPTABLE|INCORRECT_CRITICAL}" ],
        "additional.full_line.selected_suffix_length" : [ "{regexp#integer}" ],
        "additional.full_line.selected_syntax_state" : [ "{enum:CORRECT|UNKNOWN|INCORRECT_ACCEPTABLE|INCORRECT_CRITICAL}" ],
        "additional.full_line.selected_tokens_count" : [ "{regexp#integer}" ],
        "additional.full_line.skipped_by_trigger_model" : [ "{regexp#integer}" ],
        "additional.full_line.started" : [ "{enum#boolean}", "{regexp#integer}" ],
        "additional.full_line.stddev_entropy" : [ "{regexp#float}" ],
        "additional.full_line.stddev_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.stddev_probability" : [ "{regexp#float}" ],
        "additional.full_line.suggestion_length" : [ "{regexp#integer}" ],
        "additional.full_line.suggestion_reference_0_from_lib" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_0_in_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_0_in_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_0_in_same_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_0_in_same_file" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_0_in_same_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_0_is_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_0_is_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_1_from_lib" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_1_in_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_1_in_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_1_in_same_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_1_in_same_file" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_1_in_same_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_1_is_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_1_is_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_2_from_lib" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_2_in_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_2_in_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_2_in_same_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_2_in_same_file" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_2_in_same_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_2_is_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_2_is_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_3_from_lib" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_3_in_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_3_in_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_3_in_same_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_3_in_same_file" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_3_in_same_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_3_is_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_3_is_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_4_from_lib" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_4_in_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_4_in_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_4_in_same_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_4_in_same_file" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_4_in_same_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_4_is_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_4_is_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_5_from_lib" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_5_in_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_5_in_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_5_in_same_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_5_in_same_file" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_5_in_same_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_5_is_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_5_is_fun" : [ "{enum#boolean}" ],
        "additional.full_line.token_0_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_0_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_0_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_0_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_0_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_0_length" : [ "{regexp#float}" ],
        "additional.full_line.token_0_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_0_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_0_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_0_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_0_score" : [ "{regexp#float}" ],
        "additional.full_line.token_10_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_10_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_10_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_10_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_10_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_10_length" : [ "{regexp#float}" ],
        "additional.full_line.token_10_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_10_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_10_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_10_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_10_score" : [ "{regexp#float}" ],
        "additional.full_line.token_1_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_1_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_1_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_1_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_1_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_1_length" : [ "{regexp#float}" ],
        "additional.full_line.token_1_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_1_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_1_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_1_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_1_score" : [ "{regexp#float}" ],
        "additional.full_line.token_2_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_2_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_2_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_2_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_2_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_2_length" : [ "{regexp#float}" ],
        "additional.full_line.token_2_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_2_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_2_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_2_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_2_score" : [ "{regexp#float}" ],
        "additional.full_line.token_3_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_3_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_3_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_3_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_3_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_3_length" : [ "{regexp#float}" ],
        "additional.full_line.token_3_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_3_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_3_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_3_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_3_score" : [ "{regexp#float}" ],
        "additional.full_line.token_4_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_4_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_4_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_4_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_4_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_4_length" : [ "{regexp#float}" ],
        "additional.full_line.token_4_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_4_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_4_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_4_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_4_score" : [ "{regexp#float}" ],
        "additional.full_line.token_5_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_5_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_5_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_5_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_5_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_5_length" : [ "{regexp#float}" ],
        "additional.full_line.token_5_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_5_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_5_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_5_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_5_score" : [ "{regexp#float}" ],
        "additional.full_line.token_6_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_6_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_6_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_6_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_6_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_6_length" : [ "{regexp#float}" ],
        "additional.full_line.token_6_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_6_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_6_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_6_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_6_score" : [ "{regexp#float}" ],
        "additional.full_line.token_7_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_7_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_7_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_7_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_7_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_7_length" : [ "{regexp#float}" ],
        "additional.full_line.token_7_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_7_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_7_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_7_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_7_score" : [ "{regexp#float}" ],
        "additional.full_line.token_8_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_8_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_8_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_8_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_8_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_8_length" : [ "{regexp#float}" ],
        "additional.full_line.token_8_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_8_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_8_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_8_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_8_score" : [ "{regexp#float}" ],
        "additional.full_line.token_9_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_9_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_9_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_9_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_9_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_9_length" : [ "{regexp#float}" ],
        "additional.full_line.token_9_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_9_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_9_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_9_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_9_score" : [ "{regexp#float}" ],
        "additional.full_line.tracked" : [ "{enum#boolean}" ],
        "additional.full_line.trigger_model_decision" : [ "{enum:SKIP|TRIGGER|RANDOM_TRIGGER|UNAVAILABLE|DISABLED}", "{enum:PASS|RANDOM_PASS}" ],
        "additional.full_line.trigger_model_enabled" : [ "{enum#boolean}" ],
        "additional.full_line.trigger_model_score" : [ "{regexp#float}" ],
        "additional.full_line.version" : [ "{regexp#version}" ],
        "additional.full_line_completion" : [ "{enum#boolean}" ],
        "additional.inherent_impl_member" : [ "{enum#boolean}" ],
        "additional.iren_model_type" : [ "{enum:default|both|ngram|dobf}" ],
        "additional.iren_probability" : [ "{regexp#float}" ],
        "additional.keyword_kind" : [ "{enum:PUB|PUB_CRATE|PUB_PARENS|LAMBDA_EXPR|ELSE_BRANCH|AWAIT|KEYWORD|NOT_A_KEYWORD}" ],
        "additional.local" : [ "{enum#boolean}" ],
        "additional.lookup_shown_early" : [ "{enum#boolean}" ],
        "additional.ml_performance_enabled" : [ "{enum#boolean}" ],
        "additional.ml_used" : [ "{enum#boolean}" ],
        "additional.operator_method" : [ "{enum#boolean}" ],
        "additional.py_cache_miss" : [ "{enum#boolean}" ],
        "additional.py_package_name" : [ "{enum#python_packages}" ],
        "additional.r_context_type" : [ "{enum#__r_context_type}" ],
        "additional.r_lookup_element_origin" : [ "{enum:ORIGINAL|ML_COMPLETION|MERGED}" ],
        "additional.r_ml_app_version" : [ "{regexp#version}" ],
        "additional.r_ml_enabled" : [ "{enum#boolean}" ],
        "additional.r_ml_n_proposed_variants" : [ "{regexp#integer}" ],
        "additional.r_ml_response_received" : [ "{enum#boolean}" ],
        "additional.r_ml_time_ms" : [ "{regexp#integer}" ],
        "additional.return_type_conforms_expected" : [ "{enum#boolean}" ],
        "additional.rider_item_type" : [ "{enum:Default|TemplateItem|PostfixTemplate|NamedParameter}" ],
        "additional.ruby_lookup_usage_location" : [ "{enum#__ruby_lookup_usage_location}", "{enum:PRY|UNKNOWN}" ],
        "additional.self_type_compatible" : [ "{enum#boolean}" ],
        "additional.spellchecker" : [ "{enum#boolean}" ],
        "additional.total_ml_time" : [ "{regexp#integer}" ],
        "additional.unsafe_fn" : [ "{enum#boolean}" ],
        "additional.version" : [ "{regexp#version}" ],
        "alphabetically" : [ "{enum#boolean}" ],
        "backspaces" : [ "{regexp#integer}" ],
        "completion_char" : [ "{enum#__completion_char}" ],
        "contributor" : [ "{util#class_name}" ],
        "current_file" : [ "{util#current_file}" ],
        "dumb_finish" : [ "{enum#boolean}" ],
        "dumb_start" : [ "{enum#boolean}" ],
        "duration" : [ "{regexp#integer}" ],
        "editor_kind" : [ "{enum:UNTYPED|MAIN_EDITOR|CONSOLE|PREVIEW|DIFF}" ],
        "finish_type" : [ "{enum:TYPED|EXPLICIT|CANCELED_EXPLICITLY|CANCELED_BY_TYPING}" ],
        "iren_model_type" : [ "{enum:default|ngram}" ],
        "iren_probability" : [ "{regexp#float}" ],
        "lang" : [ "{util#lang}" ],
        "ml_used" : [ "{enum#boolean}" ],
        "order_added_correct_element" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "psi_reference" : [ "{util#class_name}" ],
        "query_length" : [ "{regexp#integer}" ],
        "quick_doc_auto_show" : [ "{enum#boolean}" ],
        "quick_doc_scrolled" : [ "{enum#boolean}" ],
        "quick_doc_shown" : [ "{enum#boolean}" ],
        "r_context_type" : [ "{enum#__r_context_type}" ],
        "r_lookup_element_origin" : [ "{enum:ORIGINAL|ML_COMPLETION|MERGED}" ],
        "r_ml_app_version" : [ "{regexp#version}" ],
        "r_ml_enabled" : [ "{enum#boolean}" ],
        "r_ml_model_version" : [ "{regexp#version}" ],
        "r_ml_n_proposed_variants" : [ "{regexp#integer}" ],
        "r_ml_response_received" : [ "{enum#boolean}" ],
        "r_ml_time_ms" : [ "{regexp#integer}" ],
        "ruby_lookup_usage_location" : [ "{enum#__ruby_lookup_usage_location}" ],
        "schema" : [ "{enum:Maven_Groovy|Gradle|Maven|fxml}", "{util#file_type_schema}" ],
        "selected_index" : [ "{regexp#integer}" ],
        "selection_changed" : [ "{regexp#integer}" ],
        "spellchecker" : [ "{enum#boolean}" ],
        "time_to_compute_correct_element" : [ "{regexp#integer}" ],
        "time_to_show" : [ "{regexp#integer}" ],
        "time_to_show_correct_element" : [ "{regexp#integer}" ],
        "time_to_show_first_element" : [ "{regexp#integer}" ],
        "token_length" : [ "{regexp#integer}" ],
        "total_ml_time" : [ "{regexp#integer}" ],
        "typing" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__completion_char" : [ "ENTER", "TAB", "COMPLETE_STATEMENT", "AUTO_INSERT", "OTHER" ],
        "__r_context_type" : [ "IDENTIFIER", "NAMESPACE", "DOLLAR_ACCESS", "AT_ACCESS", "IMPORT", "OPERATOR", "UNKNOWN" ],
        "__ruby_lookup_usage_location" : [ "COMMON", "DEBUG", "EVAL", "IRB", "RAILS" ]
      }
    }
  }, {
    "id" : "completion.postfix",
    "builds" : [ ],
    "versions" : [ {
      "from" : "20"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "provider" : [ "{util#completion_provider_template}", "{util#completion_template}" ],
        "template" : [ "{util#completion_template}" ]
      },
      "enums" : {
        "__event_id" : [ "no.provider", "custom", "builtin.java", "builtin.sql", "expanded" ]
      }
    }
  }, {
    "id" : "coverage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "annotated_classes" : [ "{regexp#integer}" ],
        "can_hide_fully_covered" : [ "{enum#boolean}" ],
        "can_show_only_modified" : [ "{enum#boolean}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "excludes" : [ "{regexp#integer}" ],
        "generation_ms" : [ "{regexp#integer}" ],
        "hide_fully_covered" : [ "{enum#boolean}" ],
        "includes" : [ "{regexp#integer}" ],
        "loaded_classes" : [ "{regexp#integer}" ],
        "runner" : [ "{enum:emma|jacoco|idea}", "{enum#__runner}", "{enum:IJCSampling|IJCTracing|IJCTracingTestTracking|JaCoCo|Emma}" ],
        "runners" : [ "{enum:idea|jacoco|Emma|PhpCoverage|utPlSqlCoverageRunner|JestJavaScriptTestRunnerCoverage|rcov|DartCoverageRunner|WipCoverageRunner|VitestJavaScriptTestRunnerCoverage|jacoco_xml_report|MochaJavaScriptTestRunnerCoverage|GoCoverage|KarmaJavaScriptTestRunnerCoverage|coverage.py}" ],
        "show_only_modified" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "html.generated", "report.loaded", "started", "report.built", "view.opened", "report.imported" ],
        "__runner" : [ "PhpCoverage", "WipCoverageRunner", "utPlSqlCoverageRunner", "VitestJavaScriptTestRunnerCoverage", "jacoco_xml_report", "JestJavaScriptTestRunnerCoverage", "MochaJavaScriptTestRunnerCoverage", "rcov", "GoCoverage", "KarmaJavaScriptTestRunnerCoverage", "DartCoverageRunner", "coverage.py" ]
      }
    }
  }, {
    "id" : "cpp.environment.errors",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:tool.not.found}" ],
      "event_data" : {
        "tool" : [ "{enum:CMake}" ]
      }
    }
  }, {
    "id" : "cpp.toolchains.counter",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:detected}" ],
      "event_data" : {
        "number" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "create.directory.dialog",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:completion.variant.chosen}" ],
      "event_data" : {
        "contributor" : [ "{enum:third.party|GradleDirectoryCompletionContributor|MavenDirectoryCompletionContributor}", "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "customize.wizard",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "group" : [ "{enum:Java_Frameworks|Web_Development|Version_Controls|Test_Tools|Application_Servers|Clouds|Swing|Android|Database_Tools|Other_Tools|Plugin_Development|Build_Tools}" ],
        "page" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "timestamp" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "remaining.pages.skipped", "WizardDisplayed", "UIThemeChanged", "DesktopEntryCreated", "LauncherScriptCreated", "BundledPluginGroupDisabled", "BundledPluginGroupEnabled", "BundledPluginGroupCustomized", "FeaturedPluginInstalled" ]
      }
    }
  }, {
    "id" : "cwm.gateway",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:guestDownload.started|guestDownload.finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "isSucceeded" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "cwm.lifecycle",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "27"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "client_id" : [ "{regexp#hash}" ],
        "connectionType" : [ "{enum:ws_relay|p2p_quic|direct_tcp|unknown}", "{enum:turn_relay_quic}" ],
        "disconnectsCount" : [ "{regexp#integer}" ],
        "guestsCount" : [ "{regexp#integer}" ],
        "id" : [ "{regexp#integer}" ],
        "isUnattended" : [ "{enum#boolean}" ],
        "mode" : [ "{enum:Readonly|EditFiles|FullAccess|Custom}" ],
        "parentProductCode" : [ "{enum:|unknown|IU|RM|WS|PS|PY|DS|OC|CL|DB|RD|GO|GW}" ],
        "participantsMax" : [ "{regexp#integer}" ],
        "participantsSize" : [ "{enum:OneOnOne|Group}" ],
        "permissions.files" : [ "{enum:Readonly|FullAccess}" ],
        "permissions.mode" : [ "{enum:Readonly|EditFiles|FullAccess|Custom}" ],
        "permissions.other_tw" : [ "{enum:Disabled|Readonly|FullAccess}" ],
        "permissions.run" : [ "{enum:Disabled|Readonly|FullAccess}" ],
        "permissions.terminal" : [ "{enum:Disabled|Readonly|Request|FullAccess}" ],
        "permissions_changed.files" : [ "{enum:Readonly|FullAccess}" ],
        "permissions_changed.mode" : [ "{enum:Readonly|EditFiles|FullAccess|Custom}" ],
        "permissions_changed.other_tw" : [ "{enum:Disabled|Readonly|FullAccess}" ],
        "permissions_changed.run" : [ "{enum:Disabled|Readonly|FullAccess}" ],
        "permissions_changed.terminal" : [ "{enum:Disabled|Readonly|Request|FullAccess}" ],
        "permissions_request_result" : [ "{enum:Approved|Declined|Ignored}" ],
        "permissions_requested" : [ "{enum:FULL_ACCESS|EDIT_FILES}" ],
        "pingDirect" : [ "{regexp#integer}" ],
        "pingUiThread" : [ "{regexp#integer}" ],
        "place" : [ "{util#place}" ],
        "sessionDurationMinutes" : [ "{regexp#integer}" ],
        "sessionDurationType" : [ "{enum:Below15mins|Below25mins|Below1hr|Above1hr}" ],
        "sessionId" : [ "{regexp#hash}" ],
        "telephonyEnabled" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "connected", "finished", "onCircleLeftClickStart", "onCircleLeftClickStop", "onCircleRightClick", "onEditorFollowingLabelResume", "onEditorFollowingLabelStop", "onEditorFullSyncLabelStop", "onReconnection", "sessionCreated", "sessionTerminated", "onReconnectionFailed", "sessionFinished", "sessionStarted", "sessionExpired", "onConnectionFailed", "onPermissionsChanged", "guest.finished", "guest.connected", "guest.ping", "onPermissionsRequested", "onPermissionsRequestFinished" ]
      }
    }
  }, {
    "id" : "cwm.telephony",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "telephonyEnabled" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "cwmSessionEnded", "cwmSessionStarted", "enabledFromAction", "leaveSession", "showCallWindow", "leaveCall", "showPortForwardingWindow" ]
      }
    }
  }, {
    "id" : "cwm.telephony.devices",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "8"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "cameraEnabled.finished", "cameraEnabled.started", "microphoneEnabled.finished", "microphoneEnabled.started", "voiceCallJoined.finished", "voiceCallJoined.started", "screenSharingEnabled.started", "screenSharingEnabled.finished" ]
      }
    }
  }, {
    "id" : "daemon",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:finished}" ],
      "event_data" : {
        "canceled" : [ "{enum#boolean}" ],
        "dumb_mode" : [ "{enum#boolean}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "entireFileHighlighted" : [ "{enum#boolean}" ],
        "errors" : [ "{regexp#integer}" ],
        "file_id" : [ "{regexp#integer}" ],
        "file_type" : [ "{util#file_type}" ],
        "full_duration_since_started_ms" : [ "{regexp#integer}" ],
        "highlighting_completed" : [ "{enum#boolean}" ],
        "lines" : [ "{regexp#integer}" ],
        "segment_duration_ms" : [ "{regexp#integer}" ],
        "warnings" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "daemon.code.vision",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:vcs.annotation.calculation|code.vision.duration}" ],
      "event_data" : {
        "histogram" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "provider_class" : [ "{util#class_name}" ],
        "size" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "database.oracle.debug",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started|finished}" ],
      "event_data" : {
        "result-state" : [ "{enum:state_completed|state_fail|state_finished|state_broken}", "{enum#__result-state}" ],
        "stepping-mode" : [ "{enum:1|2}" ],
        "stepping-pauseAtBegin" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__result-state" : [ "state_starting_up", "state_resuming", "state_relaxing", "state_kicked_off", "state_running", "state_completing", "state_asleep", "state_finishing" ]
      }
    }
  }, {
    "id" : "db.connections",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "data_source_id" : [ "{regexp#hash}" ],
        "dbms" : [ "{util#dbms}", "{enum:CLICKHOUSE|INGRES|ZEN|MARIADB|SYNAPSE|SPARK|MEMSQL|PRESTO|ORACLE|ATHENA|SYBASE|IGNITE|TIDB|DB2_IS|INFORMIX|DB2_LUW|TERADATA|COUCHBASE|OPENEDGE|PHOENIX|VITESS|GITBASE|MSSQL|MSSQL_LOCALDB|GREENPLUM|BIGQUERY|IRIS|POSTGRES|MONGO|SQLITE|CASSANDRA|NETEZZA|DYNAMO|IMPALA|DB2_ZOS|TRINO|MYSQL_AURORA|HANA|TIBERO|AZURE|HIVE|DERBY|VERTICA|CLOUD_SPANNER|OCEANBASE|FRONTBASE|MYSQL|H2|YUGABYTE|HSQLDB|DB2|EXASOL|FILEMAKER|DENODO|REDIS|SNOWFLAKE|MONET|REDSHIFT|UNKNOWN|FIREBIRD|COCKROACH}" ],
        "error_code" : [ "{regexp#integer}" ],
        "failed" : [ "{enum#boolean}" ],
        "sql_state" : [ "{regexp:[0-9A-Z ]{5}}" ],
        "type" : [ "{enum:CREATED|MODIFIED_IN_DIALOG|REMOVED}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "connection.test.started", "connection.test.completed", "connection.failed", "data.source.modified", "connection.succeeded" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "connection.test.started",
      "fields" : [ "data_source_id" ]
    }, {
      "event" : "connection.test.completed",
      "fields" : [ "data_source_id" ]
    }, {
      "event" : "data.source.modified",
      "fields" : [ "data_source_id" ]
    }, {
      "event" : "connection.failed",
      "fields" : [ "data_source_id" ]
    }, {
      "event" : "connection.succeeded",
      "fields" : [ "data_source_id" ]
    } ]
  }, {
    "id" : "db.data.grid.statistics",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "dbms" : [ "{util#dbms}", "{enum:CLICKHOUSE|INGRES|ZEN|MARIADB|SYNAPSE|SPARK|MEMSQL|PRESTO|ORACLE|ATHENA|SYBASE|IGNITE|TIDB|DB2_IS|INFORMIX|DB2_LUW|TERADATA|COUCHBASE|OPENEDGE|PHOENIX|VITESS|GITBASE|MSSQL|MSSQL_LOCALDB|GREENPLUM|BIGQUERY|IRIS|POSTGRES|MONGO|SQLITE|CASSANDRA|NETEZZA|DYNAMO|IMPALA|DB2_ZOS|TRINO|MYSQL_AURORA|HANA|TIBERO|AZURE|HIVE|DERBY|VERTICA|CLOUD_SPANNER|OCEANBASE|FRONTBASE|MYSQL|H2|YUGABYTE|HSQLDB|DB2|EXASOL|FILEMAKER|DENODO|REDIS|SNOWFLAKE|MONET|REDSHIFT|UNKNOWN|FIREBIRD|COCKROACH}" ]
      },
      "enums" : {
        "__event_id" : [ "value_editor_open", "aggregate_view_open", "extract_to_file_action", "where_usage", "extract_to_clipboard_action", "column_sorting_toggle", "order_by_usage", "record_view_open" ]
      }
    }
  }, {
    "id" : "db.datasource.config",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "auth-provider" : [ "{util#class_name}" ],
        "auto-commit" : [ "{enum#boolean}" ],
        "auto-sync" : [ "{enum#boolean}" ],
        "before-tasks" : [ "{enum#boolean}" ],
        "custom-driver" : [ "{enum#boolean}" ],
        "dbms" : [ "{enum#__dbms}", "{util#dbms}", "{enum:MSSQL_LOCALDB}", "{enum:TIDB|YUGABYTE}", "{enum:ZEN}", "{enum:VITESS}", "{enum:REDIS}", "{enum:OCEANBASE}", "{enum:IRIS}", "{enum:DENODO}", "{enum:DYNAMO}" ],
        "external-data" : [ "{enum#boolean}" ],
        "init-script" : [ "{enum#boolean}" ],
        "introspect" : [ "{enum:no_sources|user_sources|user_and_system_sources}" ],
        "introspection-level" : [ "{enum:l1|l2|l3}", "{enum:auto|level1|level3|level2}" ],
        "legacy-introspector" : [ "{enum#boolean}" ],
        "mapped-to-ddl" : [ "{enum#boolean}" ],
        "option-all-databases" : [ "{enum#boolean}" ],
        "option-all-schemas" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "read-only" : [ "{enum#boolean}" ],
        "schema-control" : [ "{enum:automatic|manual|forbid}" ],
        "ssh" : [ "{enum#boolean}" ],
        "ssl" : [ "{enum#boolean}" ],
        "version" : [ "{regexp#version}", "{regexp#integer}.-{regexp#version}" ]
      },
      "enums" : {
        "__dbms" : [ "ORACLE", "MEMSQL", "MARIADB", "MYSQL", "POSTGRES", "REDSHIFT", "GREENPLUM", "MSSQL", "AZURE", "SYBASE", "DB2_LUW", "DB2", "SQLITE", "HSQLDB", "H2", "DERBY", "EXASOL", "CLICKHOUSE", "CASSANDRA", "VERTICA", "HIVE", "SPARK", "HANA", "FIREBIRD", "PRESTO", "INFORMIX", "IMPALA", "NETEZZA", "PHOENIX", "SNOWFLAKE", "INGRES", "TERADATA", "OPENEDGE", "TIBERO", "FILEMAKER", "FRONTBASE", "MONGO", "UNKNOWN", "SYNAPSE", "DB2_ZOS", "GITBASE", "TRINO", "MYSQL_AURORA", "ATHENA", "BIGQUERY", "IGNITE", "DB2_IS", "MONET", "CLOUD_SPANNER", "COUCHBASE", "COCKROACH" ],
        "__event_id" : [ "MYSQL", "ORACLE", "POSTGRES", "UNKNOWN", "SQLITE", "MARIADB", "DB2_LUW", "HIVE", "CLICKHOUSE", "H2", "FIREBIRD", "CASSANDRA", "MSSQL", "REDSHIFT", "DB2", "SNOWFLAKE", "VERTICA", "SPARK", "SYBASE", "PRESTO", "IMPALA", "datasource" ]
      }
    }
  }, {
    "id" : "db.datasource.selections",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:option.all.influenced|matching.changed|selection.changed}" ],
      "event_data" : {
        "count_namespaces_all" : [ "{regexp#integer}" ],
        "count_namespaces_delta" : [ "{regexp#integer}" ],
        "count_namespaces_new" : [ "{regexp#integer}" ],
        "count_namespaces_old" : [ "{regexp#integer}" ],
        "count_plain_new" : [ "{regexp#integer}" ],
        "count_plain_old" : [ "{regexp#integer}" ],
        "count_regex_new" : [ "{regexp#integer}" ],
        "count_regex_old" : [ "{regexp#integer}" ],
        "db_hash" : [ "{regexp#short_hash}" ],
        "db_is_current" : [ "{enum#boolean}" ],
        "dbms" : [ "{enum:CLICKHOUSE|INGRES|ZEN|MARIADB|SYNAPSE|SPARK|MEMSQL|PRESTO|ORACLE|ATHENA|SYBASE|IGNITE|TIDB|DB2_IS|INFORMIX|DB2_LUW|TERADATA|COUCHBASE|OPENEDGE|PHOENIX|VITESS|GITBASE|MSSQL|MSSQL_LOCALDB|GREENPLUM|BIGQUERY|IRIS|POSTGRES|MONGO|SQLITE|CASSANDRA|NETEZZA|IMPALA|DB2_ZOS|TRINO|MYSQL_AURORA|HANA|TIBERO|AZURE|HIVE|DERBY|VERTICA|CLOUD_SPANNER|OCEANBASE|FRONTBASE|MYSQL|H2|YUGABYTE|HSQLDB|DB2|EXASOL|FILEMAKER|DENODO|REDIS|SNOWFLAKE|MONET|REDSHIFT|UNKNOWN|FIREBIRD|COCKROACH}", "{util#dbms}", "{enum:DYNAMO}" ],
        "ds_hash" : [ "{regexp#short_hash}" ],
        "option_all" : [ "{enum:LeavingOff|SwitchingOn|LeavingOn|SwitchingOff}" ],
        "option_current" : [ "{enum:LeavingOff|SwitchingOn|LeavingOn|SwitchingOff}" ],
        "seance_id" : [ "{regexp#integer}" ],
        "unit_kind" : [ "{enum:UnitDatabase|UnitSchema}" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "selection.changed",
      "fields" : [ "db_hash", "ds_hash" ]
    }, {
      "event" : "option.all.influenced",
      "fields" : [ "ds_hash" ]
    }, {
      "event" : "matching.changed",
      "fields" : [ "db_hash", "ds_hash" ]
    } ]
  }, {
    "id" : "db.ddl.dialects",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "GenericSQL", "OracleSqlPlus", "DB2", "PostgreSQL", "MySQL", "SQLite", "SparkSQL", "MariaDB", "H2", "Oracle", "TSQL", "Redshift" ]
      }
    }
  }, {
    "id" : "db.ide.config",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:config}" ],
      "event_data" : {
        "single_stripe" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "db.import",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "dbms" : [ "{util#dbms}", "{enum:CLICKHOUSE|INGRES|ZEN|MARIADB|SYNAPSE|SPARK|MEMSQL|PRESTO|ORACLE|ATHENA|SYBASE|IGNITE|TIDB|DB2_IS|INFORMIX|DB2_LUW|TERADATA|COUCHBASE|OPENEDGE|PHOENIX|VITESS|GITBASE|MSSQL|MSSQL_LOCALDB|GREENPLUM|BIGQUERY|IRIS|POSTGRES|MONGO|SQLITE|CASSANDRA|NETEZZA|DYNAMO|IMPALA|DB2_ZOS|TRINO|MYSQL_AURORA|HANA|TIBERO|AZURE|HIVE|DERBY|VERTICA|CLOUD_SPANNER|OCEANBASE|FRONTBASE|MYSQL|H2|YUGABYTE|HSQLDB|DB2|EXASOL|FILEMAKER|DENODO|REDIS|SNOWFLAKE|MONET|REDSHIFT|UNKNOWN|FIREBIRD|COCKROACH}" ],
        "dialog_id" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "existing_table" : [ "{enum#boolean}" ],
        "failed" : [ "{enum#boolean}" ],
        "first_column_is_header" : [ "{enum#boolean}" ],
        "first_row_is_header" : [ "{enum:NO_HEADER|AS_DATA_ROW|SEPARATE}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "import_id" : [ "{regexp#integer}" ],
        "insert_time_ms" : [ "{regexp#integer}" ],
        "invalid_records" : [ "{regexp#integer}" ],
        "invocation_type" : [ "{enum:JUST_SHOW_DIALOG|IMPORT_ACTION_ON_FILE|COPY_ACTION_ON_GRID|IMPORT_ACTION_ON_DATABASE_OBJECT|COPY_ACTION_ON_DATABASE_OBJECT|DND_DATABASE_ON_DATABASE|DND_FILE_ON_DATABASE|NO_DIALOG}" ],
        "ok_clicked" : [ "{enum#boolean}" ],
        "read_time_ms" : [ "{regexp#integer}" ],
        "record_separator" : [ "{regexp:\\\\[nt]|[,;|]|<space>|\\|\\|}" ],
        "records" : [ "{regexp#integer}" ],
        "result" : [ "{enum:OK|CANCELLED|FAILED}" ],
        "source_size" : [ "{regexp#integer}" ],
        "source_type" : [ "{enum:CSV|DATABASE|CACHE|UNKNOWN}" ],
        "step_id" : [ "{regexp#integer}" ],
        "value_separator" : [ "{regexp:\\\\[nt]|[,;|]|<space>|\\|\\|}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "started", "finished", "csv.import.parameters", "dialog_closed", "dialog_shown", "import_dialog.import.started", "import_dialog.started", "import_dialog.import.finished", "import_dialog.finished", "import_dialog.import.csv.import.parameters" ]
      }
    }
  }, {
    "id" : "db.introspection",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "access_dba" : [ "{enum#boolean}" ],
        "auxiliary_duration_ms" : [ "{regexp#integer}" ],
        "circumvent_dbe5060" : [ "{enum#boolean}" ],
        "dbms" : [ "{util#dbms}", "{enum:CLICKHOUSE|INGRES|ZEN|MARIADB|SYNAPSE|SPARK|MEMSQL|PRESTO|ORACLE|ATHENA|SYBASE|IGNITE|TIDB|DB2_IS|INFORMIX|DB2_LUW|TERADATA|COUCHBASE|OPENEDGE|PHOENIX|VITESS|GITBASE|MSSQL|MSSQL_LOCALDB|GREENPLUM|BIGQUERY|IRIS|POSTGRES|MONGO|SQLITE|CASSANDRA|NETEZZA|DYNAMO|IMPALA|DB2_ZOS|TRINO|MYSQL_AURORA|HANA|TIBERO|AZURE|HIVE|DERBY|VERTICA|CLOUD_SPANNER|OCEANBASE|FRONTBASE|MYSQL|H2|YUGABYTE|HSQLDB|DB2|EXASOL|FILEMAKER|DENODO|REDIS|SNOWFLAKE|MONET|REDSHIFT|UNKNOWN|FIREBIRD|COCKROACH}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "failed" : [ "{enum#boolean}" ],
        "fast" : [ "{enum#boolean}" ],
        "fetch_longs_without_xml" : [ "{enum#boolean}" ],
        "has_sad" : [ "{enum#boolean}" ],
        "has_scr" : [ "{enum#boolean}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "introspection_session_id" : [ "{regexp#integer}" ],
        "level_1_duration_ms" : [ "{regexp#integer}" ],
        "level_2_duration_ms" : [ "{regexp#integer}" ],
        "level_3_duration_ms" : [ "{regexp#integer}" ],
        "no_stage_properties" : [ "{enum#boolean}" ],
        "result" : [ "{enum:OK|WARN|CANCELLED|CONNECTION_FAILED|FAILED}" ],
        "show_limit" : [ "{regexp#integer}" ],
        "skip_server_objects" : [ "{enum#boolean}" ],
        "step_id" : [ "{regexp#integer}" ],
        "total_objects" : [ "{regexp#integer}" ],
        "total_schemas" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}" ],
        "visible_schemas" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "started", "snowflake.introspection.parameters", "finished", "mysql.introspection.parameters", "oracle.introspection.parameters", "introspection.started", "introspection.finished", "introspection.mysql.parameters", "introspection.oracle.parameters", "introspection.snowflake.parameters" ]
      }
    }
  }, {
    "id" : "db.managers",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:manager}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "name" : [ "{enum:local|sql|android}" ]
      }
    }
  }, {
    "id" : "db.model.loading",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "data_source_id" : [ "{regexp#hash}" ],
        "dbms" : [ "{util#dbms}", "{enum:CLICKHOUSE|INGRES|ZEN|MARIADB|SYNAPSE|SPARK|MEMSQL|PRESTO|ORACLE|ATHENA|SYBASE|IGNITE|TIDB|DB2_IS|INFORMIX|DB2_LUW|TERADATA|COUCHBASE|OPENEDGE|PHOENIX|VITESS|GITBASE|MSSQL|MSSQL_LOCALDB|GREENPLUM|BIGQUERY|IRIS|POSTGRES|MONGO|SQLITE|CASSANDRA|NETEZZA|DYNAMO|IMPALA|DB2_ZOS|TRINO|MYSQL_AURORA|HANA|TIBERO|AZURE|HIVE|DERBY|VERTICA|CLOUD_SPANNER|OCEANBASE|FRONTBASE|MYSQL|H2|YUGABYTE|HSQLDB|DB2|EXASOL|FILEMAKER|DENODO|REDIS|SNOWFLAKE|MONET|REDSHIFT|UNKNOWN|FIREBIRD|COCKROACH}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "loading_result" : [ "{enum:FAST|FAST_FAILED_TO_SLOW|SLOW|CANCELLED|FAILED}" ],
        "step_id" : [ "{regexp#integer}" ],
        "total_objects" : [ "{regexp#integer}" ],
        "total_schemas" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}" ],
        "visible_schemas" : [ "{regexp#integer}" ],
        "was_migrated" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "finished", "started", "loading.started", "loading.finished", "loading.loading_data_source.finished", "loading.loading_data_source.started" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "loading.loading_data_source.finished",
      "fields" : [ "data_source_id" ]
    }, {
      "event" : "started",
      "fields" : [ "data_source_id" ]
    }, {
      "event" : "finished",
      "fields" : [ "data_source_id" ]
    } ]
  }, {
    "id" : "db.schema.diff",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:used}" ],
      "event_data" : {
        "origin_type" : [ "{enum:REGULAR|DDL}" ],
        "target_type" : [ "{enum:REGULAR|DDL}" ]
      }
    }
  }, {
    "id" : "db.sessions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:switched}" ],
      "event_data" : {
        "cur_client_count" : [ "{enum:ZERO|ONE|MANY}" ],
        "cur_single_client_type" : [ "{enum:GRID|CONSOLE|FILE}" ],
        "new_client_type" : [ "{enum:GRID|CONSOLE|FILE}" ]
      }
    }
  }, {
    "id" : "db.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:exec_option}" ],
      "event_data" : {
        "index" : [ "{regexp#integer}" ],
        "inside" : [ "{enum:show_chooser|subquery|smallest|largest|batch|whole_script|script_tail}" ],
        "new_tab" : [ "{enum#boolean}" ],
        "outside" : [ "{enum:nothing|whole_script|script_tail}" ],
        "selection" : [ "{enum:exactly_one|exactly_script|smart_expand}" ]
      }
    }
  }, {
    "id" : "debugger.attach.dialog",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "debuggersFilterSet" : [ "{enum#boolean}" ],
        "hostType" : [ "{enum:LOCAL|REMOTE}", "{enum:DOCKER}" ],
        "isMainAction" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "searchFieldUsed" : [ "{enum#boolean}" ],
        "selectedDebugger" : [ "{util#class_name}" ],
        "viewType" : [ "{enum:LIST|TREE}" ]
      },
      "enums" : {
        "__event_id" : [ "attach.button.pressed", "host.switched", "view.switched", "search.filter.used", "debuggers.filter.set" ]
      }
    }
  }, {
    "id" : "debugger.breakpoints",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "suspendPolicy" : [ "{enum:ALL|THREAD|NONE}" ],
        "type" : [ "{util#breakpoint}" ]
      },
      "enums" : {
        "__event_id" : [ "using.log.expression", "using.log.message", "using.dependent", "using.temporary", "using.log.stack", "using.condition", "not.default.suspend", "using.groups", "total", "total.non.suspending", "total.disabled" ]
      }
    }
  }, {
    "id" : "debugger.breakpoints.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:breakpoint.added|breakpoint.verified}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "time" : [ "{regexp#integer}" ],
        "type" : [ "{util#breakpoint}" ],
        "within_session" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "debugger.breakpoints.usage.java",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:line.breakpoint.added}" ],
      "event_data" : {
        "kind" : [ "{enum:LINE|LAMBDA|LINE_AND_LAMBDAS|RETURN}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "debugger.evaluate.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "input_event" : [ "{util#shortcut}" ],
        "mode" : [ "{enum:CODE_FRAGMENT|EXPRESSION}" ]
      },
      "enums" : {
        "__event_id" : [ "dialog.open", "evaluate", "mode.switch", "inline.evaluate", "history.show", "history.choose", "watch.from.inline.add", "inline.input.focus" ]
      }
    }
  }, {
    "id" : "debugger.frames.view",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:selected}" ],
      "event_data" : {
        "view_id" : [ "{enum:UNKNOWN|Default|Threads|SideBySide|FramesOnly}", "{enum:Hidden}" ]
      }
    }
  }, {
    "id" : "debugger.performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:execution.point.reached|execution.point.breakpoint.reached}" ],
      "event_data" : {
        "action_id" : [ "{util#action}", "{enum#action}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "file_type" : [ "{util#file_type}" ]
      }
    }
  }, {
    "id" : "debugger.settings.ide",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "forceClassicVm", "disableJit", "showAlternativeSource", "hotswapInBackround", "enableMemoryAgent", "alwaysSmartStepInto", "skipConstructors", "skipGetters", "skipClassloaders", "compileBeforeHotswap", "hotswapHangWarningEnabled", "watchReturnValues", "autoVariablesMode", "killProcessImmediately", "resumeOnlyCurrentThread", "instrumentingAgent", "hideStackFramesUsingSteppingFilter" ]
      }
    }
  }, {
    "id" : "debugger.ui.experiment",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:start|stop}" ],
      "event_data" : {
        "group" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "defender",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:protection|auto_config|notification}" ],
      "event_data" : {
        "reaction" : [ "{enum:Auto|Manual|ProjectMute|GlobalMute}" ],
        "status" : [ "{enum:Skipped|Enabled|Disabled|Error}" ],
        "success" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "deployment.activities",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "finish_time_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "scenario" : [ "{enum#scenario}" ],
        "start_time_ms" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "autoupload.session.finished", "download.action.finished", "download.action.started", "upload.action.finished", "upload.action.started", "create.project.from.existing.sources" ],
        "scenario" : [ "NoServer", "LocalServer", "MountedServer", "FtpSftpServer" ]
      }
    }
  }, {
    "id" : "deployment.publish.config",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum#value}", "{regexp#permission}" ]
      },
      "enums" : {
        "__event_id" : [ "AutoUpload.external.changes", "Overwrite.up.to.date.files", "Delete.target.items", "Create.empty.dirs", "Prompt.on.local.overwrite", "Notify.remote.changes", "AutoUpload", "Prompt.on.remote.overwrite", "Logging.verbosity", "Permissions.on.files", "Permissions.on.folder" ],
        "value" : [ "always", "on_explicit_save", "never", "none", "check_timestamp", "check_content", "errors", "brief", "details" ]
      },
      "regexps" : {
        "permission" : "-?[0-9]{1,3}"
      }
    }
  }, {
    "id" : "deployment.serverSettingsUI",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "decision" : [ "{enum#decision}" ],
        "level" : [ "{enum#level}" ]
      },
      "enums" : {
        "__event_id" : [ "NewGroupVisibilityCreated", "NewGroupVisibilitySwitched", "AutodetectPathClicked", "ProjectIDELevelCheckBoxClicked", "defaultServerSettingWithAutoUploadOnSwitched", "defaultServerSettingWithAutoUploadOnDisabled" ],
        "decision" : [ "explicit", "silent", "cancelled" ],
        "level" : [ "project", "IDE" ]
      }
    }
  }, {
    "id" : "deployment.servers",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:server}" ],
      "event_data" : {
        "auth" : [ "{enum:password|key_pair|open_ssh}" ],
        "compatibilityMode" : [ "{enum#boolean}" ],
        "hiddenFiles" : [ "{enum#boolean}" ],
        "mappingsDeploy" : [ "{regexp#integer}" ],
        "mappingsTogether" : [ "{regexp#integer}" ],
        "mappingsWeb" : [ "{regexp#integer}" ],
        "passiveMode" : [ "{enum#boolean}" ],
        "rootPath" : [ "{enum:nontrivial|trivial|empty}" ],
        "rootPathSize" : [ "{regexp#integer}" ],
        "rsync" : [ "{enum#boolean}" ],
        "sudo" : [ "{enum#boolean}" ],
        "type" : [ "{enum:ftp|ftps|sftp|mount|local}", "{enum:webdav}" ]
      }
    }
  }, {
    "id" : "devcontainers",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:config.exists}" ]
    }
  }, {
    "id" : "devcontainers.gateway.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:connection.established|connection.failed|container.created|container.creation.failed}" ],
      "event_data" : {
        "error" : [ "{util#class_name}" ],
        "failure_class" : [ "{util#class_name}" ],
        "failure_line" : [ "{regexp#integer}" ],
        "git_clone" : [ "{enum#boolean}" ],
        "is_first" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "ssh" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "diagram.usages.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:show.diagram}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "provider" : [ "{util#diagram_provider}" ]
      }
    }
  }, {
    "id" : "directoryIndex",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "buildRequest" : [ "{enum:INITIAL|BRANCH_BUILD|FULL_REBUILD|INCREMENTAL_UPDATE}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "part" : [ "{enum:MAIN|ORDER_ENTRY_GRAPH}" ],
        "reason" : [ "{enum:ROOT_MODEL|VFS_CHANGE|ADDITIONAL_LIBRARIES_PROVIDER}" ]
      },
      "enums" : {
        "__event_id" : [ "reset", "building.finished", "building.additionalLibraryRootsProvider", "building.workspaceModel", "building.exclusionPolicy", "building.finalizing", "building.sdk", "building.started" ]
      }
    }
  }, {
    "id" : "django.manage.py.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:command.executed}" ],
      "event_data" : {
        "command_type" : [ "{enum:VERSION|CHECK|COMPILEMESSAGES|CREATECACHETABLE|DBSHELL|DIFFSETTINGS|DUMPDATA|FLUSH|MAKEMESSAGES|MAKEMIGRATIONS|MIGRATE|RUNSERVER|SHELL|SQL|SQLALL|SQLCLEAR|SQLCUSTOM|SQLDROPINDEXES|SQLFLUSH|SQLINDEXES|SQLMIGRATE|SQLSEQUENCERESET|SQUASHMIGRATIONS|STARTAPP|STARTPROJECT|SYNCDB|TEST|TESTSERVER|VALIDATE|CHANGEPASSWORD|CREATESUPERUSER|OGRINSPECT|CLEARSESSIONS|PING_GOOGLE|COLLECTSTATIC|OTHER}" ]
      }
    }
  }, {
    "id" : "django.structure.performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:first.build.finished}" ],
      "event_data" : {
        "admins_collection_duration_ms" : [ "{regexp#integer}" ],
        "admins_count" : [ "{regexp#integer}" ],
        "apps_collection_duration_ms" : [ "{regexp#integer}" ],
        "apps_count" : [ "{regexp#integer}" ],
        "models_collection_duration_ms" : [ "{regexp#integer}" ],
        "models_count" : [ "{regexp#integer}" ],
        "total_build_duration_ms" : [ "{regexp#integer}" ],
        "views_collection_duration_ms" : [ "{regexp#integer}" ],
        "views_count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "django.structure.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "component_type" : [ "{enum:ADMIN|MODEL|VIEW|SETTINGS}" ],
        "group_type" : [ "{enum:BY_APPS|BY_COMPONENTS}" ],
        "is_visible" : [ "{enum#boolean}" ],
        "promotion_reason" : [ "{enum:SETTINGS_FILE_OPENED}" ]
      },
      "enums" : {
        "__event_id" : [ "tree.node.navigate.to.sources", "tree.node.expanded", "tree.group.by.changed", "tree.node.collapsed", "promotion.success", "promotion.happened", "tree.group.visibility.changed" ]
      }
    }
  }, {
    "id" : "django.template.live.preview",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "source" : [ "{enum:DOC_CHANGED|EDITOR_TAB_SWITCHED|SERVER_STARTED|COMBOBOX_ITEM_SELECTED|PREVIEW_REOPENED}", "{enum:REFRESH}", "{enum:AUTO|MANUAL}" ]
      },
      "enums" : {
        "__event_id" : [ "route.variables.required", "route.not.found", "refresh", "start.server.from.preview", "route.selected.from.ui", "configure.server.from.preview", "hidden", "back", "rendered", "shown", "dev.console", "forward", "refresh.required", "refresh.from.preview" ]
      }
    }
  }, {
    "id" : "docker.connections",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:total|connection.used}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "type" : [ "{enum:DOCKER_FOR_MAC|DOCKER_FOR_WINDOWS|UNIX_SOCKET|TCP|MINIKUBE|COLIMA|WSL|SSH|UNKNOWN}" ]
      }
    }
  }, {
    "id" : "documentation",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:quick.doc.shown|quick.doc.link.clicked|expandable.definition.expanded|expandable.definition.shown}" ],
      "event_data" : {
        "expand" : [ "{enum#boolean}" ],
        "lookup_active" : [ "{enum#boolean}" ],
        "protocol" : [ "{enum:HTTP|HTTPS|PSI_ELEMENT|FILE|OTHER}" ]
      }
    }
  }, {
    "id" : "ds.data.dnd",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:csv.reading.cell.created}" ],
      "event_data" : {
        "drop_handler" : [ "{util#class_name}" ],
        "file_type" : [ "{util#file_type}" ],
        "number_of_cells" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "ds.tables",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:table.data.loaded|table.info.loaded|table.data.sorted}" ],
      "event_data" : {
        "data_accessor" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "table_type" : [ "{enum:PANDAS_DATA_FRAME|PANDAS_SERIES|NUMPY_ARRAY|POLARS_TABLE|GENERIC_TABLE|PYSPARK_TABLE|EXTERNAL}", "{enum:POLARS_DATA_FRAME|POLARS_SERIES}", "{enum:NOT_ANY}" ]
      }
    }
  }, {
    "id" : "dumb.mode",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:stage|started|finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "finish_type" : [ "{enum:TERMINATED|FINISHED}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "stage_class" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "dumb.mode.blocked.functionality",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:functionality.blocked}" ],
      "event_data" : {
        "action_id" : [ "{util#action}", "{enum#action}" ],
        "executed_when_smart" : [ "{enum#boolean}" ],
        "functionality" : [ "{enum:Other|Action|ActionWithoutId|MultipleActionIds|UsageInfoSearcherAdapter|Refactoring|MemberInplaceRenamer|PackageDependencies|RemoteDebuggingFileFinder|CtrlMouseHandler|GotoClass|GotoDeclaration|GotoDeclarationOnly|GotoDeclarationOrUsage|GotoTarget|GotoTypeDeclaration|GotoImplementations|LineProfiler|JfrStackFrames|RDClientHyperlink|Spring|TmsFilter|Kotlin|Android|Uml|GroovyMarkers|DupLocator|Intentions|FrameworkDetection|EditorGutterComponent|CodeCompletion|FindUsages|Gwt|GlobalInspectionContext|PostCommitCheck|SearchEverywhere|ProjectView|SafeDeleteDialog|RefactoringDialog}", "{enum:Jpa}", "{enum:GotoSuperMethod}" ]
      }
    }
  }, {
    "id" : "eclipse.projects.detector",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:detected|opened}" ],
      "event_data" : {
        "fromEmptyState" : [ "{enum#boolean}" ],
        "projectsCount" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "editor.notification.panel",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:shown|actionInvoked|notificationShown|handlerInvoked}" ],
      "event_data" : {
        "class_name" : [ "{util#class_name}" ],
        "handler_class" : [ "{util#class_name}" ],
        "key" : [ "{util#editor_notification_panel_key}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "provider_class" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "editor.settings.ide",
    "builds" : [ ],
    "versions" : [ {
      "from" : "8"
    } ],
    "rules" : {
      "event_id" : [ "{enum:not.default}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "lang" : [ "{util#lang}" ],
        "setting_id" : [ "{enum:caretAfterLineEnd|caretInsideTabs|virtualSpaceAtFileBottom|softWraps|softWraps.console|softWraps.preview|softWraps.relativeIndent|softWraps.showAll|ensureNewlineAtEOF|quickDocOnMouseHover|blinkingCaret|blockCaret|rightMargin|lineNumbers|gutterIcons|foldingOutline|showLeadingWhitespace|showInnerWhitespace|showTrailingWhitespace|indentGuides|animatedScroll|dragNDrop|wheelZoom|mouseCamel|inplaceRename|preselectOnRename|inlineDialog|minimizeScrolling|afterReformatNotification|afterOptimizeNotification|smartHome|camelWords|editor.inlay.parameter.hints|breadcrumbsAbove|all.breadcrumbs|intentionBulb|renderDoc|intentionPreview|useEditorFontInInlays|breadcrumbs|richCopy|parameterAutoPopup|javadocAutoPopup|completionAutoPopup|autoPopupCharComplete|autoCompleteBasic|autoCompleteSmart|parameterInfoFullSignature|indentOnEnter|braceOnEnter|javadocOnEnter|scriptletEndOnEnter|smartEnd|autoCloseJavadocTags|surroundByQuoteOrBrace|pairBracketAutoInsert|pairQuoteAutoInsert|reformatOnRBrace|bracesHighlight|scopeHighlight|identifierUnderCaretHighlight|autoAddImports|completionHints|tabExitsBracketsAndQuotes|nextErrorActionGoesToErrorsFirst|suppressWarnings|importHintEnabled|showMethodSeparators|openTabsInMainWindow|stripTrailingSpaces|blinkPeriod|completionCaseSensitivity|smartBackspace|reformatOnPaste|importsOnPaste|autoReparseDelay|errorStripeMarkMinHeight|caret.movement.word|caret.movement.line|fileColorsEnabled|fileColorsEnabledForProjectView|fileColorsEnabledForTabs|show.actions.in.tooltip}", "{enum:foldingOutlineOnlyOnHover}", "{enum:stickyLines}" ],
        "value" : [ "{regexp#integer}", "{enum:Whole|Changed|None}", "{enum:OFF|AUTOINDENT|INDENT}", "{enum:NONE|CURRENT|NEIGHBOR|START|END|BOTH|OTHER}" ]
      }
    }
  }, {
    "id" : "editor.settings.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:autoOptimizeImports|noAutoOptimizeImports}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "editor.typing",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:typed|too.many.events|latency}" ],
      "event_data" : {
        "editor_kind" : [ "{enum:UNTYPED|MAIN_EDITOR|CONSOLE|PREVIEW|DIFF}" ],
        "file_type" : [ "{util#file_type}" ],
        "lang" : [ "{util#lang}" ],
        "latency_90_ms" : [ "{regexp#integer}" ],
        "latency_max_ms" : [ "{regexp#integer}" ],
        "toolwindow_id" : [ "{util#toolwindow}" ]
      }
    }
  }, {
    "id" : "editorconfig",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:editorconfig.applied}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "file_type" : [ "{util#file_type}" ],
        "property" : [ "{enum:Standard|IntelliJ|Other}" ]
      }
    }
  }, {
    "id" : "educational.counters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "event" : [ "{enum#authorization_event}", "{enum#hint_event}", "{enum#post_course_event}" ],
        "language" : [ "{util#lang}", "{enum#edu_language}" ],
        "mode" : [ "{enum#edu_mode}" ],
        "platform" : [ "{enum#edu_platform}" ],
        "source" : [ "{enum#navigate_to_task_place}", "{enum#authorization_place}", "{enum#synchronization_place}", "{enum:welcome_screen|main_menu|find_action|course_selection_dialog|unknown}" ],
        "status" : [ "{enum#edu_check_status}" ],
        "success" : [ "{enum#boolean}" ],
        "tab" : [ "{enum#edu_tab}" ],
        "type" : [ "{enum#edu_item_type}", "{enum#link_type}" ]
      },
      "enums" : {
        "__event_id" : [ "navigate.to.task", "edu.project.created", "edu.project.opened", "study.item.created", "link.clicked", "authorization", "show.full.output", "peek.solution", "leave.feedback", "revert.task", "review.stage.topics", "check.task", "hint", "create.course.preview", "preview.task.file", "create.course.archive", "post.course", "synchronize.course", "import.course", "codeforces.submit.solution", "twitter.dialog.shown", "open.course.selection.view", "select.tab.course.selection.view", "open.task", "create.new.course.clicked", "obtain.jba.token", "create.new.file.in.non.template.based.framework.lesson.by.learner", "rate.marketplace.course", "peer.solution.diff.opened", "solution.share.state", "submission.invite.action", "open.community.tab", "submission.share.invite.shown", "submission.attempt" ],
        "authorization_event" : [ "log_in", "log_out", "log_out_succeed", "log_in_succeed" ],
        "authorization_place" : [ "settings", "widget", "start_course_dialog", "submissions_tab", "unknown", "task_description_header" ],
        "edu_check_status" : [ "Unchecked", "Solved", "Failed", "unchecked", "solved", "failed" ],
        "edu_item_type" : [ "CheckiO", "PyCharm", "Coursera", "Hyperskill", "Marketplace", "section", "framework", "lesson", "edu", "ide", "choice", "code", "output", "theory", "Codeforces", "Stepik" ],
        "edu_language" : [ "JAVA", "kotlin", "Python", "Scala", "JavaScript", "Rust", "ObjectiveC", "go", "PHP" ],
        "edu_mode" : [ "Study", "Course_Creator" ],
        "edu_platform" : [ "Hyperskill", "Stepik", "Js_CheckiO", "Py_CheckiO", "Marketplace", "Codeforces" ],
        "edu_tab" : [ "marketplace", "jba", "checkio", "codeforces", "coursera", "community", "stepik", "my_courses", "unknown" ],
        "hint_event" : [ "expanded", "collapsed" ],
        "link_type" : [ "in_course", "stepik", "external", "psi", "codeforces", "jba", "file" ],
        "navigate_to_task_place" : [ "check_all_notification", "task_description_toolbar", "check_panel", "unresolved_dependency_notification" ],
        "post_course_event" : [ "upload", "update" ],
        "synchronization_place" : [ "widget", "project_generation", "project_reopen" ]
      }
    }
  }, {
    "id" : "educational.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:role|task.panel}" ],
      "event_data" : {
        "value" : [ "{enum#task_panel}", "{enum#role}" ]
      },
      "enums" : {
        "role" : [ "student", "educator" ],
        "task_panel" : [ "swing", "javafx", "jcef" ]
      }
    }
  }, {
    "id" : "entry.points",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:additional_annotations|write_annotations|class_patterns}" ],
      "event_data" : {
        "fqn_used" : [ "{enum#boolean}" ],
        "patterns_used" : [ "{enum#boolean}" ],
        "used" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "evaluation.feedback",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:evaluation.feedback.sent|evaluation.feedback.shown|evaluation.feedback.cancelled}" ],
      "event_data" : {
        "feature_set_rating" : [ "{regexp#integer}" ],
        "interface_rating" : [ "{regexp#integer}" ],
        "performance_rating" : [ "{regexp#integer}" ],
        "price_rating" : [ "{regexp#integer}" ],
        "stability_rating" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "event.log",
    "builds" : [ ],
    "versions" : [ {
      "from" : "20"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "code" : [ "{regexp#integer}" ],
        "error" : [ "{enum:NO_LOGS|NO_UPLOADER|NO_LIBRARIES|NO_TEMP_FOLDER}", "{enum:NO_ARGUMENTS|NO_DEVICE_CONFIG|NO_RECORDER_CONFIG|NO_APPLICATION_CONFIG|IDE_NOT_CLOSING|ERROR_ON_SEND|NOT_PERMITTED_SERVER|ERROR_IN_CONFIG|NOTHING_TO_SEND|SENT_WITH_ERRORS}", "{util#class_name}", "{enum:EMPTY_CONTENT|INVALID_JSON|UNKNOWN}", "{enum:EMPTY_SERVICE_URL|UNREACHABLE_SERVICE|EMPTY_RESPONSE_BODY|ERROR_ON_LOAD}" ],
        "error_ts" : [ "{regexp#integer}" ],
        "errors" : [ "{regexp#integer}" ],
        "external" : [ "{enum#boolean}" ],
        "failed" : [ "{regexp#integer}" ],
        "paths" : [ "{regexp#hash}" ],
        "send" : [ "{regexp#integer}" ],
        "send_ts" : [ "{regexp#integer}" ],
        "stage" : [ "{enum:LOADING|PARSING}" ],
        "succeed" : [ "{regexp#integer}", "{enum#boolean}" ],
        "total" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "whitelist.loaded", "whitelist.updated", "logs.send", "external.send.command.creation.started", "external.send.command.creation.finished", "external.send.started", "external.send.finished", "loading.config.failed", "whitelist.update.failed", "whitelist.load.failed", "metadata.loaded", "metadata.updated", "metadata.update.failed", "metadata.load.failed" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "logs.send",
      "fields" : [ "paths" ]
    } ]
  }, {
    "id" : "event.log.session",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:debug.mode|headless|reporting|test.mode}" ],
      "event_data" : {
        "command_line" : [ "{enum#boolean}" ],
        "debug_agent" : [ "{enum#boolean}" ],
        "fus_test" : [ "{enum#boolean}" ],
        "headless" : [ "{enum#boolean}" ],
        "internal" : [ "{enum#boolean}" ],
        "only_local" : [ "{enum#boolean}" ],
        "suppress_report" : [ "{enum#boolean}" ],
        "teamcity" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "event.log.user.info",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:statistics.test.mode.enabled|team.city.version.detected}" ]
    }
  }, {
    "id" : "execution.macro",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:macro.expanded}" ],
      "event_data" : {
        "name" : [ "{util#extension.com.intellij.macro}" ],
        "success" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "experiment.ab",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:option.used}" ],
      "event_data" : {
        "bucket" : [ "{regexp#integer}" ],
        "group" : [ "{regexp#integer}" ],
        "id" : [ "{util#ab_experiment_option_id}" ]
      }
    }
  }, {
    "id" : "experimental.ui.interactions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action" : [ "{enum:NEW_UI_LINK|DENSITY_CLEAN|DENSITY_COMPACT}" ],
        "exp_ui" : [ "{enum#boolean}" ],
        "switch_source" : [ "{enum:ENABLE_NEW_UI_ACTION}", "{enum:WELCOME_PROMO|DISABLE_NEW_UI_ACTION}", "{enum:WHATS_NEW_PAGE}", "{enum:PREFERENCES}", "{enum:SETTINGS}" ],
        "theme_name" : [ "{enum#look_and_feel}" ]
      },
      "enums" : {
        "__event_id" : [ "switch.ui", "meet.new.ui.switch_theme", "meet.new.ui.action", "invite.banner.closed", "invite.banner.shown" ]
      }
    }
  }, {
    "id" : "external.project.task",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:finished|started}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "system_id" : [ "{enum#build_tools}" ],
        "target" : [ "{util#run_target}" ],
        "task_id" : [ "{enum:ResolveProject|ExecuteTask}" ]
      }
    }
  }, {
    "id" : "extract.method.inplace",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "changedOnHide" : [ "{enum#boolean}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "input_event" : [ "{util#shortcut}" ],
        "linkUsed" : [ "{enum#boolean}" ],
        "nameChanged" : [ "{enum#boolean}" ],
        "number_of_target_places" : [ "{regexp#integer}" ],
        "prepare_target_places_ms" : [ "{regexp#integer}" ],
        "prepare_template_ms" : [ "{regexp#integer}" ],
        "prepare_total_ms" : [ "{regexp#integer}" ],
        "settingsChange" : [ "{enum:AnnotateOn|AnnotateOff|MakeStaticOn|MakeStaticOff|MakeStaticWithFieldsOn|MakeStaticWithFieldsOff}" ]
      },
      "enums" : {
        "__event_id" : [ "executed", "hidePopup", "openExtractDialog", "settingsChanged", "showPopup", "preview_updated", "template_shown", "duplicates_searched" ]
      }
    }
  }, {
    "id" : "feature_suggester",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "suggester_id" : [ "{util#feature_suggester_id}" ]
      },
      "enums" : {
        "__event_id" : [ "notification.dont_suggest", "notification.learn_more", "notification.showed", "notification.thanks", "suggestion_found" ]
      }
    }
  }, {
    "id" : "feedback.in.ide.action.send",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:succeeded|failed}" ]
    }
  }, {
    "id" : "feedback.in.ide.dont.show.again.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:disabledVersions}" ],
      "event_data" : {
        "versionList" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "feedback.in.ide.notification",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:notification.respond.invoked|notification.disable.invoked|notification.shown}" ],
      "event_data" : {
        "idle_feedback_type" : [ "{enum:NEW_UI_FEEDBACK|PRODUCTIVITY_METRIC_FEEDBACK}", "{enum:PYCHARM_UI_FEEDBACK}", "{enum:AQUA_NEW_USER_FEEDBACK|AQUA_OLD_USER_FEEDBACK}", "{enum:KAFKA_CONSUMER_FEEDBACK|KAFKA_PRODUCER_FEEDBACK}", "{enum:PYCHARM_CE_FEEDBACK}" ]
      }
    }
  }, {
    "id" : "feedback.productivity.metric",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:feedback}" ],
      "event_data" : {
        "experience" : [ "{enum:1 month or less|2-3 months|4-6 months|7-11 months|1-2 years|3-5 years|6-10 years|More than 10 years|No data}", "{regexp#integer}" ],
        "productivity" : [ "{regexp#integer}" ],
        "proficiency" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "feedback.surveys.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:number.of.respond.actions.invoked|number.of.notifications.shown|feedback.survey.answered|number.of.disable.actions.invoked}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "survey_id" : [ "{util#feedback_survey_id}" ]
      }
    }
  }, {
    "id" : "file.editor",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:alternative.file.editor.selected|file.editor.empty.state.shown|file.editor.markup.restored}" ],
      "event_data" : {
        "empty_state_cause" : [ "{enum:ALL_TABS_CLOSED|PROJECT_OPENED|CONTEXT_RESTORED}" ],
        "fileEditor" : [ "{util#class_name}" ],
        "file_path" : [ "{regexp#hash}" ],
        "markup_grave_event" : [ "{enum:RESTORED|NOT_RESTORED_CACHE_MISS|NOT_RESTORED_CONTENT_CHANGED}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "restored_highlighters" : [ "{regexp#integer}" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "alternative.file.editor.selected",
      "fields" : [ "file_path" ]
    }, {
      "event" : "file.editor.markup.restored",
      "fields" : [ "file_path" ]
    } ]
  }, {
    "id" : "file.prediction",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:file.opened|candidate.calculated|calculated}" ],
      "event_data" : {
        "candidates.features" : [ "{util#file_features}" ],
        "candidates.file_path" : [ "{regexp#hash}" ],
        "candidates.opened" : [ "{regexp#integer}" ],
        "candidates.prob" : [ "{regexp#float}" ],
        "candidates.source" : [ "{regexp#integer}" ],
        "context_opened" : [ "{enum#boolean}" ],
        "context_prev_opened" : [ "{enum#boolean}" ],
        "excluded" : [ "{enum#boolean}" ],
        "features_computation" : [ "{regexp#integer}" ],
        "features_ms" : [ "{regexp#integer}" ],
        "file_path" : [ "{regexp#hash}" ],
        "file_type" : [ "{util#file_type}" ],
        "history_bi_max" : [ "{regexp#float}" ],
        "history_bi_min" : [ "{regexp#float}" ],
        "history_bi_mle" : [ "{regexp#float}" ],
        "history_bi_mle_to_max" : [ "{regexp#float}" ],
        "history_bi_mle_to_min" : [ "{regexp#float}" ],
        "history_position" : [ "{regexp#integer}" ],
        "history_size" : [ "{regexp#integer}" ],
        "history_uni_max" : [ "{regexp#float}" ],
        "history_uni_min" : [ "{regexp#float}" ],
        "history_uni_mle" : [ "{regexp#float}" ],
        "history_uni_mle_to_max" : [ "{regexp#float}" ],
        "history_uni_mle_to_min" : [ "{regexp#float}" ],
        "in_library" : [ "{enum#boolean}" ],
        "in_project" : [ "{enum#boolean}" ],
        "in_ref" : [ "{enum#boolean}" ],
        "in_source" : [ "{enum#boolean}" ],
        "name_prefix" : [ "{regexp#integer}" ],
        "opened" : [ "{enum#boolean}" ],
        "path_prefix" : [ "{regexp#integer}" ],
        "performance" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "predict_ms" : [ "{regexp#integer}" ],
        "prev_file_path" : [ "{regexp#hash}" ],
        "prev_file_type" : [ "{util#file_type}" ],
        "probability" : [ "{regexp#float}" ],
        "refs_computation" : [ "{regexp#integer}" ],
        "refs_ms" : [ "{regexp#integer}" ],
        "relative_path_prefix" : [ "{regexp#integer}" ],
        "same_dir" : [ "{enum#boolean}" ],
        "same_module" : [ "{enum#boolean}" ],
        "session" : [ "{regexp#integer}" ],
        "session_id" : [ "{regexp#integer}" ],
        "source" : [ "{enum:vcs|neighbor|open|recent|ref}" ],
        "total_ms" : [ "{regexp#integer}" ],
        "vcs_in_changelist" : [ "{enum#boolean}" ],
        "vcs_prev_in_changelist" : [ "{enum#boolean}" ],
        "vcs_related_prob" : [ "{regexp#float}" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "calculated",
      "fields" : [ "candidates.file_path" ]
    }, {
      "event" : "file.opened",
      "fields" : [ "file_path", "prev_file_path" ]
    }, {
      "event" : "candidate.calculated",
      "fields" : [ "file_path", "prev_file_path" ]
    } ]
  }, {
    "id" : "file.structure.popup",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:data.shown|data.filled|popup.disposed}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "file.type.configurable.interactions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "file_type" : [ "{util#file_type}" ]
      },
      "enums" : {
        "__event_id" : [ "file.type.added", "file.type.edited", "file.type.removed", "hashbang.added", "hashbang.edited", "hashbang.removed", "ignore.pattern.added", "ignore.pattern.edited", "ignore.pattern.removed", "pattern.added", "pattern.edited", "pattern.removed" ]
      }
    }
  }, {
    "id" : "file.types",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:file.in.project}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "file_schema.percent" : [ "{regexp#integer}" ],
        "file_schema.schema" : [ "{util#file_type_schema}" ],
        "file_type" : [ "{util#file_type}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "file.types.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "23"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "file_editor" : [ "{util#class_name}" ],
        "file_extension" : [ "{util#file_extension}" ],
        "file_name_pattern" : [ "{util#file_name_pattern}" ],
        "file_path" : [ "{regexp#hash}" ],
        "file_type" : [ "{util#file_type}", "{enum:DIFF}" ],
        "is_in_reader_mode" : [ "{enum#boolean}" ],
        "is_preview_tab" : [ "{enum#boolean}" ],
        "is_writable" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "schema" : [ "{enum:Maven_Groovy|Gradle|Maven|fxml}", "{util#file_type_schema}" ],
        "time_to_show" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "open", "edit", "close", "select", "create_by_new_file" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "open",
      "fields" : [ "file_path" ]
    }, {
      "event" : "edit",
      "fields" : [ "file_path" ]
    }, {
      "event" : "create_by_new_file",
      "fields" : [ "file_path" ]
    }, {
      "event" : "select",
      "fields" : [ "file_path" ]
    }, {
      "event" : "close",
      "fields" : [ "file_path" ]
    } ]
  }, {
    "id" : "find",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:search.session.started|check.box.toggled|regexp.help.clicked|pin.toggled}" ],
      "event_data" : {
        "case_sensitive" : [ "{enum#boolean}" ],
        "context" : [ "{enum#__context}" ],
        "option_name" : [ "{enum#__option_name}" ],
        "option_value" : [ "{enum#boolean}" ],
        "regular_expressions" : [ "{enum#boolean}" ],
        "type" : [ "{enum:FindInFile|FindInPath|Unknown}" ],
        "whole_words_only" : [ "{enum#boolean}" ],
        "with_file_filter" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__context" : [ "ANY", "IN_STRING_LITERALS", "IN_COMMENTS", "EXCEPT_STRING_LITERALS", "EXCEPT_COMMENTS", "EXCEPT_COMMENTS_AND_STRING_LITERALS" ],
        "__option_name" : [ "CaseSensitive", "PreserveCase", "WholeWords", "Regex", "FileFilter" ]
      }
    }
  }, {
    "id" : "find.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:options}" ],
      "event_data" : {
        "additional.isIncludeChildMethods" : [ "{enum#boolean}" ],
        "isSearchForTextOccurrences" : [ "{enum#boolean}" ],
        "isUsages" : [ "{enum#boolean}" ],
        "openInNewTab" : [ "{enum#boolean}" ],
        "searchScope" : [ "{enum:All_Places|Project_Files|Project_and_Libraries|Project_Production_Files|Project_Test_Files|Scratches_and_Consoles|Recently_Viewed_Files|Recently_Changed_Files|Open_Files|Current_File]}", "{util#scopeRule}" ]
      }
    }
  }, {
    "id" : "full.line.code.completion.details",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:model.downloaded.failed|model.downloaded.successfully|native.server.terminated|native.server.started}" ],
      "event_data" : {
        "exit_code" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "local_inference_type" : [ "{enum:K_INFERENCE|ONNX_NATIVE|LLAMA_NATIVE}" ],
        "model_version" : [ "{regexp:[0-9.]+-(jvm|native)-(onnx|llama)(-beta)?}" ]
      }
    }
  }, {
    "id" : "gateway.space.connector",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "auto" : [ "{enum#boolean}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "login_state" : [ "{enum:NOT_LOGGED|LOGGING|ERROR|LOGGED_IN}" ],
        "screen" : [ "{enum:REMOTE_DEVELOPMENT|SPACE_WELCOME|SPACE_LOGIN}" ]
      },
      "enums" : {
        "__event_id" : [ "logout.clicked", "client.launch.started", "tab.selected", "repository.clicked", "organization.clicked", "login.in.browser.clicked", "back.clicked", "project.clicked", "client.launch.finished", "watch.overview.clicked", "workspace.clicked", "logged.in", "connect.clicked", "browse.environments.clicked", "explore.clicked" ]
      }
    }
  }, {
    "id" : "gateway.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "connector" : [ "{enum:unknown|cwm.connector|space.connector|ssh.connector}", "{enum:gitpod.connector}", "{enum:google.cloud.connector}", "{enum:LinkedClientProxyingConnector|WslConnector}", "{enum:WorkstationsConnector|CawsConnector|GitpodConnector|CodespacesConnector}", "{enum:CoderGatewayMainView}", "{enum:DaytonaConnector}", "{enum:SshConnector|SpaceGatewayConnector|CodeWithMeConnector|WslConnector}" ],
        "connectorProvider" : [ "{util#class_name}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "emptyPassword" : [ "{enum#boolean}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "installationSource" : [ "{enum:CustomLink|LocalArchive|SuggestionList}" ],
        "installation_result" : [ "{enum:Success|Error|IncompatibleVersion}" ],
        "isDefaultBackend" : [ "{enum#boolean}" ],
        "isNewConnection" : [ "{enum#boolean}" ],
        "isSucceeded" : [ "{enum#boolean}" ],
        "numberOfBackendChangedClicks" : [ "{regexp#integer}" ],
        "numberOfConnectionChangedClicks" : [ "{regexp#integer}" ],
        "numberOfSshHosts" : [ "{regexp#integer}" ],
        "numberOfWslInstances" : [ "{regexp#integer}" ],
        "panel" : [ "{enum:LocateRemoteProjectPanel|ChooseHostPanel}" ],
        "panelName" : [ "{enum:LocateRemoteProjectPanel|ChooseHostPanel|LocateRemoteSshProjectPanel|LocateWslProjectPanel}" ],
        "parentProductCode" : [ "{enum:|unknown|IU|RM|WS|PS|PY|DS|OC|CL|DB|RD|GO}" ],
        "parentProductId" : [ "{enum:RM|WS|PS|PY|DS|OC|CL|DB|RD|GO|IU|GW|unknown}" ],
        "plugin" : [ "{util#plugin}" ],
        "pluginId" : [ "{enum:io.gitpod.jetbrains.gateway}", "{enum:com.google.cloud.workstations.ide.jetbrains.connector|aws.toolkit|com.github.codespaces.jetbrains.gateway}", "{enum:com.coder.gateway}", "{enum:io.daytona.jetbrains.gateway}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "productId" : [ "{enum:unknown|IU|RM|PY|DS|PS|WS|CL|RD|GO}", "{enum:IC}", "{enum:FLL}", "{enum:RR}" ],
        "projectsPerHost" : [ "{regexp#integer}" ],
        "projectsPerWslInstance" : [ "{regexp#integer}" ],
        "savePassUntilRestart" : [ "{enum#boolean}" ],
        "sshAuthType" : [ "{enum:unknown|Password|Key pair (OpenSSH or PuTTY)|OpenSSH config and authentication agent|PASSWORD|OPEN_SSH|KEY_PAIR}" ]
      },
      "enums" : {
        "__event_id" : [ "full.deploy.cycle.activity.started", "full.deploy.cycle.activity.finished", "download.ide.backend.activity.started", "download.ide.backend.activity.finished", "otherOptions.clicked", "useOldBackend.clicked", "openSshTerminal.clicked", "uploadInstaller.clicked", "useNewBackend.clicked", "documentation.clicked", "useDownloadLink.clicked", "checkConnectionAndContinue.clicked", "connect.clicked", "gtwFromStandaloneIde.started", "install_plugin", "ssh.auth.type.selected", "recent.ssh.projects.opened", "projects.per.host.registered", "JBInstaller.clicked", "backend.changed", "checking.connection.activity.finished", "checking.connection.activity.started", "connection.changed", "installation.source.selected", "projects.per.wsl.instance.registered", "recent.wsl.projects.opened", "openSettings.clicked", "leave_panel", "backButton.clicked", "plugin.documentation.clicked", "plugin.install.clicked", "select.different.ide.clicked", "recents.gear.clicked", "manage.backends.clicked", "openProject.clicked", "newProject.clicked", "connectToHost.clicked", "remove.host.clicked", "connect.provider.clicked", "openSshTerminal.recents.clicked", "different.ide.toggle.clicked", "remove.from.recents.clicked", "authenticate.clicked", "authenticate.dialog.ok.clicked", "authenticate.dialog.cancel.clicked" ]
      }
    }
  }, {
    "id" : "git.branches",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "is_new" : [ "{enum#boolean}" ],
        "is_protected" : [ "{enum#boolean}" ],
        "successfully" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "checkout.started", "checkout.finished", "checkout.checkout_operation.started", "checkout.checkout_operation.finished", "popup_widget_clicked", "checkout.vfs_refresh.started", "checkout.vfs_refresh.finished" ]
      }
    }
  }, {
    "id" : "git.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "common_local_branches" : [ "{regexp#integer}" ],
        "common_remote_branches" : [ "{regexp#integer}" ],
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "fs_monitor" : [ "{enum:NONE|BUILTIN|EXTERNAL_FS_MONITOR}" ],
        "is_worktree_used" : [ "{enum#boolean}" ],
        "local_branches" : [ "{regexp#integer}" ],
        "max_local_branches" : [ "{regexp#integer}" ],
        "multiple_root" : [ "{enum#boolean}" ],
        "recent_checkout_branches" : [ "{regexp#integer}" ],
        "remote_bitbucket" : [ "{regexp#integer}" ],
        "remote_bitbucket_custom" : [ "{regexp#integer}" ],
        "remote_branches" : [ "{regexp#integer}" ],
        "remote_gitee" : [ "{regexp#integer}" ],
        "remote_gitee_custom" : [ "{regexp#integer}" ],
        "remote_github" : [ "{regexp#integer}" ],
        "remote_github_custom" : [ "{regexp#integer}" ],
        "remote_gitlab" : [ "{regexp#integer}" ],
        "remote_gitlab_custom" : [ "{regexp#integer}" ],
        "remote_other" : [ "{regexp#integer}" ],
        "remotes" : [ "{regexp#integer}" ],
        "type" : [ "{enum#__type}" ],
        "value" : [ "{enum:sync|dont_sync|not_decided}", "{enum:branch_default|merge|rebase}", "{enum:stash|shelve}" ],
        "version" : [ "{regexp#version}" ],
        "working_copy_size" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "repo.sync", "update.type", "save.policy", "use.builtin.ssh", "push.autoupdate", "push.update.all.roots", "cherrypick.autocommit", "warn.about.crlf", "warn.about.detached", "executable", "repository", "showGitBranchesInLog", "updateBranchesFilterInLogOnSelection", "staging.area.enabled", "commit_template", "common_branches_count", "showRecentBranches", "filterByActionInPopup", "filterByRepositoryInPopup", "warn.about.large.files", "warn.about.bad.file.names" ],
        "__type" : [ "UNIX", "MSYS", "CYGWIN", "UNDEFINED", "NULL", "WSL1", "WSL2" ]
      }
    }
  }, {
    "id" : "git.operations",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:push.started|push.finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "is_authentication_failed" : [ "{enum#boolean}" ],
        "push_result" : [ "{enum:SUCCESS|NEW_BRANCH|UP_TO_DATE|FORCED|REJECTED_NO_FF|REJECTED_STALE_INFO|REJECTED_OTHER|ERROR|NOT_PUSHED}" ],
        "pushed_commits_count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "git.status.refresh",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:status.refresh.started|status.refresh.finished|untracked.refresh.started|untracked.refresh.finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "is_full_refresh" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "go.completion.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:insertion.handler.called}" ],
      "event_data" : {
        "handler_id" : [ "{util#go_completion_handler_id}", "{enum#__handler_id}" ]
      },
      "enums" : {
        "__handler_id" : [ "IMPLEMENT_INTERFACE", "TEST_TEMPLATE", "FUZZ_TEMPLATE", "IF_VALUE_NOT_NIL_TEMPLATE", "METHOD_TEMPLATE", "BENCHMARK_TEMPLATE", "BENCHMARK_LOOP_TEMPLATE" ]
      }
    }
  }, {
    "id" : "go.debugger.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:custom.delve.path|custom.delve.settings}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "go.debugger.usages.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:debugger.used|local.attach.used|target.go.version.detected}" ],
      "event_data" : {
        "kind" : [ "{enum:usual|localAttach}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "go.experimental.features",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:generics}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "go.find.usages.notification",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:shown|options.shown|disabled}" ]
    }
  }, {
    "id" : "go.generate.type.from.json.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:dialog.used|generate.on.paste.suggested|json.like.text.pasted|pasted.json.converted.to.type}" ],
      "event_data" : {
        "accepted" : [ "{enum#boolean}" ],
        "kind" : [ "{enum:type|fields}" ],
        "result" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "go.lens",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:code.author.clicked|usages.clicked|implementations.clicked}" ],
      "event_data" : {
        "location" : [ "{enum:const|var|type|function|method}" ]
      }
    }
  }, {
    "id" : "go.modules",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:automatic.dependencies.download.finished|automatic.dependencies.download.started}" ],
      "event_data" : {
        "cancelled" : [ "{enum#boolean}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "have_any_dependencies_downloaded_modules_count" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "processed_modules_count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "go.profiler.usages.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:PprofMutexConfigurationType|PprofMemoryConfigurationType|PprofBlockingConfigurationType|PprofCpuConfigurationType}" ]
    }
  }, {
    "id" : "go.programming.errors",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:compilation.error.detected|runtime.error.detected|inspection.found.problem}" ],
      "event_data" : {
        "compilation_error_message" : [ "{util#compilation_error_message}" ],
        "inspection_problem_message" : [ "{util#inspection_problem_message}" ],
        "runtime_error_message" : [ "{util#runtime_error_message}" ]
      }
    }
  }, {
    "id" : "go.project.model.migration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "module", "jdk.type", "go.path", "go.sdk", "sdk.reference" ]
      }
    }
  }, {
    "id" : "go.run.configurations",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:GOOS|GOARCH}" ],
      "event_data" : {
        "value" : [ "{enum:android|darwin|dragonfly|freebsd|illumos|ios|js|linux|netbsd|openbsd|plan9|solaris|windows}", "{enum:amd64|386|arm|arm64|ppc64le|ppc64|mips64le|mips64|mipsle|mips|s390x|wasm}" ]
      }
    }
  }, {
    "id" : "go.settings.codeStyle",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:addParenthesesForSingleImport|addLeadingSpaceToComments|useBackQuotesForImports}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "go.settings.folding",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "PanicSyntax" : [ "{enum:PANIC|BOMB}" ],
        "ReturnSyntax" : [ "{enum:RETURN|ARROW}" ],
        "enabled" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "oneLineReturns", "oneLinePanics", "fmtStrings", "panicSyntax", "oneLineReturnFunctions", "oneLineErrorHandlingBlocks", "returnSyntax", "isOneLineErrorHandlingCaseClauses", "oneLineCaseClauses", "emptyFunctions", "emptyStructOrInterfaceTypeDefs" ]
      }
    }
  }, {
    "id" : "go.settings.imports",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "import_sorting_value" : [ "{enum:NONE|GOFMT|GOIMPORTS}" ],
        "mode" : [ "{enum:DISABLED|PROJECT|PREFIX}" ]
      },
      "enums" : {
        "__event_id" : [ "importSorting", "moveAllImportsInOneDeclaration", "groupStdlibImports", "moveAllStdlibImportsInOneGroup", "showImportPopup", "addUnambiguousImportsOnTheFly", "optimizeImportsOnTheFly", "groupProjectImports", "localGroup" ]
      }
    }
  }, {
    "id" : "go.ui.component.usages.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:invoke.quick.settings}" ]
    }
  }, {
    "id" : "go.user.environment",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:sdk|dependency.manager|package.import|has.vendor}" ],
      "event_data" : {
        "dependency_manager_name" : [ "{enum#__dependency_manager_name}" ],
        "enabled" : [ "{enum#boolean}" ],
        "is_std_package_import" : [ "{enum#boolean}" ],
        "package_import_path" : [ "{util#package_import_path}", "{util#std_package_import_path}", "{enum#__package_import_path}" ],
        "sdk_major_version" : [ "{regexp#version}" ],
        "sdk_version" : [ "{enum:devel}", "{regexp#go_version}" ]
      },
      "enums" : {
        "__dependency_manager_name" : [ "Dep", "Glide", "RubiGo", "GoGradle", "Trash", "vgo", "GoDep" ],
        "__package_import_path" : [ "testing", "github.com/stretchr/testify", "github.com/stretchr/testify/assert", "github.com/stretchr/testify/require", "github.com/stretchr/testify/mock", "github.com/stretchr/testify/suite", "gopkg.in/check.v1", "github.com/onsi/ginkgo", "github.com/onsi/gomega", "github.com/franela/goblin", "github.com/smartystreets/goconvey/convey", "github.com/DATA-DOG/godog" ]
      },
      "regexps" : {
        "go_version" : "(\\d+\\.?)*\\d+((beta|rc)\\d+)?"
      }
    }
  }, {
    "id" : "got.it.tooltip",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:close|show}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "id_prefix" : [ "{util#got.it.tooltip}" ],
        "type" : [ "{enum:click.button|click.link|click.outside|ancestor.removed|escape.shortcut.pressed|timeout}" ]
      }
    }
  }, {
    "id" : "grazi.count",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:language.detected|typo.found|quickfix.applied}" ],
      "event_data" : {
        "cancelled" : [ "{enum:true|false}" ],
        "fixes" : [ "{regexp#count}" ],
        "id" : [ "{enum#grazie_rule_long_ids}" ],
        "language" : [ "{enum#__language}" ],
        "spellcheck" : [ "{enum:true|false}" ]
      },
      "enums" : {
        "__language" : [ "", "en", "ru", "fr", "de", "pl", "it", "zh", "ja", "uk", "el", "ro", "es", "pt", "sk", "fa", "nl" ]
      }
    }
  }, {
    "id" : "grazi.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:enabled.language|native.language|enabled.spellcheck|rule}" ],
      "event_data" : {
        "enabled" : [ "{enum:true|false}" ],
        "id" : [ "{enum#grazie_rule_long_ids}" ],
        "value" : [ "{enum#__value}", "{enum:true|false}" ]
      },
      "enums" : {
        "__value" : [ "en", "ru", "fr", "de", "pl", "it", "zh", "ja", "uk", "el", "ro", "es", "pt", "sk", "fa", "nl" ]
      }
    }
  }, {
    "id" : "grazie.count",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "cancelled" : [ "{enum#boolean}" ],
        "enabled" : [ "{enum#boolean}" ],
        "fixes" : [ "{regexp#count}", "{regexp#integer}" ],
        "id" : [ "{enum#grazie_rule_long_ids}" ],
        "info" : [ "{regexp#fix_info}", "{enum#__info}" ],
        "language" : [ "{enum#__language}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "value" : [ "{enum:ko}" ]
      },
      "enums" : {
        "__event_id" : [ "language.detected", "typo.found", "quickfix.applied", "language.suggested", "quick.fix.invoked" ],
        "__info" : [ "add.exception", "rule.settings:unmodified", "rule.settings:canceled", "rule.settings:changes:domains", "accept.suggestion", "rule.settings:changes:rules", "rule.settings:changes:languages", "rule.settings:changes:languages,rules", "rule.settings:changes:languages,domains", "rule.settings:changes:languages,domains,rules", "rule.settings:changes:unclassified", "rule.settings:changes:domains,rules" ],
        "__language" : [ "unknown", "en", "ru", "fr", "de", "pl", "it", "zh", "ja", "uk", "el", "ro", "es", "pt", "sk", "fa", "nl", "km", "ast", "be", "sv", "gl", "eo", "ta", "br", "ar", "tl", "sl", "ga", "da", "ca" ]
      },
      "regexps" : {
        "fix_info" : "accept\\.suggestion|add\\.exception|rule\\.settings:(canceled|unmodified|changes:(unclassified|(languages,?)?(domains,?)?(rules)?))"
      }
    }
  }, {
    "id" : "grazie.pro.count",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "client_mode" : [ "{enum:Local|Cloud}" ],
        "completion_length" : [ "{regexp#integer}" ],
        "context_length" : [ "{regexp#integer}" ],
        "count" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "language" : [ "{enum:ast|de|el|km|en|sl|sv|tl|br|eo|ca|gl|ga|da|es|ta|ar|fa|fr|it|ja|nl|pl|pt|ro|ru|sk|uk|be|zh|unknown}" ],
        "origin" : [ "{enum:Bundled.Yaml|Grazie.RuleEngine|Grazie.MLEC|LanguageTool}" ],
        "prefix_ends_with_whitespace" : [ "{enum#boolean}" ],
        "prefix_length" : [ "{regexp#integer}" ],
        "profile" : [ "{enum:Always|Moderate}" ],
        "result" : [ "{enum:FullyAccepted|Rejected|PartiallyAccepted}" ],
        "rule" : [ "{enum#grazie_rule_ids}" ],
        "source" : [ "{enum:Popup|Inline}" ],
        "word_count" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "completion.shown", "completion.accepted", "definition.shown", "enable.suggested.rule.applied", "definition.requested", "auto.fix.undone", "enable.suggested.rule.undone", "auto.fix.applied", "completion.requested", "completion.interacted" ]
      }
    }
  }, {
    "id" : "grazie.pro.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "enter_add_newlines" : [ "{enum#boolean}" ],
        "profile" : [ "{enum:Always|Moderate}" ],
        "style" : [ "{enum:INFORMAL|UNSPECIFIED|PUBLIC|FORMAL}" ],
        "type" : [ "{enum:LOCAL|CLOUD}", "{enum:DISABLED|INLAY|POPUP}" ],
        "whitespace_after_enter" : [ "{enum#boolean}" ],
        "whitespace_after_tab" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "settings.wrap.text", "settings.processing", "settings.honor.subphrases", "settings.highlight.pos", "settings.completion", "settings.vale.annotations", "settings.writing.style", "settings.auto.fix" ]
      }
    }
  }, {
    "id" : "grazie.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "comments" : [ "{enum#state}" ],
        "commit" : [ "{enum#state}" ],
        "documentation" : [ "{enum#state}" ],
        "enabled" : [ "{enum#boolean}" ],
        "id" : [ "{enum#grazie_rule_long_ids}", "{util#grazie_strategy_id}" ],
        "language" : [ "{util#lang}" ],
        "literals" : [ "{enum#state}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "userChange" : [ "{enum#state}" ],
        "value" : [ "{enum#__value}", "{enum:ko}" ]
      },
      "enums" : {
        "__event_id" : [ "enabled.language", "native.language", "rule", "strategy", "checkingContext" ],
        "__value" : [ "en", "ru", "fr", "de", "pl", "it", "zh", "ja", "uk", "el", "ro", "es", "pt", "sk", "fa", "nl", "km", "ast", "be", "sv", "gl", "eo", "ta", "unknown", "br", "ar", "tl", "sl", "ga", "da", "ca" ]
      }
    }
  }, {
    "id" : "gutter.icon.click",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:clicked}" ],
      "event_data" : {
        "current_file" : [ "{util#lang}" ],
        "icon_id" : [ "{util#gutter_icon}", "{util#plugin_info}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "highlighting.settings.per.file",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:skip.highlighting.roots|skip.inspection.roots}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "http.client.conversions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started|succeed|failed}" ],
      "event_data" : {
        "error" : [ "{enum#__error}", "{enum:invalid_url|unsupported_encoding|method_do_not_support_body}" ],
        "from" : [ "{enum:curl}" ]
      },
      "enums" : {
        "__error" : [ "not_a_curl", "no_url", "incomplete_option", "unknown_option", "unknown_data_option", "invalid_http_method", "invalid_form_data", "invalid_header" ]
      }
    }
  }, {
    "id" : "http.client.execution.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "hasPreRequestHandler" : [ "{enum#boolean}" ],
        "hasResponseHandler" : [ "{enum#boolean}" ],
        "method" : [ "{util#http_client_valid_method_rule}" ],
        "oauth2ExecutionType" : [ "{enum:REFRESH|USE_EXISTING|AUTHORIZATION_CODE|IMPLICIT|PASSWORD|CLIENT_CREDENTIALS|UNDEFINED}", "{enum:AUTHORIZATION_CODE_PKCE|DEVICE}" ],
        "requestedProtocol" : [ "{enum:HTTP_1|HTTP_2|HTTP_2_PRIOR_KNOWLEDGE|DEFAULT}" ],
        "sentToLocalhost" : [ "{enum#boolean}" ],
        "sizeInLines" : [ "{regexp#integer}" ],
        "status" : [ "{enum:SUCCESS|BROWSER_CLOSED|BROWSER_LOADING_PAGE_ERROR|BROWSER_PROTOCOL_ERROR|TOKEN_REQUEST_FAILED|CONFIGURATION_FAILED}", "{enum:POLLING_STOPPED}" ],
        "usedProtocol" : [ "{enum:HTTP_1|HTTP_2|HTTP_2_PRIOR_KNOWLEDGE|DEFAULT}" ]
      },
      "enums" : {
        "__event_id" : [ "request.execution.started", "response.html.preview.opened", "auth.log.in.console.opened", "oauth.used", "response.presented", "http.protocol.used" ]
      }
    }
  }, {
    "id" : "http.client.history.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "cause" : [ "{enum:GENERAL|INVALID_FILE_TYPE|INCLUDED_IN_IGNORED|EXCLUDED_FILE|TOO_LARGE}" ],
        "option" : [ "{enum:get-requests.http|different-responses.http|graphql-requests.http|post-requests.http|requests-with-authorization.http|requests-with-tests.http|ws-requests.http|whats-new.http|grpc-requests.http|HTTP Client Help}" ],
        "problemType" : [ "{enum:GENERAL|INVALID_FILE_TYPE|INCLUDED_IN_IGNORED|EXCLUDED_FILE|TOO_LARGE}" ],
        "textLength" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "request.adding.failed", "error.about.invalid.history.file.shown", "fix.link.clicked", "request.added.to.history", "collection.popup.option.chosen" ]
      }
    }
  }, {
    "id" : "http.client.microservices",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:generation|navigate.to.error.element}" ],
      "event_data" : {
        "requestsCount" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "ide.error.dialog",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:report|report.all|report.and.clear.all|clear.all}" ]
    }
  }, {
    "id" : "ide.jumpToLine",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:GetLinesToJump|GoToLine|JumpToGreenLine|JumpToYellowLine}" ],
      "event_data" : {
        "plugin_version" : [ "{util#plugin_version}" ],
        "status" : [ "{enum:success|failed}" ]
      }
    }
  }, {
    "id" : "ide.scratch",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:files.state}" ],
      "event_data" : {
        "average_size_in_bytes" : [ "{regexp#integer}" ],
        "maximum_size_in_bytes" : [ "{regexp#integer}" ],
        "number_of_files" : [ "{regexp#integer}" ],
        "total_size_in_bytes" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "ide.script.engine",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:org.codehaus.groovy.jsr223.GroovyScriptEngineFactory|org.jetbrains.kotlin.jsr223.KotlinJsr223StandardScriptEngineFactory4Idea|third.party|used}" ],
      "event_data" : {
        "factory" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "ide.self.update",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "patches" : [ "{enum:not.available|manual|auto}" ],
        "show_in_editor" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "update.failed", "notification.clicked", "dialog.shown", "dialog.update.started", "dialog.shown.no.patch", "dialog.manual.patch.prepared", "dialog.download.clicked", "dialog.shown.manual.patch", "notification.shown", "update.whats.new" ]
      }
    }
  }, {
    "id" : "ide.update.dialog",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:link.clicked}" ],
      "event_data" : {
        "url" : [ "{util#update_dialog_rule_id}" ]
      }
    }
  }, {
    "id" : "ideFeaturesTrainer",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action_id" : [ "{util#action_id}" ],
        "completed_count" : [ "{regexp#integer}" ],
        "course_size" : [ "{regexp#integer}" ],
        "duration" : [ "{regexp#integer}" ],
        "feedback_entry_place" : [ "{enum:WELCOME_SCREEN|LEARNING_PROJECT|ANOTHER_PROJECT}" ],
        "feedback_experienced_user" : [ "{enum#boolean}" ],
        "feedback_has_been_sent" : [ "{enum#boolean}" ],
        "feedback_likeness_answer" : [ "{enum:NO_ANSWER|LIKE|DISLIKE}" ],
        "feedback_opened_via_notification" : [ "{enum#boolean}" ],
        "filename" : [ "{util#tip_info}" ],
        "group_name" : [ "{enum:TUTORIALS|PROJECTS}" ],
        "group_state" : [ "{enum:expanded|collapsed}" ],
        "input_event" : [ "{util#shortcut}" ],
        "keymap_scheme" : [ "{util#keymap_scheme}" ],
        "language" : [ "{enum:java|go|ruby|swift|html|objectivec|javascript|python}", "{util#language}" ],
        "last_build_learning_opened" : [ "{regexp#version}" ],
        "learn_opening_way" : [ "{enum:LEARN_IDE|ONBOARDING_PROMOTER}" ],
        "lesson_id" : [ "{util#lesson_id}" ],
        "module_name" : [ "{util#module_name}" ],
        "new_lessons_count" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "problem" : [ "{enum:NO_SDK_CONFIGURED}" ],
        "progress_percentage" : [ "{regexp#integer}" ],
        "reason" : [ "{enum:CLOSE_PROJECT|RESTART|CLOSE_FILE|OPEN_MODULES|OPEN_NEXT_OR_PREV_LESSON}", "{enum:EXIT_LINK}" ],
        "shortcut" : [ "{util#shortcut_or_none}" ],
        "show_it" : [ "{enum#boolean}" ],
        "starting_way" : [ "{enum:NEXT_BUTTON|PREV_BUTTON|RESTART_BUTTON|RESTORE_LINK|ONBOARDING_PROMOTER|LEARN_TAB|TIP_AND_TRICK_PROMOTER}", "{enum:NO_SDK_RESTART}" ],
        "task_id" : [ "{util#task_id}", "{regexp:-?\\d+(\\+)?}" ],
        "tip_id" : [ "{util#tip_info}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "start", "passed", "group_event", "start_module_action", "progress", "expand_welcome_screen", "shortcut_clicked", "restore", "learn_project_opened_first_time", "non_learning_project_opened", "stopped", "new_lessons_notification_shown", "show_new_lessons", "need_show_new_lessons_notifications", "lesson_opened_from_tip", "help_link_clicked", "lesson_link_clicked_from_tip", "onboarding_feedback_notification_shown", "onboarding_feedback_dialog_result", "internal_problem", "onboarding.banner.switcher.expanded", "onboarding.banner.shown" ]
      }
    }
  }, {
    "id" : "idea.project.statistics",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:invalid.compilation.failure}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ]
      }
    }
  }, {
    "id" : "import.old.config",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:import.dialog.shown|import.initially}" ],
      "event_data" : {
        "config_folder_exists" : [ "{enum#boolean}" ],
        "initial_import_scenario" : [ "{enum:CLEAN_CONFIGS|IMPORTED_FROM_PREVIOUS_VERSION|IMPORTED_FROM_OTHER_PRODUCT|IMPORTED_FROM_CLOUD|CONFIG_DIRECTORY_NOT_FOUND|SHOW_DIALOG_NO_CONFIGS_FOUND|SHOW_DIALOG_CONFIGS_ARE_TOO_OLD|SHOW_DIALOG_REQUESTED_BY_PROPERTY|IMPORT_SETTINGS_ACTION|RESTORE_DEFAULT_ACTION}" ],
        "selected" : [ "{enum#__selected}" ]
      },
      "enums" : {
        "__selected" : [ "FROM_PREVIOUS", "FROM_CUSTOM", "DO_NOT_IMPORT", "NOT_INITIALIZED", "OTHER" ]
      }
    }
  }, {
    "id" : "index.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:lookup.entries|lookup.stub_entries|lookup.all_keys}" ],
      "event_data" : {
        "entries_found" : [ "{regexp#integer}" ],
        "index_id" : [ "{util#index_id}" ],
        "keys" : [ "{regexp#integer}" ],
        "lookup_duration_ms" : [ "{regexp#integer}" ],
        "lookup_failed" : [ "{enum#boolean}" ],
        "lookup_op" : [ "{enum:and|or|unknown}" ],
        "psi_tree_deserializing_ms" : [ "{regexp#integer}" ],
        "total_keys_indexed" : [ "{regexp#integer}" ],
        "up_to_date_check_ms" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "index.usage.aggregates",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:lookup.entries|lookup.all_keys|lookup.stub_entries}" ],
      "event_data" : {
        "index_id" : [ "{util#index_id}" ],
        "lookup_duration_90ile_ms" : [ "{regexp#integer}" ],
        "lookup_duration_95ile_ms" : [ "{regexp#integer}" ],
        "lookup_duration_99ile_ms" : [ "{regexp#integer}" ],
        "lookup_duration_max_ms" : [ "{regexp#integer}" ],
        "lookup_duration_mean_ms" : [ "{regexp#float}" ],
        "lookups_failed" : [ "{regexp#integer}" ],
        "lookups_total" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "indexable.files.filter",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:indexable_files_filter_health_check|indexable_files_filter_health_check_started}" ],
      "event_data" : {
        "attempt_number_in_project" : [ "{regexp#integer}" ],
        "filter_name" : [ "{enum#indexable_files_filter_name}" ],
        "indexable_files_not_in_filter_count" : [ "{regexp#integer}" ],
        "non_indexable_files_in_filter_count" : [ "{regexp#integer}" ],
        "successful_attempt_number_in_project" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "indexable_files_filter_name" : [ "caching", "persistent", "incremental" ]
      }
    }
  }, {
    "id" : "indexing",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "7"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started|stage|finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "finish_type" : [ "{enum:TERMINATED|FINISHED}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "stage_class" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "indexing.statistics",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:finished|started|stub.index.inconsistency|index_rebuild}" ],
      "event_data" : {
        "average_content_loading_speed_bps" : [ "{regexp#integer}" ],
        "average_content_loading_speeds_by_file_type.average_content_loading_speed_for_file_type_bps" : [ "{regexp#integer}" ],
        "average_content_loading_speeds_by_file_type.file_type" : [ "{util#file_type}" ],
        "check_source" : [ "{enum:deliberate_additional_check_in_completion|deliberate_additional_check_in_intentions|wrong_type_psi_in_stub_helper|offset_outside_file_in_java|check_after_exception_in_java|no_psi_matching_ast_in_java|for_tests|other}" ],
        "content_loading_time_with_pauses" : [ "{regexp#integer}" ],
        "dumb_time_with_pauses" : [ "{regexp#integer}" ],
        "dumb_time_without_pauses" : [ "{regexp#integer}" ],
        "enforced_inconsistency" : [ "{enum:psi_of_unexpected_class|other}" ],
        "has_pauses" : [ "{enum#boolean}" ],
        "inconsistency_type" : [ "{enum:different_number_of_psi_trees|mismatching_psi_tree}" ],
        "index_id" : [ "{util#index_id}" ],
        "indexes_writing_time_with_pauses" : [ "{regexp#integer}" ],
        "indexing_activity_type" : [ "{enum:scanning|dumb_indexing}" ],
        "indexing_session_id" : [ "{regexp#integer}" ],
        "indexing_time" : [ "{regexp#integer}" ],
        "inside_index_initialization" : [ "{enum#boolean}" ],
        "is_cancelled" : [ "{enum#boolean}" ],
        "is_full" : [ "{enum#boolean}" ],
        "number_of_file_providers" : [ "{regexp#integer}" ],
        "number_of_files_indexed_by_extensions" : [ "{regexp#integer}" ],
        "number_of_files_indexed_by_extensions_during_scan" : [ "{regexp#integer}" ],
        "number_of_files_indexed_by_extensions_with_loading_content" : [ "{regexp#integer}" ],
        "number_of_files_indexed_with_loading_content" : [ "{regexp#integer}" ],
        "number_of_handled_files" : [ "{regexp#integer}" ],
        "number_of_scanned_files" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "rebuild_cause" : [ "{util#class_name}" ],
        "requestor_plugin_id" : [ "{util#plugin}" ],
        "scanning_ids" : [ "{regexp#integer}" ],
        "scanning_time" : [ "{regexp#integer}" ],
        "total_activity_time_with_pauses" : [ "{regexp#integer}" ],
        "total_activity_time_without_pauses" : [ "{regexp#integer}" ],
        "total_time" : [ "{regexp#integer}" ],
        "type" : [ "{enum#__type}" ]
      },
      "enums" : {
        "__type" : [ "full_forced", "full_on_project_open", "full", "partial_forced", "partial", "refresh" ]
      }
    }
  }, {
    "id" : "inlay.action.handler",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:click.handled}" ],
      "event_data" : {
        "id" : [ "{util#plugin_info}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "inlay.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:model.options|global.inlays.settings|language.inlays.settings|model.inlays.settings}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "enabled_globally" : [ "{enum#boolean}" ],
        "lang" : [ "{util#lang}" ],
        "model" : [ "{enum#__model}", "{enum:sql.column.names.inlay.hints}", "{enum:spring.boot.generate.starters.gradle.kts|spring.boot.generate.starters.maven|spring.boot.generate.starters.gradle|python.dataframe.inlay.hints}", "{enum:rename}", "{enum:component.usage}" ],
        "option_id" : [ "{enum#__option_id}", "{enum:ruby.parameter.name.reflected.in.method.name|kotlin.values.ranges}" ],
        "option_value" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__model" : [ "ts.enum.hints", "annotation.hints", "JavaLens", "js.chain.hints", "ts.chain.hints", "composer.package.version.hints", "groovy.parameters.hints", "chain.hints", "ts.type.hints", "js.type.hints", "parameter.hints.old", "return.values.hints", "KotlinLambdasHintsProvider", "KotlinReferencesTypeHintsProvider", "docker.inlay.hints", "kotlin.call.chains.hints", "RelatedProblems", "groovy.implicit.null.argument.hint", "kotlin.lambdas.hints", "oc.type.hints", "kotlin.references.types.hints", "vcs.code.author", "tms.local.md.hints", "draft.inlay.hints", "MethodChainsInlayProvider", "sql.join.cardinality.hints", "microservices.url.path.inlay.hints", "CodeVision", "java.implicit.types", "kotlin.ranges.hints", "groovy.variable.type.hints", "rbs.ruby.return.type.hints", "rbs.ruby.container.type.hints", "rbs.ruby.constant.type.hints", "rbs.ruby.parameter.type.hints", "rbs.ruby.attribute.type.hints", "rbs.ruby.global.variable.type.hints", "LLMDocumentationCodeVisionProvider", "MarkdownTableInlayProviderSettingsKey", "go.inlays.display.constant.definition", "rbs.ruby.block.self.type.hints", "spring.secured.urls.inlay.hints", "kotlin.values.hints", "vcs.code.vision", "llm", "aqua", "references", "inheritors", "problems" ],
        "__option_id" : [ "js.param.hints.show.names.for.all.args", "vuejs.show.names.for.filters", "inheritors", "java.clear.expression.type", "variables.and.fields", "ruby.show.param.grouping", "js.only.show.names.for.tagged", "ruby.non.literals", "inferred.annotations", "non.paren.single.param", "js.only.show.names.for.pipes", "oc.clangd.namehints.construct.expr", "ruby.method.name.contains.parameter.name", "usages", "oc.clangd.namehints.non.const.references", "php.pass.by.reference", "java.method.name.contains.parameter.name", "java.multiple.params.same.type", "inferred.parameter.types", "java.enums", "js.only.show.names.for.all.args", "php.show.names.for.all.args", "oc.clangd.namehints.enums", "java.build.like.method", "function.returns", "java.new.expr", "java.simple.sequentially.numbered", "vuejs.show.names.for.all.args", "parameters.in.parens", "oc.clangd.namehints.macro.expr", "js.param.hints.show.names.for.tagged", "type.parameter.list", "external.annotations", "angular.show.names.for.all.args", "angular.show.names.for.pipes", "SHOW_PROPERTY_HINT", "SHOW_LOCAL_VARIABLE_HINT", "SHOW_FUNCTION_HINT", "SHOW_PARAMETER_TYPE_HINT", "SHOW_PARAMETER_HINT", "SHOW_LAMBDA_RETURN_EXPRESSION", "SHOW_LAMBDA_IMPLICIT_PARAMETER_RECEIVER", "SHOW_SUSPENDING_CALL", "R_HINT_OPTION_WRAP_DOTS", "sql.show.column.names.in.insert.values", "sql.show.column.names.in.select", "sql.show.column.names.for.asterisk", "implicit.null.result", "related.problems", "hints.type.property", "hints.type.variable", "hints.type.function.return", "hints.type.function.parameter", "hints.lambda.return", "hints.lambda.receivers.parameters", "go.struct.unnamed.struct.fields", "go.return.parameters", "sql.show.column.names.for.set.operations", "inner.join", "left.join", "full.join", "right.join", "python.show.hints.for.non-literal.arguments", "oc.clangd.namehints.array.indices", "variables", "obvious.types", "parameter.types", "lambdas", "return.types", "python.show.class.constructor.call.parameter.names" ]
      }
    }
  }, {
    "id" : "inline.completion",
    "builds" : [ ],
    "versions" : [ {
      "from" : "5"
    } ],
    "rules" : {
      "event_id" : [ "{enum:invoked|shown|inserted_state}" ],
      "event_data" : {
        "additional.full_line.avg_entropy" : [ "{regexp#float}" ],
        "additional.full_line.avg_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.avg_probability" : [ "{regexp#float}" ],
        "additional.full_line.context_features.argument_index" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.block_statement_level" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.element_prefix_length" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.has_data_science_imports" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.has_web_imports" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.have_named_arg_left" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.have_named_arg_right" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.have_opening_angle_bracket_left" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.have_opening_brace_left" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.have_opening_bracket_left" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.have_opening_parenthesis_left" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.imports_count" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.is_directly_in_arguments_context" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.is_in_arguments" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.is_in_conditional_statement" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.is_in_for_statement" : [ "{enum#boolean}" ],
        "additional.full_line.context_features.library_imports_count" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.library_imports_ratio" : [ "{regexp#float}" ],
        "additional.full_line.context_features.num_of_prev_qualifiers" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.number_of_arguments_already" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.popular_library_imports_count" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.popular_library_imports_ratio" : [ "{regexp#float}" ],
        "additional.full_line.context_features.prev_neighbour_keyword_1" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.prev_neighbour_keyword_2" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.prev_same_column_keyword_1" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.prev_same_column_keyword_2" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.prev_same_line_keyword_1" : [ "{regexp#integer}" ],
        "additional.full_line.context_features.prev_same_line_keyword_2" : [ "{regexp#integer}" ],
        "additional.full_line.context_size" : [ "{regexp#integer}" ],
        "additional.full_line.enabled" : [ "{enum#boolean}" ],
        "additional.full_line.filter_model_decision" : [ "{enum:SKIP|PASS|RANDOM_PASS|UNAVAILABLE|DISABLED}" ],
        "additional.full_line.filter_model_enabled" : [ "{enum#boolean}" ],
        "additional.full_line.filter_model_score" : [ "{regexp#float}" ],
        "additional.full_line.finished" : [ "{regexp#integer}" ],
        "additional.full_line.finished_cancelled" : [ "{regexp#integer}" ],
        "additional.full_line.finished_exception" : [ "{regexp#integer}" ],
        "additional.full_line.finished_timed_out" : [ "{regexp#integer}" ],
        "additional.full_line.finished_times" : [ "{regexp#integer}" ],
        "additional.full_line.fl_features_computation_time" : [ "{regexp#integer}" ],
        "additional.full_line.hardware_fast_enough" : [ "{enum#boolean}" ],
        "additional.full_line.inapplicable" : [ "{enum:LANGUAGE_IS_NOT_SUPPORTED|DISABLED_IN_RIDER|DISABLED_LANGUAGE|UNSUPPORTED_COMPLETION_MODE|IS_NOT_MAIN_EDITOR|NOT_A_BASIC_COMPLETION|UNSUPPORTED_PLATFORM|THIRD_PARTY_CONFLICT}", "{enum:IN_POWER_SAFE_MODE}" ],
        "additional.full_line.items_analyzed" : [ "{regexp#integer}" ],
        "additional.full_line.items_generated" : [ "{regexp#integer}" ],
        "additional.full_line.items_invalid_critical" : [ "{regexp#integer}" ],
        "additional.full_line.items_invalid_syntax" : [ "{regexp#integer}" ],
        "additional.full_line.items_invalid_total" : [ "{regexp#integer}" ],
        "additional.full_line.items_not_analyzed_timeout" : [ "{regexp#integer}" ],
        "additional.full_line.items_not_analyzed_unknown" : [ "{regexp#integer}" ],
        "additional.full_line.items_proposed" : [ "{regexp#integer}" ],
        "additional.full_line.max_entropy" : [ "{regexp#float}" ],
        "additional.full_line.max_entropy_position" : [ "{regexp#float}" ],
        "additional.full_line.max_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.max_normalized_probability_position" : [ "{regexp#float}" ],
        "additional.full_line.max_probability" : [ "{regexp#float}" ],
        "additional.full_line.max_probability_position" : [ "{regexp#float}" ],
        "additional.full_line.min_entropy" : [ "{regexp#float}" ],
        "additional.full_line.min_entropy_position" : [ "{regexp#float}" ],
        "additional.full_line.min_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.min_normalized_probability_position" : [ "{regexp#float}" ],
        "additional.full_line.min_probability" : [ "{regexp#float}" ],
        "additional.full_line.min_probability_position" : [ "{regexp#float}" ],
        "additional.full_line.num_of_suggestion_references" : [ "{regexp#integer}" ],
        "additional.full_line.proposal_next_line_similarity" : [ "{regexp#float}" ],
        "additional.full_line.proposal_prev_line_similarity" : [ "{regexp#float}" ],
        "additional.full_line.rag_context_computation_time" : [ "{regexp#integer}" ],
        "additional.full_line.rag_context_size" : [ "{regexp#integer}" ],
        "additional.full_line.raw_prefix_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.raw_score" : [ "{regexp#float}" ],
        "additional.full_line.selected" : [ "{enum#boolean}" ],
        "additional.full_line.selected_cache_extension_length" : [ "{regexp#integer}" ],
        "additional.full_line.selected_cache_hit_length" : [ "{regexp#integer}" ],
        "additional.full_line.selected_checks_time" : [ "{regexp#integer}" ],
        "additional.full_line.selected_code_tokens_count" : [ "{regexp#integer}" ],
        "additional.full_line.selected_inference_time" : [ "{regexp#integer}" ],
        "additional.full_line.selected_last_char" : [ "{enum:LETTER|DIGIT|DOT|SPACE|OPENED_BRACKET|CLOSED_BRACKET|TERMINATION}" ],
        "additional.full_line.selected_local_inference_type" : [ "{enum:K_INFERENCE|ONNX_NATIVE|LLAMA_NATIVE}" ],
        "additional.full_line.selected_prefix_length" : [ "{regexp#integer}" ],
        "additional.full_line.selected_provider" : [ "{util#class_name}" ],
        "additional.full_line.selected_score" : [ "{regexp#float}" ],
        "additional.full_line.selected_semantic_state" : [ "{enum:CORRECT|UNKNOWN|INCORRECT_ACCEPTABLE|INCORRECT_CRITICAL}" ],
        "additional.full_line.selected_suffix_length" : [ "{regexp#integer}" ],
        "additional.full_line.selected_syntax_state" : [ "{enum:CORRECT|UNKNOWN|INCORRECT_ACCEPTABLE|INCORRECT_CRITICAL}" ],
        "additional.full_line.selected_tokens_count" : [ "{regexp#integer}" ],
        "additional.full_line.started" : [ "{regexp#integer}" ],
        "additional.full_line.stddev_entropy" : [ "{regexp#float}" ],
        "additional.full_line.stddev_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.stddev_probability" : [ "{regexp#float}" ],
        "additional.full_line.suggestion_length" : [ "{regexp#integer}" ],
        "additional.full_line.suggestion_reference_0_from_lib" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_0_in_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_0_in_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_0_in_same_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_0_in_same_file" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_0_in_same_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_0_is_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_0_is_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_1_from_lib" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_1_in_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_1_in_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_1_in_same_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_1_in_same_file" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_1_in_same_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_1_is_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_1_is_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_2_from_lib" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_2_in_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_2_in_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_2_in_same_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_2_in_same_file" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_2_in_same_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_2_is_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_2_is_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_3_from_lib" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_3_in_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_3_in_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_3_in_same_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_3_in_same_file" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_3_in_same_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_3_is_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_3_is_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_4_from_lib" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_4_in_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_4_in_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_4_in_same_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_4_in_same_file" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_4_in_same_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_4_is_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_4_is_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_5_from_lib" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_5_in_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_5_in_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_5_in_same_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_5_in_same_file" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_5_in_same_fun" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_5_is_class" : [ "{enum#boolean}" ],
        "additional.full_line.suggestion_reference_5_is_fun" : [ "{enum#boolean}" ],
        "additional.full_line.token_0_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_0_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_0_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_0_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_0_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_0_length" : [ "{regexp#float}" ],
        "additional.full_line.token_0_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_0_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_0_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_0_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_0_score" : [ "{regexp#float}" ],
        "additional.full_line.token_10_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_10_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_10_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_10_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_10_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_10_length" : [ "{regexp#float}" ],
        "additional.full_line.token_10_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_10_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_10_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_10_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_10_score" : [ "{regexp#float}" ],
        "additional.full_line.token_1_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_1_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_1_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_1_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_1_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_1_length" : [ "{regexp#float}" ],
        "additional.full_line.token_1_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_1_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_1_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_1_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_1_score" : [ "{regexp#float}" ],
        "additional.full_line.token_2_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_2_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_2_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_2_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_2_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_2_length" : [ "{regexp#float}" ],
        "additional.full_line.token_2_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_2_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_2_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_2_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_2_score" : [ "{regexp#float}" ],
        "additional.full_line.token_3_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_3_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_3_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_3_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_3_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_3_length" : [ "{regexp#float}" ],
        "additional.full_line.token_3_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_3_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_3_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_3_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_3_score" : [ "{regexp#float}" ],
        "additional.full_line.token_4_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_4_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_4_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_4_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_4_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_4_length" : [ "{regexp#float}" ],
        "additional.full_line.token_4_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_4_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_4_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_4_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_4_score" : [ "{regexp#float}" ],
        "additional.full_line.token_5_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_5_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_5_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_5_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_5_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_5_length" : [ "{regexp#float}" ],
        "additional.full_line.token_5_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_5_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_5_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_5_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_5_score" : [ "{regexp#float}" ],
        "additional.full_line.token_6_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_6_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_6_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_6_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_6_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_6_length" : [ "{regexp#float}" ],
        "additional.full_line.token_6_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_6_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_6_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_6_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_6_score" : [ "{regexp#float}" ],
        "additional.full_line.token_7_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_7_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_7_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_7_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_7_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_7_length" : [ "{regexp#float}" ],
        "additional.full_line.token_7_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_7_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_7_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_7_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_7_score" : [ "{regexp#float}" ],
        "additional.full_line.token_8_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_8_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_8_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_8_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_8_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_8_length" : [ "{regexp#float}" ],
        "additional.full_line.token_8_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_8_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_8_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_8_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_8_score" : [ "{regexp#float}" ],
        "additional.full_line.token_9_entropy" : [ "{regexp#float}" ],
        "additional.full_line.token_9_has_digit" : [ "{enum#boolean}" ],
        "additional.full_line.token_9_has_dot" : [ "{enum#boolean}" ],
        "additional.full_line.token_9_has_letter" : [ "{enum#boolean}" ],
        "additional.full_line.token_9_has_space" : [ "{enum#boolean}" ],
        "additional.full_line.token_9_length" : [ "{regexp#float}" ],
        "additional.full_line.token_9_normalized_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_9_normalized_score" : [ "{regexp#float}" ],
        "additional.full_line.token_9_prefix_matched_ratio" : [ "{regexp#float}" ],
        "additional.full_line.token_9_probability" : [ "{regexp#float}" ],
        "additional.full_line.token_9_score" : [ "{regexp#float}" ],
        "additional.full_line.tracked" : [ "{enum#boolean}" ],
        "additional.full_line.trigger_model_decision" : [ "{enum:SKIP|TRIGGER|RANDOM_TRIGGER|UNAVAILABLE|DISABLED}", "{enum:PASS|RANDOM_PASS}" ],
        "additional.full_line.trigger_model_enabled" : [ "{enum#boolean}" ],
        "additional.full_line.trigger_model_score" : [ "{regexp#float}" ],
        "additional.full_line.version" : [ "{regexp#version}" ],
        "appended_length" : [ "{regexp#integer}" ],
        "common_prefix_length" : [ "{regexp#integer}" ],
        "common_suffix_length" : [ "{regexp#integer}" ],
        "context_features.column_number" : [ "{regexp#integer}" ],
        "context_features.fifth_parent" : [ "{util#class_name}" ],
        "context_features.first_parent" : [ "{util#class_name}" ],
        "context_features.following_empty_lines_count" : [ "{regexp#integer}" ],
        "context_features.following_non_empty_line_length" : [ "{regexp#integer}" ],
        "context_features.forth_parent" : [ "{util#class_name}" ],
        "context_features.is_white_space_after_caret" : [ "{enum#boolean}" ],
        "context_features.is_white_space_before_caret" : [ "{enum#boolean}" ],
        "context_features.line_number" : [ "{regexp#integer}" ],
        "context_features.non_space_symbol_after_caret" : [ "{enum:LETTER|CAPITAL_LETTER|UNDERSCORE|NUMBER|QUOTE|OPENING_BRACKET|CLOSING_BRACKET|SIGN|PUNCTUATION|SYMBOL}" ],
        "context_features.non_space_symbol_before_caret" : [ "{enum:LETTER|CAPITAL_LETTER|UNDERSCORE|NUMBER|QUOTE|OPENING_BRACKET|CLOSING_BRACKET|SIGN|PUNCTUATION|SYMBOL}" ],
        "context_features.previous_empty_lines_count" : [ "{regexp#integer}" ],
        "context_features.previous_non_empty_line_length" : [ "{regexp#integer}" ],
        "context_features.second_parent" : [ "{util#class_name}" ],
        "context_features.symbols_in_line_after_caret" : [ "{regexp#integer}" ],
        "context_features.symbols_in_line_before_caret" : [ "{regexp#integer}" ],
        "context_features.third_parent" : [ "{util#class_name}" ],
        "context_features.time_since_last_typing" : [ "{regexp#integer}" ],
        "context_features.typing_speed_1s" : [ "{regexp#float}" ],
        "context_features.typing_speed_2s" : [ "{regexp#float}" ],
        "context_features.typing_speed_30s" : [ "{regexp#float}" ],
        "context_features.typing_speed_5s" : [ "{regexp#float}" ],
        "context_features_computation_time" : [ "{regexp#integer}" ],
        "current_file" : [ "{util#current_file}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "edit_distance" : [ "{regexp#integer}" ],
        "edit_distance_no_add" : [ "{regexp#integer}" ],
        "event" : [ "{util#class_name}" ],
        "explicit_switching_variants_times" : [ "{regexp#integer}" ],
        "finish_type" : [ "{enum:SELECTED|CANCELED}", "{enum:IMPLICITLY_CANCELED|EXPLICITLY_CANCELED}", "{enum#__finish_type}", "{enum:TYPED}", "{enum:BACKSPACE_PRESSED}" ],
        "lang" : [ "{util#lang}" ],
        "length" : [ "{regexp#integer}" ],
        "lines" : [ "{regexp#integer}" ],
        "outcome" : [ "{enum:EXCEPTION|CANCELED|SHOW|NO_SUGGESTIONS}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "provider" : [ "{util#class_name}" ],
        "request_id" : [ "{regexp#integer}" ],
        "result_length" : [ "{regexp#integer}" ],
        "selected_index" : [ "{regexp#integer}" ],
        "showing_time" : [ "{regexp#integer}" ],
        "skipped_length" : [ "{regexp#integer}" ],
        "suggestion_length" : [ "{regexp#integer}" ],
        "time_to_compute" : [ "{regexp#integer}" ],
        "time_to_show" : [ "{regexp#integer}" ],
        "typing_during_show" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__finish_type" : [ "INVALIDATED", "DOCUMENT_CHANGED", "OTHER", "EDITOR_REMOVED", "CARET_CHANGED", "MOUSE_PRESSED", "ERROR", "KEY_PRESSED", "EMPTY", "ESCAPE_PRESSED", "FOCUS_LOST" ]
      }
    }
  }, {
    "id" : "inspection.performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:global.inspection.finished}" ],
      "event_data" : {
        "build_reference_graph_duration_ms" : [ "{regexp#integer}" ],
        "number_of_files" : [ "{regexp#integer}" ],
        "number_of_inspections" : [ "{regexp#integer}" ],
        "total_duration_ms" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "inspection.widget",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:highlight.level.changed|popup.shown|highlight.level.changed.fromPopup}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "level" : [ "{enum:Errors_Only|None|All_Problems}", "{enum:SYNTAX|NONE|ALL}", "{enum:None|Syntax|Essential|All Problems}" ]
      }
    }
  }, {
    "id" : "inspections",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "amount" : [ "{regexp#integer}" ],
        "default" : [ "{enum#boolean}" ],
        "enabled" : [ "{enum#boolean}" ],
        "inspectionIds" : [ "{util#tool}" ],
        "inspectionSessions" : [ "{regexp#integer}" ],
        "inspection_enabled" : [ "{enum#boolean}" ],
        "inspection_id" : [ "{util#tool}" ],
        "lang" : [ "{util#lang}" ],
        "locked" : [ "{enum#boolean}" ],
        "option_index" : [ "{regexp#integer}" ],
        "option_name" : [ "{util#plugin_info}" ],
        "option_type" : [ "{enum:integer|boolean}" ],
        "option_value" : [ "{enum#boolean}", "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "project_level" : [ "{enum#boolean}" ],
        "scope" : [ "{enum:All|All Changed Files|Generated Files|Project Files and Vendor|Non-Project Files|Project Non-Source Files|Open Files|Project Files|Production|Scratches and Consoles|Project Source Files|Tests}", "{enum:custom}" ],
        "severity" : [ "{enum:INFORMATION|SERVER PROBLEM|INFO|WEAK WARNING|WARNING|ERROR}", "{enum:custom}", "{enum:TYPO}", "{enum:TEXT ATTRIBUTES}" ]
      },
      "enums" : {
        "__event_id" : [ "not.default.state", "setting.non.default.state", "used.profile", "profiles", "not.default.scope.and.severity", "inspections.reporting.problems" ]
      }
    }
  }, {
    "id" : "intellij.cds",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2",
      "to" : "4"
    } ],
    "rules" : {
      "event_id" : [ "{enum:building.cds.started|building.cds.finished|running.with.cds}" ],
      "event_data" : {
        "duration" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "running_with_archive" : [ "{enum#boolean}" ],
        "status" : [ "{enum#__status}", "{enum:enabled|disabled}", "{enum#boolean}" ],
        "uptime_millis" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__status" : [ "success", "cancelled", "terminated-by-user", "plugins-changed", "failed" ]
      }
    }
  }, {
    "id" : "intentions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "25"
    } ],
    "rules" : {
      "event_id" : [ "{enum:called|shown|popup.delay}" ],
      "event_data" : {
        "distance" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "file_type" : [ "{util#file_type}" ],
        "id" : [ "{util#class_name}" ],
        "inspection_id" : [ "{util#tool}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "position" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "introduce.parameter.inplace",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:settingsOnHide|started|settingsOnShow}" ],
      "event_data" : {
        "delegate" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "replaceAllOccurrences" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "introduce.variable.inplace",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:settingsOnHide|settingsOnShow|settingsChanged}" ],
      "event_data" : {
        "changed" : [ "{enum#boolean}" ],
        "final" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "varType" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "java.code.style",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:not.default}" ],
      "event_data" : {
        "name" : [ "{enum:COMMON_RIGHT_MARGIN|COMMON_LINE_COMMENT_AT_FIRST_COLUMN|COMMON_BLOCK_COMMENT_AT_FIRST_COLUMN|COMMON_LINE_COMMENT_ADD_SPACE|COMMON_BLOCK_COMMENT_ADD_SPACE|COMMON_LINE_COMMENT_ADD_SPACE_ON_REFORMAT|COMMON_KEEP_LINE_BREAKS|COMMON_KEEP_FIRST_COLUMN_COMMENT|COMMON_KEEP_CONTROL_STATEMENT_IN_ONE_LINE|COMMON_KEEP_BLANK_LINES_IN_DECLARATIONS|COMMON_KEEP_BLANK_LINES_IN_CODE|COMMON_KEEP_BLANK_LINES_BETWEEN_PACKAGE_DECLARATION_AND_HEADER|COMMON_KEEP_BLANK_LINES_BEFORE_RBRACE|COMMON_BLANK_LINES_BEFORE_PACKAGE|COMMON_BLANK_LINES_AFTER_PACKAGE|COMMON_BLANK_LINES_BEFORE_IMPORTS|COMMON_BLANK_LINES_AFTER_IMPORTS|COMMON_BLANK_LINES_AROUND_CLASS|COMMON_BLANK_LINES_AROUND_FIELD|COMMON_BLANK_LINES_AROUND_METHOD|COMMON_BLANK_LINES_BEFORE_METHOD_BODY|COMMON_BLANK_LINES_AROUND_FIELD_IN_INTERFACE|COMMON_BLANK_LINES_AROUND_METHOD_IN_INTERFACE|COMMON_BLANK_LINES_AFTER_CLASS_HEADER|COMMON_BLANK_LINES_AFTER_ANONYMOUS_CLASS_HEADER|COMMON_BLANK_LINES_BEFORE_CLASS_END|COMMON_BRACE_STYLE|COMMON_CLASS_BRACE_STYLE|COMMON_METHOD_BRACE_STYLE|COMMON_LAMBDA_BRACE_STYLE|COMMON_DO_NOT_INDENT_TOP_LEVEL_CLASS_MEMBERS|COMMON_ELSE_ON_NEW_LINE|COMMON_WHILE_ON_NEW_LINE|COMMON_CATCH_ON_NEW_LINE|COMMON_FINALLY_ON_NEW_LINE|COMMON_INDENT_CASE_FROM_SWITCH|COMMON_CASE_STATEMENT_ON_NEW_LINE|COMMON_INDENT_BREAK_FROM_CASE|COMMON_SPECIAL_ELSE_IF_TREATMENT|COMMON_ALIGN_MULTILINE_CHAINED_METHODS|COMMON_ALIGN_MULTILINE_PARAMETERS|COMMON_ALIGN_MULTILINE_PARAMETERS_IN_CALLS|COMMON_ALIGN_MULTILINE_RESOURCES|COMMON_ALIGN_MULTILINE_FOR|COMMON_ALIGN_MULTILINE_BINARY_OPERATION|COMMON_ALIGN_MULTILINE_ASSIGNMENT|COMMON_ALIGN_MULTILINE_TERNARY_OPERATION|COMMON_ALIGN_MULTILINE_THROWS_LIST|COMMON_ALIGN_THROWS_KEYWORD|COMMON_ALIGN_MULTILINE_EXTENDS_LIST|COMMON_ALIGN_MULTILINE_METHOD_BRACKETS|COMMON_ALIGN_MULTILINE_PARENTHESIZED_EXPRESSION|COMMON_ALIGN_MULTILINE_ARRAY_INITIALIZER_EXPRESSION|COMMON_ALIGN_GROUP_FIELD_DECLARATIONS|COMMON_ALIGN_CONSECUTIVE_VARIABLE_DECLARATIONS|COMMON_ALIGN_CONSECUTIVE_ASSIGNMENTS|COMMON_ALIGN_SUBSEQUENT_SIMPLE_METHODS|COMMON_SPACE_AROUND_ASSIGNMENT_OPERATORS|COMMON_SPACE_AROUND_LOGICAL_OPERATORS|COMMON_SPACE_AROUND_EQUALITY_OPERATORS|COMMON_SPACE_AROUND_RELATIONAL_OPERATORS|COMMON_SPACE_AROUND_BITWISE_OPERATORS|COMMON_SPACE_AROUND_ADDITIVE_OPERATORS|COMMON_SPACE_AROUND_MULTIPLICATIVE_OPERATORS|COMMON_SPACE_AROUND_SHIFT_OPERATORS|COMMON_SPACE_AROUND_UNARY_OPERATOR|COMMON_SPACE_AROUND_LAMBDA_ARROW|COMMON_SPACE_AROUND_METHOD_REF_DBL_COLON|COMMON_SPACE_AFTER_COMMA|COMMON_SPACE_AFTER_COMMA_IN_TYPE_ARGUMENTS|COMMON_SPACE_BEFORE_COMMA|COMMON_SPACE_AFTER_SEMICOLON|COMMON_SPACE_BEFORE_SEMICOLON|COMMON_SPACE_WITHIN_PARENTHESES|COMMON_SPACE_WITHIN_METHOD_CALL_PARENTHESES|COMMON_SPACE_WITHIN_EMPTY_METHOD_CALL_PARENTHESES|COMMON_SPACE_WITHIN_METHOD_PARENTHESES|COMMON_SPACE_WITHIN_EMPTY_METHOD_PARENTHESES|COMMON_SPACE_WITHIN_IF_PARENTHESES|COMMON_SPACE_WITHIN_WHILE_PARENTHESES|COMMON_SPACE_WITHIN_FOR_PARENTHESES|COMMON_SPACE_WITHIN_TRY_PARENTHESES|COMMON_SPACE_WITHIN_CATCH_PARENTHESES|COMMON_SPACE_WITHIN_SWITCH_PARENTHESES|COMMON_SPACE_WITHIN_SYNCHRONIZED_PARENTHESES|COMMON_SPACE_WITHIN_CAST_PARENTHESES|COMMON_SPACE_WITHIN_BRACKETS|COMMON_SPACE_WITHIN_BRACES|COMMON_SPACE_WITHIN_ARRAY_INITIALIZER_BRACES|COMMON_SPACE_WITHIN_EMPTY_ARRAY_INITIALIZER_BRACES|COMMON_SPACE_AFTER_TYPE_CAST|COMMON_SPACE_BEFORE_METHOD_CALL_PARENTHESES|COMMON_SPACE_BEFORE_METHOD_PARENTHESES|COMMON_SPACE_BEFORE_IF_PARENTHESES|COMMON_SPACE_BEFORE_WHILE_PARENTHESES|COMMON_SPACE_BEFORE_FOR_PARENTHESES|COMMON_SPACE_BEFORE_TRY_PARENTHESES|COMMON_SPACE_BEFORE_CATCH_PARENTHESES|COMMON_SPACE_BEFORE_SWITCH_PARENTHESES|COMMON_SPACE_BEFORE_SYNCHRONIZED_PARENTHESES|COMMON_SPACE_BEFORE_CLASS_LBRACE|COMMON_SPACE_BEFORE_METHOD_LBRACE|COMMON_SPACE_BEFORE_IF_LBRACE|COMMON_SPACE_BEFORE_ELSE_LBRACE|COMMON_SPACE_BEFORE_WHILE_LBRACE|COMMON_SPACE_BEFORE_FOR_LBRACE|COMMON_SPACE_BEFORE_DO_LBRACE|COMMON_SPACE_BEFORE_SWITCH_LBRACE|COMMON_SPACE_BEFORE_TRY_LBRACE|COMMON_SPACE_BEFORE_CATCH_LBRACE|COMMON_SPACE_BEFORE_FINALLY_LBRACE|COMMON_SPACE_BEFORE_SYNCHRONIZED_LBRACE|COMMON_SPACE_BEFORE_ARRAY_INITIALIZER_LBRACE|COMMON_SPACE_BEFORE_ANNOTATION_ARRAY_INITIALIZER_LBRACE|COMMON_SPACE_BEFORE_ELSE_KEYWORD|COMMON_SPACE_BEFORE_WHILE_KEYWORD|COMMON_SPACE_BEFORE_CATCH_KEYWORD|COMMON_SPACE_BEFORE_FINALLY_KEYWORD|COMMON_SPACE_BEFORE_QUEST|COMMON_SPACE_AFTER_QUEST|COMMON_SPACE_BEFORE_COLON|COMMON_SPACE_AFTER_COLON|COMMON_SPACE_BEFORE_TYPE_PARAMETER_LIST|COMMON_CALL_PARAMETERS_WRAP|COMMON_PREFER_PARAMETERS_WRAP|COMMON_CALL_PARAMETERS_LPAREN_ON_NEXT_LINE|COMMON_CALL_PARAMETERS_RPAREN_ON_NEXT_LINE|COMMON_METHOD_PARAMETERS_WRAP|COMMON_METHOD_PARAMETERS_LPAREN_ON_NEXT_LINE|COMMON_METHOD_PARAMETERS_RPAREN_ON_NEXT_LINE|COMMON_RESOURCE_LIST_WRAP|COMMON_RESOURCE_LIST_LPAREN_ON_NEXT_LINE|COMMON_RESOURCE_LIST_RPAREN_ON_NEXT_LINE|COMMON_EXTENDS_LIST_WRAP|COMMON_THROWS_LIST_WRAP|COMMON_EXTENDS_KEYWORD_WRAP|COMMON_THROWS_KEYWORD_WRAP|COMMON_METHOD_CALL_CHAIN_WRAP|COMMON_WRAP_FIRST_METHOD_IN_CALL_CHAIN|COMMON_PARENTHESES_EXPRESSION_LPAREN_WRAP|COMMON_PARENTHESES_EXPRESSION_RPAREN_WRAP|COMMON_BINARY_OPERATION_WRAP|COMMON_BINARY_OPERATION_SIGN_ON_NEXT_LINE|COMMON_TERNARY_OPERATION_WRAP|COMMON_TERNARY_OPERATION_SIGNS_ON_NEXT_LINE|COMMON_MODIFIER_LIST_WRAP|COMMON_KEEP_SIMPLE_BLOCKS_IN_ONE_LINE|COMMON_KEEP_SIMPLE_METHODS_IN_ONE_LINE|COMMON_KEEP_SIMPLE_LAMBDAS_IN_ONE_LINE|COMMON_KEEP_SIMPLE_CLASSES_IN_ONE_LINE|COMMON_KEEP_MULTIPLE_EXPRESSIONS_IN_ONE_LINE|COMMON_FOR_STATEMENT_WRAP|COMMON_FOR_STATEMENT_LPAREN_ON_NEXT_LINE|COMMON_FOR_STATEMENT_RPAREN_ON_NEXT_LINE|COMMON_ARRAY_INITIALIZER_WRAP|COMMON_ARRAY_INITIALIZER_LBRACE_ON_NEXT_LINE|COMMON_ARRAY_INITIALIZER_RBRACE_ON_NEXT_LINE|COMMON_ASSIGNMENT_WRAP|COMMON_PLACE_ASSIGNMENT_SIGN_ON_NEXT_LINE|COMMON_WRAP_COMMENTS|COMMON_ASSERT_STATEMENT_WRAP|COMMON_SWITCH_EXPRESSIONS_WRAP|COMMON_ASSERT_STATEMENT_COLON_ON_NEXT_LINE|COMMON_IF_BRACE_FORCE|COMMON_DOWHILE_BRACE_FORCE|COMMON_WHILE_BRACE_FORCE|COMMON_FOR_BRACE_FORCE|COMMON_WRAP_LONG_LINES|COMMON_METHOD_ANNOTATION_WRAP|COMMON_CLASS_ANNOTATION_WRAP|COMMON_FIELD_ANNOTATION_WRAP|COMMON_PARAMETER_ANNOTATION_WRAP|COMMON_VARIABLE_ANNOTATION_WRAP|COMMON_SPACE_BEFORE_ANOTATION_PARAMETER_LIST|COMMON_SPACE_WITHIN_ANNOTATION_PARENTHESES|COMMON_ENUM_CONSTANTS_WRAP|COMMON_KEEP_BUILDER_METHODS_INDENTS|COMMON_FORCE_REARRANGE_MODE|COMMON_WRAP_ON_TYPING|JAVA_PREFER_LONGER_NAMES|JAVA_GENERATE_FINAL_LOCALS|JAVA_GENERATE_FINAL_PARAMETERS|JAVA_USE_EXTERNAL_ANNOTATIONS|JAVA_INSERT_OVERRIDE_ANNOTATION|JAVA_REPEAT_SYNCHRONIZED|JAVA_REPLACE_INSTANCEOF_AND_CAST|JAVA_REPLACE_NULL_CHECK|JAVA_REPLACE_SUM|JAVA_SPACES_WITHIN_ANGLE_BRACKETS|JAVA_SPACE_AFTER_CLOSING_ANGLE_BRACKET_IN_TYPE_ARGUMENT|JAVA_SPACE_BEFORE_OPENING_ANGLE_BRACKET_IN_TYPE_PARAMETER|JAVA_SPACE_AROUND_TYPE_BOUNDS_IN_TYPE_PARAMETERS|JAVA_DO_NOT_WRAP_AFTER_SINGLE_ANNOTATION|JAVA_DO_NOT_WRAP_AFTER_SINGLE_ANNOTATION_IN_PARAMETER|JAVA_ANNOTATION_PARAMETER_WRAP|JAVA_ENUM_FIELD_ANNOTATION_WRAP|JAVA_ALIGN_MULTILINE_ANNOTATION_PARAMETERS|JAVA_NEW_LINE_AFTER_LPAREN_IN_ANNOTATION|JAVA_RPAREN_ON_NEW_LINE_IN_ANNOTATION|JAVA_SPACE_AROUND_ANNOTATION_EQ|JAVA_ALIGN_MULTILINE_TEXT_BLOCKS|JAVA_BLANK_LINES_AROUND_INITIALIZER|JAVA_CLASS_NAMES_IN_JAVADOC|JAVA_SPACE_BEFORE_COLON_IN_FOREACH|JAVA_SPACE_INSIDE_ONE_LINE_ENUM_BRACES|JAVA_NEW_LINE_WHEN_BODY_IS_PRESENTED|JAVA_LAYOUT_STATIC_IMPORTS_SEPARATELY|JAVA_USE_FQ_CLASS_NAMES|JAVA_USE_SINGLE_CLASS_IMPORTS|JAVA_INSERT_INNER_CLASS_IMPORTS|JAVA_CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND|JAVA_NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND|JAVA_WRAP_SEMICOLON_AFTER_CALL_CHAIN|JAVA_RECORD_COMPONENTS_WRAP|JAVA_ALIGN_MULTILINE_RECORDS|JAVA_NEW_LINE_AFTER_LPAREN_IN_RECORD_HEADER|JAVA_RPAREN_ON_NEW_LINE_IN_RECORD_HEADER|JAVA_SPACE_WITHIN_RECORD_HEADER|JAVA_DECONSTRUCTION_LIST_WRAP|JAVA_ALIGN_MULTILINE_DECONSTRUCTION_LIST_COMPONENTS|JAVA_NEW_LINE_AFTER_LPAREN_IN_DECONSTRUCTION_PATTERN|JAVA_RPAREN_ON_NEW_LINE_IN_DECONSTRUCTION_PATTERN|JAVA_SPACE_WITHIN_DECONSTRUCTION_LIST|JAVA_SPACE_BEFORE_DECONSTRUCTION_LIST|JAVA_MULTI_CATCH_TYPES_WRAP|JAVA_ALIGN_TYPES_IN_MULTI_CATCH|JAVA_ENABLE_JAVADOC_FORMATTING|JAVA_JD_ALIGN_PARAM_COMMENTS|JAVA_JD_ALIGN_EXCEPTION_COMMENTS|JAVA_JD_ADD_BLANK_AFTER_PARM_COMMENTS|JAVA_JD_ADD_BLANK_AFTER_RETURN|JAVA_JD_ADD_BLANK_AFTER_DESCRIPTION|JAVA_JD_P_AT_EMPTY_LINES|JAVA_JD_KEEP_INVALID_TAGS|JAVA_JD_KEEP_EMPTY_LINES|JAVA_JD_DO_NOT_WRAP_ONE_LINE_COMMENTS|JAVA_JD_USE_THROWS_NOT_EXCEPTION|JAVA_JD_KEEP_EMPTY_PARAMETER|JAVA_JD_KEEP_EMPTY_EXCEPTION|JAVA_JD_KEEP_EMPTY_RETURN|JAVA_JD_LEADING_ASTERISKS_ARE_ENABLED|JAVA_JD_PRESERVE_LINE_FEEDS|JAVA_JD_PARAM_DESCRIPTION_ON_NEW_LINE|JAVA_JD_INDENT_ON_CONTINUATION}" ],
        "value" : [ "{enum#boolean}", "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "java.compiler.settings.project",
    "builds" : [ {
      "from" : "192.4883"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "REBUILD_ON_DEPENDENCY_CHANGE", "DISPLAY_NOTIFICATION_POPUP", "PARALLEL_COMPILATION", "COMPILE_AFFECTED_UNLOADED_MODULES_BEFORE_COMMIT", "MAKE_PROJECT_ON_SAVE", "AUTO_SHOW_ERRORS_IN_EDITOR", "CLEAR_OUTPUT_DIRECTORY" ]
      }
    }
  }, {
    "id" : "java.completion.contributors",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:insert.handle}" ],
      "event_data" : {
        "type_completion" : [ "{enum:SMART|BASIC}" ],
        "type_contributor" : [ "{enum:tag|static_qualifier}" ]
      }
    }
  }, {
    "id" : "java.debugger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "avg_time_ms" : [ "{regexp#integer}" ],
        "count" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "language" : [ "{enum:JAVA|KOTLIN}" ],
        "step_action" : [ "{enum:STEP_INTO|STEP_OUT|STEP_OVER}" ],
        "type" : [ "{enum:java-exception|java-collection|java-wildcard-method|java-line|java-field|java-method|kotlin-line|kotlin-field|kotlin-function}" ]
      },
      "enums" : {
        "__event_id" : [ "breakpoint.install.overhead", "stepping.overhead", "breakpoint.visit.overhead", "stepping.method.not.called", "breakpoint.install.search.overhead" ]
      }
    }
  }, {
    "id" : "java.debugger.actions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:attach.inlay|create.exception.breakpoint.inlay|attach.inlay.shown}" ]
    }
  }, {
    "id" : "java.extract.method",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:dialog.closed}" ],
      "event_data" : {
        "annotated" : [ "{enum#boolean}" ],
        "constructor" : [ "{enum#boolean}" ],
        "finished" : [ "{enum#boolean}" ],
        "folded" : [ "{enum#boolean}" ],
        "make_varargs" : [ "{enum#boolean}" ],
        "parameters_count" : [ "{regexp#integer}" ],
        "parameters_removed" : [ "{enum#boolean}" ],
        "parameters_renamed" : [ "{enum#boolean}" ],
        "parameters_reordered" : [ "{enum#boolean}" ],
        "parameters_type_changed" : [ "{enum#boolean}" ],
        "preview_used" : [ "{enum#boolean}" ],
        "return_changed" : [ "{enum#boolean}" ],
        "static" : [ "{enum#boolean}" ],
        "static_pass_fields_available" : [ "{enum#boolean}" ],
        "visibility_changed" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "java.find.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "classesUsages" : [ "{enum#boolean}" ],
        "derivedInterfaces" : [ "{enum#boolean}" ],
        "derivedUsages" : [ "{enum#boolean}" ],
        "fieldUsages" : [ "{enum#boolean}" ],
        "implementingClasses" : [ "{enum#boolean}" ],
        "implementingMethods" : [ "{enum#boolean}" ],
        "implicitCalls" : [ "{enum#boolean}" ],
        "includeInherited" : [ "{enum#boolean}" ],
        "includeOverload" : [ "{enum#boolean}" ],
        "methodUsages" : [ "{enum#boolean}" ],
        "overridingMethods" : [ "{enum#boolean}" ],
        "readAccess" : [ "{enum#boolean}" ],
        "searchForAccessors" : [ "{enum#boolean}" ],
        "searchForBaseAccessors" : [ "{enum#boolean}" ],
        "searchForBaseMethods" : [ "{enum#boolean}" ],
        "searchInOverriding" : [ "{enum#boolean}" ],
        "searchScope" : [ "{enum:All_Places|Project_Files|Project_and_Libraries|Project_Production_Files|Project_Test_Files|Scratches_and_Consoles|Recently_Viewed_Files|Recently_Changed_Files|Open_Files|Current_File]}", "{enum:Current File}" ],
        "textOccurrences" : [ "{enum#boolean}" ],
        "usages" : [ "{enum#boolean}" ],
        "writeAccess" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "find.class.started", "find.method.started", "find.package.started", "find.throw.started", "find.variable.started" ]
      }
    }
  }, {
    "id" : "java.language",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:MODULE_JDK_VERSION|MODULE_LANGUAGE_LEVEL}" ],
      "event_data" : {
        "ea" : [ "{enum#boolean}" ],
        "feature" : [ "{regexp#integer}" ],
        "minor" : [ "{regexp#integer}" ],
        "preview" : [ "{enum#boolean}" ],
        "update" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#integer}" ],
        "wsl" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "java.lens",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "location" : [ "{enum:class|method}" ]
      },
      "enums" : {
        "__event_id" : [ "setting.clicked", "usages.clicked", "implementations.clicked", "related.problems.clicked", "code.author.clicked" ]
      }
    }
  }, {
    "id" : "java.module.language.level",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:MODULE_LANGUAGE_LEVEL}" ],
      "event_data" : {
        "preview" : [ "{enum#boolean}" ],
        "version" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "java.refactoring.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "javadoc" : [ "{enum:as_is|copy|move|unknown}" ],
        "replace_fields_with_getters" : [ "{enum:none|inaccessible|all|unknown}" ],
        "visibility" : [ "{enum:public|protected|packageLocal|private|EscalateVisible|unknown}" ]
      },
      "enums" : {
        "__event_id" : [ "introduce.local.use.var", "encapsulate.fields.use.accessors", "inline.class.search.in.non.java", "introduce.constant.visibility", "introduce.parameter.use.initializer", "inline.field.this.only.choice", "inline.class.search.in.comments", "introduce.parameter.create.finals", "rename.search.for.text.for.method", "pull.up.members.javadoc", "rename.auto.overloads", "inline.method.this.only.choice", "extract.superclass.javadoc", "inheritance.to.delegation.delegate.other", "inline.local.this.only.choice", "inline.super.class.this.only.choice", "rename.search.for.text.for.package", "rename.search.for.text.for.field", "rename.search.for.text.for.variable", "rename.search.in.comments.for.field", "introduce.field.visibility", "rename.search.in.comments.for.class", "introduce.parameter.replace.fields.with.getters", "rename.search.for.text.for.class", "rename.auto.tests", "introduce.local.create.finals", "inline.field.all.and.keep.choice", "rename.search.in.comments.for.method", "move.search.in.comments", "rename.search.in.comments.for.variable", "move.search.for.text", "introduce.parameter.delete.local", "introduce.constant.replace.all", "rename.auto.inheritors", "extract.interface.javadoc", "rename.search.in.comments.for.package", "rename.auto.variables", "inline.method.all.and.keep.choice" ]
      }
    }
  }, {
    "id" : "java.smart.enter.fixer",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:fixer_used}" ],
      "event_data" : {
        "fixer_used" : [ "{enum:LiteralFixer|MethodCallFixer|IfConditionFixer|ForStatementFixer|TernaryColonFixer|WhileConditionFixer|CatchDeclarationFixer|SwitchExpressionFixer|SwitchLabelColonFixer|DoWhileConditionFixer|BlockBraceFixer|MissingIfBranchesFixer|MissingWhileBodyFixer|MissingTryBodyFixer|MissingSwitchBodyFixer|MissingCatchBodyFixer|MissingSynchronizedBodyFixer|MissingForBodyFixer|MissingForeachBodyFixer|ParameterListFixer|MissingCommaFixer|MissingMethodBodyFixer|MissingClassBodyFixer|MissingReturnExpressionFixer|MissingThrowExpressionFixer|ParenthesizedFixer|SemicolonFixer|MissingArrayInitializerBraceFixer|MissingArrayConstructorBracketFixer|EnumFieldFixer}", "{enum:MissingLoopBodyFixer}", "{enum:MissingLambdaBodyFixer}" ]
      }
    }
  }, {
    "id" : "javaLibraryJars",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:used.library}" ],
      "event_data" : {
        "library" : [ "{enum#libraries}", "{util#used_library_name}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "libraries" : [ "activemq", "activemq-client", "activiti", "activiti-bpm", "aeron", "akka-actor", "akka-actor-typed", "akka-http", "akka-java", "akka-stream", "algebird", "allure1", "allure2", "amazon-sqs", "androidx-compose", "apache-bval", "apache-camel", "apache-cayenne", "apache-collections", "apache-deltaspike", "apache-deltaspike-data", "apache-dubbo", "apache-flink", "apache-hc", "apache-http", "apache-ignite", "apache-mina", "apache-pdfbox", "apache-poi", "apache-pulsar", "apache-rocketmq", "apache-shiro", "apache-spark", "apache-thrift", "apache-tiles", "apollo", "appium", "armeria", "arquillian", "arrowkt", "asm", "aspectj", "async-http-client", "atlas", "avro", "aws-s3", "aws-sdk", "aws-sqs", "awspring", "axonframework", "axoniq", "blade", "breeze", "bytebuddy", "caliban", "camunda", "camunda-bpm", "cats", "cats-effect", "chimney", "chisel3", "circe", "citrus", "clikt", "coherence", "consul", "corda", "coroutineworker", "crashkios", "cucumber", "dagger", "datanucleus-jpa", "debezium", "decompose", "deequ", "delta-core", "documents4j", "dokka", "doobie", "doodle", "drools", "dropwizard", "easymock", "ebean", "eclipse-collections", "eclipselink", "eclipselink-jpa", "ehcache", "elastic4s", "elasticmq", "eureka", "exposed", "fastutil", "finagle", "finatra", "firebase-kotlin-sdk", "flexy-pool", "flowable", "flowable-bpm", "fluentlenium", "flyway", "freemarker", "fritz2", "fs2", "fuel", "gatling", "gauge-java", "geb", "google-cloud-pubsub", "google-http-java-client", "gorm", "grails", "graphql-java", "graphql-kotlin", "groovy", "grpc", "gson", "guice", "gwt", "h2", "hazelcast", "hazelcast-jet", "helidon", "hexagonkt", "hibernate", "hibernate-envers", "hibernate-reactive", "hibernate-validator", "hikaricp", "htmlelements", "http4k", "http4s", "hystrix", "infinispan", "io.grpc", "itextpdf", "jackson", "jaeger", "jaegertracing", "jakarta-batch", "jakarta-cdi", "jakarta-ejb", "jakarta-jms", "jakarta-jpa", "jakarta-jsf", "jakarta-nosql", "jakarta-rs", "jakarta-validation", "jakarta-websocket", "jakarta-ws", "java-swing", "java-websocket", "javafx", "javalin", "javax-batch", "javax-cdi", "javax-ejb", "javax-jms", "javax-jpa", "javax-jsf", "javax-rs", "javax-validation", "javax-websocket", "javax-ws", "jbehave", "jbpm", "jdbi", "jdi-light", "jedis", "jetbrains-annotations", "jetbrains-compose", "jhipster", "jmockit", "jodd-db", "jooby", "jooq", "js-externals", "jsf", "json-path", "json4s", "jsoniter-scala", "jsonpath", "jsoup", "junit", "junit4", "junit5", "kafka", "kafka-client", "karate", "klaxon", "klock", "kodein", "kodein-db", "kodein-di", "koin", "korge", "kotest", "kotless", "kotlin", "kotlin-material-ui", "kotlin-test", "kotlinx-benchmark", "kotlinx-browser", "kotlinx-cli", "kotlinx-collections-immutable", "kotlinx-coroutines", "kotlinx-datetime", "kotlinx-html", "kotlinx-io", "kotlinx-serialization", "ktlint", "ktor", "ktorm", "kvision", "lagom", "lagom-java", "lagom-scala", "laminar", "liquibase", "log4j", "logback", "lombok", "lucene", "macwire", "magnolia", "mapstruct", "micrometer", "micronaut", "microprofile", "microprofile-config", "mleap", "mockito", "mockk", "mockserver", "moko-mvvm", "monix", "monocle", "multik", "multiplatform-settings", "munit", "mvikotlin", "mybatis", "napier", "netty", "npm-publish", "ok3-http", "okhttp3", "okio", "opencv", "openfeign", "openjfx", "openjpa", "opentelemetry", "opentracing", "optaplanner", "osgi", "play", "play-json", "play2", "playwright-java", "protobuf", "pureconfig", "quarkus", "quarkus-qute", "quartz", "querydsl", "quill", "r2dbc", "rabbitmq", "rabbitmq-client", "rabbitmq-java-client", "reactor", "reaktive", "refined", "resilience4j", "restassured", "retrofit", "retrofit2", "robotframework", "rsocket", "rsocket-java", "rsocket-kotlin", "rx-java", "rx-java3", "rxdownload", "rxjava", "rxjava3", "rxkotlin", "sangria", "scala", "scala-async", "scalacheck", "scalafx", "scalalikejdbc", "scalameta", "scalamock", "scalapb", "scalatest", "scalatra", "scalaz", "scio", "selenide", "selenium", "serenity", "shapeless", "skunk", "slf4j", "slick", "smallrye-mutiny", "spark", "spark-java", "specs2", "spek", "spire", "spock", "spring-amqp", "spring-batch", "spring-boot", "spring-cloud", "spring-cloud-commons", "spring-cloud-gateway", "spring-cloud-kubernetes", "spring-cloud-openfeign", "spring-cloud-retrofit", "spring-cloud-stream", "spring-core", "spring-data-commons", "spring-data-hadoop", "spring-data-jdbc-ext", "spring-data-jpa", "spring-data-mongo", "spring-data-neo4j", "spring-data-r2dbc", "spring-data-rest", "spring-data-solr", "spring-graphql", "spring-integration", "spring-integration-amqp", "spring-kafka", "spring-mvc", "spring-osgi", "spring-rabbitmq", "spring-security", "spring-security-oauth", "spring-security-oauth2", "spring-session", "spring-web", "spring-webflow", "spring-webflux", "spring-websocket", "spring-ws", "springfox", "springOldJavaConfig", "sqldelight", "stately", "streamex", "struts2", "sttp", "swagger-v2", "swagger-v3", "tapestry5", "tapir", "testcontainers", "testng", "thymeleaf", "tornadofx", "twitter-server", "twitter-util", "unfiltered", "unirest", "upickle", "utest", "vaadin-flow", "vavr", "velocity", "vertx", "webtau", "webtau-browser", "webtau-http", "weld", "wiremock", "xmlgraphics", "zio", "zio-test", "zipkin2", "zookeeper", "zuul" ]
      }
    }
  }, {
    "id" : "jdk.downloader",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:selected|download|detected}" ],
      "event_data" : {
        "product" : [ "{enum:AdoptOpenJDK (HotSpot)|AdoptOpenJDK (OpenJ9)|Eclipse Temurin|IBM Semeru|Amazon Corretto|GraalVM|IBM JDK|JetBrains Runtime|BellSoft Liberica|Oracle OpenJDK|SAP SapMachine|Azul Zulu|Unknown}" ],
        "success" : [ "{enum#boolean}" ],
        "version" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "jps.cache",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2",
      "to" : "4"
    } ],
    "rules" : {
      "event_id" : [ "{enum:download.through.notification|caches.downloaded}" ],
      "event_data" : {
        "download_binary_size" : [ "{regexp#integer}" ],
        "download_cache_size" : [ "{regexp#integer}" ],
        "duration" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "js.dialects",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "React_JSX", "ECMAScript_3", "JavaScript_1.6", "Nashorn_JS", "ECMAScript_6", "JavaScript_1.8.5", "JavaScript_1.8", "JavaScript_1.7", "ECMAScript_5.1", "DEFAULT", "Flow" ]
      }
    }
  }, {
    "id" : "js.eslint.options",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "enabled", "node.interpreter.custom", "node.package.autodetect", "node.package.custom.package", "command.line.options.specified", "additional.rules.specified", "custom.config.specified", "eslint.fix.on.save" ]
      }
    }
  }, {
    "id" : "js.extract.function",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:refactoring.finished}" ],
      "event_data" : {
        "type" : [ "{enum:FUNCTION|ARROW_FUNCTION}" ],
        "type_configurable" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "js.language.service",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "service" : [ "{enum#__service}", "{util#class_name}" ]
      },
      "enums" : {
        "__service" : [ "TypeScriptServerServiceImpl", "ESLintLanguageService", "TsLintLanguageService", "VueTypeScriptService", "PrettierLanguageServiceImpl", "FlowJSLspService", "FlowJSCliService", "StandardJSService", "LanguageService", "third.party" ]
      }
    }
  }, {
    "id" : "js.language.service.starts",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "PrettierLanguageServiceImpl", "FlowJSLspService", "LanguageService", "TsLintLanguageService", "ESLintLanguageService", "VueTypeScriptService", "FlowJSCliService", "StandardJSService", "third.party", "TypeScriptServerServiceImpl" ]
      }
    }
  }, {
    "id" : "js.lens",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:usages.clicked|implementations.clicked|code.author.clicked}" ],
      "event_data" : {
        "location" : [ "{enum:interface|class|var_or_field|function|export_assignment|callback|other}", "{enum:component}" ]
      }
    }
  }, {
    "id" : "js.live.edit.options",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:use.chrome.extension|chrome.update.on.changes|node.update.on.changes}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "js.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:language.level|completion.only.type.based}" ],
      "event_data" : {
        "value" : [ "{enum#__value}", "{enum#boolean}" ]
      },
      "enums" : {
        "__value" : [ "js_1_5", "es5", "js_1_6", "js_1_7", "js_1_8", "js_1_8_5", "es6", "jsx", "nashorn", "flow", "unknown", "JS_1_8", "JS_1_5", "ES5", "JS_1_6", "NASHORN", "JS_1_7", "E4X", "ES6", "JS_1_8_5", "FLOW", "JSX" ]
      }
    }
  }, {
    "id" : "js.tslint.options",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "enabled", "node.interpreter.custom", "node.package.autodetect", "node.package.custom.package", "additional.rules.specified", "custom.config.specified" ]
      }
    }
  }, {
    "id" : "json.schema",
    "builds" : [ {
      "from" : "192.5150"
    } ],
    "rules" : {
      "event_id" : [ "{enum:completion.by.schema.invoked}" ],
      "event_data" : {
        "schemaKind" : [ "{enum:builtin|schema|user|remote}" ]
      }
    }
  }, {
    "id" : "jupyter.connections",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:jupyter.server.version}" ],
      "event_data" : {
        "managed" : [ "{enum#boolean}" ],
        "server_kind" : [ "{enum:Notebook|Hub}", "{enum:Lab}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "jupyter.features",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "cell_code_count" : [ "{regexp#integer}" ],
        "cell_count" : [ "{regexp#integer}" ],
        "cell_markdown_count" : [ "{regexp#integer}" ],
        "cell_sql_count" : [ "{regexp#integer}" ],
        "cell_with_tags_count" : [ "{regexp#integer}" ],
        "file_size" : [ "{regexp#integer}" ],
        "full_load_time_ms" : [ "{regexp#integer}" ],
        "memory_used_kb" : [ "{regexp#integer}" ],
        "mimeType" : [ "{enum:TEXT_HTML|TEXT_PLAIN|TEXT_MARKDOWN|APPLICATION_JAVASCRIPT|APPLICATION_JSON|IMAGE_PNG|IMAGE_JPG|IMAGE_SVG|WIDGET_VIEW|GIF|LATEX|DEBUG|GEO_JSON|VDOM_PATTERN|VND_PATTERN|EMPTY|UNKNOWN}" ],
        "notebook_size_kb" : [ "{regexp#integer}" ],
        "output_type" : [ "{enum:TEXT|ERROR|MARKDOWN|IMAGE|BROWSER|CONSOLE_TABLE|LETS_PLOT|SVG|R_MARKDOWN|TEST|PANDAS_DATA_FRAME|PANDAS_SERIES|NUMPY_ARRAY|POLARS_DATA_FRAME|POLARS_SERIES|PYSPARK_TABLE|GENERIC_TABLE|EXTERNAL_TABLE|UNKNOWN}" ],
        "post_editor_init_load_time_ms" : [ "{regexp#integer}" ],
        "status" : [ "{enum:OK|ERROR|ABORTED}" ],
        "tableType" : [ "{enum:PANDAS_DATA_FRAME|PANDAS_SERIES|NUMPY_ARRAY|POLARS_DATA_FRAME|POLARS_SERIES|PYSPARK_TABLE|GENERIC_TABLE|EXTERNAL|NOT_ANY}" ],
        "type" : [ "{enum:CDN|LOCAL|REMOTE}" ],
        "version" : [ "{regexp#version}" ],
        "widget" : [ "{enum:BQOLOT|THREEJS|PLOTLY|CATBOOST|YGRAPHS|IPYVOLUME|LEAFLET|MATPLOTLIB|VUE|VUETIFY|DATAWIDGETS|OTHER}" ]
      },
      "enums" : {
        "__event_id" : [ "widget.error.load", "notebook.loaded.time", "notebook.loaded.memory", "widget.loaded", "showed.output", "notebook.opened", "file.download.from.cef", "link.to.cell.in.output.is.clicked", "execution.finished" ]
      }
    }
  }, {
    "id" : "jupyter.remote.debugger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:used}" ]
    }
  }, {
    "id" : "jupyter.vars",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:jupyter.vars.click}" ]
    }
  }, {
    "id" : "jvm.console.log.filter",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:handle}" ],
      "event_data" : {
        "number_items" : [ "{regexp#integer}" ],
        "type" : [ "{enum:class|log_call}" ]
      }
    }
  }, {
    "id" : "jvm.logger.generation",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:action.invoked}" ],
      "event_data" : {
        "action_status" : [ "{enum:action_started|action_finished}" ]
      }
    }
  }, {
    "id" : "keymap.changes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:keymap.change}" ],
      "event_data" : {
        "action_id" : [ "{util#action}", "{enum#action}" ],
        "imported" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "keymaps.name",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:ide.keymap}" ],
      "event_data" : {
        "based_on" : [ "{enum#keymaps}" ],
        "keymap_name" : [ "{enum#keymaps}" ]
      }
    }
  }, {
    "id" : "kotlin.code.vision",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:code.author.clicked|usages.clicked|inheritors.clicked|setting.clicked}" ],
      "event_data" : {
        "location" : [ "{enum:class|interface|function|property}" ]
      }
    }
  }, {
    "id" : "kotlin.compilation.error",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:error.happened}" ],
      "event_data" : {
        "error_id" : [ "{util#kotlin.compilation.error.id}" ]
      }
    }
  }, {
    "id" : "kotlin.debugger.evaluator",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:evaluation.result|fallback.to.old.evaluator|analysis.compilation.result}" ],
      "event_data" : {
        "analysis_time_ms" : [ "{regexp#integer}" ],
        "compilation_time_ms" : [ "{regexp#integer}" ],
        "evaluation_result" : [ "{enum:SUCCESS|FAILURE}" ],
        "evaluator" : [ "{enum:OLD|IR|K2}" ],
        "result" : [ "{enum:SUCCESS|FAILURE}" ],
        "total_interruptions" : [ "{regexp#integer}" ],
        "whole_time_field" : [ "{regexp#integer}" ],
        "wrap_time_ms" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "kotlin.gradle.performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "analysis_lines_per_second" : [ "{regexp#integer}" ],
        "android_gradle_plugin_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?|beta\\d?)?}" ],
        "artifacts_download_speed" : [ "{regexp#integer}" ],
        "build_failed" : [ "{enum#boolean}" ],
        "build_finish_time" : [ "{regexp#integer}" ],
        "build_prepare_kotlin_build_script_model" : [ "{enum#boolean}" ],
        "build_scan_build_report" : [ "{enum#boolean}" ],
        "build_src_count" : [ "{regexp#integer}" ],
        "build_src_exists" : [ "{enum#boolean}" ],
        "cocoapods_plugin_enabled" : [ "{enum#boolean}" ],
        "code_generation_lines_per_second" : [ "{regexp#integer}" ],
        "compilation_duration" : [ "{regexp#integer}" ],
        "compilation_lines_per_second" : [ "{regexp#integer}" ],
        "compilation_started" : [ "{enum#boolean}" ],
        "compilations_count" : [ "{regexp#integer}" ],
        "compiled_lines_of_code" : [ "{regexp#integer}" ],
        "configuration_api_count" : [ "{regexp#integer}" ],
        "configuration_compile_count" : [ "{regexp#integer}" ],
        "configuration_compile_only_count" : [ "{regexp#integer}" ],
        "configuration_implementation_count" : [ "{regexp#integer}" ],
        "configuration_runtime_count" : [ "{regexp#integer}" ],
        "configuration_runtime_only_count" : [ "{regexp#integer}" ],
        "cpu_number_of_cores" : [ "{regexp#integer}" ],
        "debugger_enabled" : [ "{enum#boolean}" ],
        "enabled_compiler_plugin_all_open" : [ "{enum#boolean}" ],
        "enabled_compiler_plugin_atomicfu" : [ "{enum#boolean}" ],
        "enabled_compiler_plugin_jpa_support" : [ "{enum#boolean}" ],
        "enabled_compiler_plugin_lombok" : [ "{enum#boolean}" ],
        "enabled_compiler_plugin_no_arg" : [ "{enum#boolean}" ],
        "enabled_compiler_plugin_parselize" : [ "{enum#boolean}" ],
        "enabled_compiler_plugin_sam_with_receiver" : [ "{enum#boolean}" ],
        "enabled_dagger" : [ "{enum#boolean}" ],
        "enabled_databinding" : [ "{enum#boolean}" ],
        "enabled_dokka" : [ "{enum#boolean}" ],
        "enabled_dokka_gfm" : [ "{enum#boolean}" ],
        "enabled_dokka_gfm_collector" : [ "{enum#boolean}" ],
        "enabled_dokka_gfm_multi_module" : [ "{enum#boolean}" ],
        "enabled_dokka_html" : [ "{enum#boolean}" ],
        "enabled_dokka_html_collector" : [ "{enum#boolean}" ],
        "enabled_dokka_html_multi_module" : [ "{enum#boolean}" ],
        "enabled_dokka_javadoc" : [ "{enum#boolean}" ],
        "enabled_dokka_javadoc_collector" : [ "{enum#boolean}" ],
        "enabled_dokka_jekyll" : [ "{enum#boolean}" ],
        "enabled_dokka_jekyll_collector" : [ "{enum#boolean}" ],
        "enabled_dokka_jekyll_multi_module" : [ "{enum#boolean}" ],
        "enabled_hmpp" : [ "{enum#boolean}" ],
        "enabled_kapt" : [ "{enum#boolean}" ],
        "enabled_kover" : [ "{enum#boolean}" ],
        "executed_from_idea" : [ "{enum#boolean}" ],
        "file_build_report" : [ "{enum#boolean}" ],
        "gradle_build_cache_used" : [ "{enum#boolean}" ],
        "gradle_build_duration" : [ "{regexp#integer}" ],
        "gradle_build_number_in_current_daemon" : [ "{regexp#integer}" ],
        "gradle_daemon_heap_size" : [ "{regexp#integer}" ],
        "gradle_execution_duration" : [ "{regexp#integer}" ],
        "gradle_number_of_incremental_tasks" : [ "{regexp#integer}" ],
        "gradle_number_of_tasks" : [ "{regexp#integer}" ],
        "gradle_number_of_unconfigured_tasks" : [ "{regexp#integer}" ],
        "gradle_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?|beta\\d?)?}" ],
        "gradle_worker_api_used" : [ "{enum#boolean}" ],
        "http_build_report" : [ "{enum#boolean}" ],
        "ides_installed" : [ "{regexp#all_ides}", "{regexp:^((UNEXPECTED-VALUE|AS|OC|CL|IU|IC|WC);?)+$}" ],
        "incremental_compilations_count" : [ "{regexp#integer}" ],
        "js_compiler_mode" : [ "{regexp#js_compiler_mode}", "{regexp:^((UNEXPECTED-VALUE|ir|legacy|both|UNKNOWN);?)+$}" ],
        "js_generate_executable_default" : [ "{regexp#boolean_set}", "{regexp:^((UNEXPECTED-VALUE|true|false);?)+$}" ],
        "js_generate_externals" : [ "{enum#boolean}" ],
        "js_ir_incremental" : [ "{enum#boolean}" ],
        "js_klib_incremental" : [ "{enum#boolean}" ],
        "js_output_granularity" : [ "{enum:whole_program|per_module|per_file}", "{regexp:(whole_program|per_module|per_file)}" ],
        "js_property_lazy_initialization" : [ "{regexp#boolean_set}", "{regexp:^((UNEXPECTED-VALUE|true|false);?)+$}" ],
        "js_source_map" : [ "{enum#boolean}" ],
        "js_target_mode" : [ "{regexp#js_target_mode}", "{regexp:^((UNEXPECTED-VALUE|both|browser|nodejs|none);?)+$}" ],
        "json_build_report" : [ "{enum#boolean}" ],
        "jvm_compiler_ir_mode" : [ "{enum#boolean}" ],
        "jvm_defaults" : [ "{regexp#jvm_defaults}", "{regexp:^((UNEXPECTED-VALUE|disable|enable|compatibility|all|all-compatibility);?)+$}" ],
        "kotlin_api_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?|beta\\d?)?}" ],
        "kotlin_compilation_failed" : [ "{enum#boolean}" ],
        "kotlin_compiler_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?|beta\\d?)?}" ],
        "kotlin_coroutines_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?|beta\\d?)?}" ],
        "kotlin_js_plugin_enabled" : [ "{enum#boolean}" ],
        "kotlin_kts_used" : [ "{enum#boolean}" ],
        "kotlin_language_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?|beta\\d?)?}" ],
        "kotlin_official_codestyle" : [ "{enum#boolean}" ],
        "kotlin_progressive_mode" : [ "{enum#boolean}" ],
        "kotlin_reflect_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?|beta\\d?)?}" ],
        "kotlin_serialization_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?|beta\\d?)?}" ],
        "kotlin_stdlib_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?|beta\\d?)?}" ],
        "library_gwt_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?|beta\\d?)?}" ],
        "library_hibernate_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?|beta\\d?)?}" ],
        "library_spring_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?|beta\\d?)?}" ],
        "library_vaadin_version" : [ "{regexp#version}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?)?}", "{regexp:(\\d+).(\\d+).(\\d+)-?(dev|snapshot|m\\d?|rc\\d?|beta\\d?)?}" ],
        "maven_publish_executed" : [ "{enum#boolean}" ],
        "mpp_platforms" : [ "{regexp#mpp_platforms}", "{regexp:^((UNEXPECTED-VALUE|common|metadata|jvm|js|arm32|arm64|mips32|mipsel32|x64|android|androidJvm|androidApp|androidNativeArm|androidNativeArm32|android_arm32|androidNativeArm64|android_arm64|androidNative|androidNativeX86|androidNativeX64|iosArm|iosArm32|ios_arm32|iosArm64|ios_arm64|ios_simulator_arm64|ios|ios_x64|iosSim|iosX64|watchos|watchosArm32|watchosArm64|watchosX86|tvos|tvosArm64|tvosX64|linux|linuxArm32Hfp|linux_arm32_hfp|linuxMips32|linux_mips32|linuxMipsel32|linux_mipsel32|linuxX64|linux_arm64|linux_x64|macos|osx|macosX64|macos_x64|macos_arm64|mingw|mingwX64|mingw_x64|mingwX86|mingw_X86|mingw_x86|wasm32|wasm);?)+$}", "{regexp:^((UNEXPECTED-VALUE|common|native|jvm|js|android_x64|android_x86|androidJvm|android_arm32|android_arm64|ios_arm32|ios_arm64|ios_simulator_arm64|ios_x64|watchos_arm32|watchos_arm64|watchos_x86|watchos_x64|watchos_simulator_arm64|watchos_device_arm64|tvos_arm64|tvos_x64|tvos_simulator_arm64|linux_arm32_hfp|linux_mips32|linux_mipsel32|linux_arm64|linux_x64|macos_x64|macos_arm64|mingw_x64|mingw_x86|wasm32|wasm);?)+$}" ],
        "number_of_subprojects" : [ "{regexp#integer}" ],
        "os_type" : [ "{regexp:(Windows|Windows |Mac|Linux|FreeBSD|Solaris|Other|Mac OS X)\\d*}", "{regexp:(Windows|Windows |Windows Server |Mac|Linux|FreeBSD|Solaris|Other|Mac OS X)\\d*}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#plugin_version}", "{util#plugin_version}" ],
        "project_path" : [ "{regexp#hash}" ],
        "single_file_build_report" : [ "{enum#boolean}" ],
        "statistics_collect_metrics_overhead" : [ "{regexp#integer}" ],
        "statistics_visit_all_projects_overhead" : [ "{regexp#integer}" ],
        "tests_executed" : [ "{enum#boolean}" ],
        "time_between_builds" : [ "{regexp#integer}" ],
        "use_classpath_snapshot" : [ "{regexp:^((UNEXPECTED-VALUE|true|false|default-true);?)+$}" ],
        "use_fir" : [ "{regexp#boolean_set}", "{regexp:^((UNEXPECTED-VALUE|true|false);?)+$}" ],
        "use_old_backend" : [ "{regexp#boolean_set}", "{regexp:^((UNEXPECTED-VALUE|true|false);?)+$}" ]
      },
      "enums" : {
        "__event_id" : [ "Environment", "Kapt", "CompilerPlugins", "MPP", "JS", "Libraries", "GradleConfiguration", "ComponentVersions", "KotlinFeatures", "GradlePerformance", "UseScenarios", "All", "BuildReports" ]
      },
      "regexps" : {
        "all_ides" : "^((AS|OC|CL|IU|IC|WC)_?)+$",
        "boolean_set" : "^((true|false)_?)+$",
        "js_compiler_mode" : "^((ir|legacy|both|UNKNOWN)_?)+$",
        "js_target_mode" : "^((both|browser|nodejs|none)_?)+$",
        "jvm_defaults" : "^((disable|enable|compatibility|all|all-compatibility)_?)+$",
        "mpp_platforms" : "^((common|metadata|jvm|js|arm32|arm64|mips32|mipsel32|x64|android|androidApp|androidNativeArm|androidNativeArm32|android_arm32|androidNativeArm64|android_arm64|androidNative|androidNativeX86|androidNativeX64|iosArm|iosArm32|ios_arm32|iosArm64|ios_arm64|ios|ios_x64|iosSim|iosX64|watchos|watchosArm32|watchosArm64|watchosX86|tvos|tvosArm64|tvosX64|linux|linuxArm32Hfp|linux_arm32_hfp|linuxMips32|linux_mips32|linuxMipsel32|linux_mipsel32|linuxX64|linux_x64|macos|osx|macosX64|macos_x64|mingw|mingwX64|mingw_x64|mingwX86|mingw_X86|wasm32|wasm)_?)+$",
        "plugin_version" : "(\\d+-)?\\d(\\.\\d)?\\.\\d{1,3}(-(dev|eap|release|M\\d?|RC\\d?))+-(\\d+-)?(AppCode|CLion|IJ|Studio|AS)[0-9\\-\\.]+"
      }
    },
    "anonymized_fields" : [ {
      "event" : "All",
      "fields" : [ "project_path" ]
    }, {
      "event" : "Environment",
      "fields" : [ "project_path" ]
    } ]
  }, {
    "id" : "kotlin.ide.debugger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Evaluation}" ],
      "event_data" : {
        "contextLanguage" : [ "{enum:Java|Kotlin|Other}" ],
        "evaluationType" : [ "{enum#__evaluationType}" ],
        "evaluator" : [ "{enum:Bytecode|Eval4j}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "status" : [ "{enum#__status}" ]
      },
      "enums" : {
        "__evaluationType" : [ "WATCH", "WINDOW", "POPUP", "FROM_JAVA", "UNKNOWN" ],
        "__status" : [ "Success", "DebuggerNotAttached", "DumbMode", "NoFrameProxy", "ThreadNotAvailable", "ThreadNotSuspended", "ProcessCancelledException", "InterpretingException", "EvaluateException", "SpecialException", "GenericException", "CannotFindVariable", "CoroutineContextUnavailable", "ParameterNotCaptured", "InsideDefaultMethod", "BackingFieldNotFound", "SuspendCall", "CrossInlineLambda", "Eval4JAbnormalTermination", "Eval4JUnknownException", "ExceptionFromEvaluatedCode", "ErrorElementOccurred", "FrontendException", "BackendException", "ErrorsInCode" ]
      }
    }
  }, {
    "id" : "kotlin.ide.editor",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Completion|AddValToDataClassParameters}" ],
      "event_data" : {
        "choice_at_position" : [ "{regexp#integer}" ],
        "completion_event" : [ "{enum:chosen|not_chosen}" ],
        "completion_type" : [ "{enum:BASIC|SMART}" ],
        "file_type" : [ "{enum:KT|GRADLEKTS|KTS}" ],
        "finish_reason" : [ "{enum:DONE|CANCELLED|HIDDEN|INTERRUPTED}" ],
        "invocation_count" : [ "{regexp#integer}" ],
        "is_before_typing" : [ "{enum#boolean}" ],
        "is_val_added" : [ "{enum#boolean}" ],
        "lagging" : [ "{regexp#integer}" ],
        "on_symbol" : [ "{enum:comma|bracket|unknown}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "window_appearance_time" : [ "{regexp#integer}" ],
        "window_population_time" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "kotlin.ide.formatter",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:settings}" ],
      "event_data" : {
        "defaults" : [ "{enum:KOTLIN_OFFICIAL|KOTLIN_OLD_DEFAULTS|ide_defaults}" ],
        "kind" : [ "{enum#__kind}", "{enum:PROJECT_OFFICIAL_KOTLIN_WITH_CUSTOM|IDEA_OBSOLETE_KOTLIN_WITH_CUSTOM|PROJECT_OFFICIAL_KOTLIN}", "{enum:PROJECT_WITH_BROKEN_OFFICIAL_KOTLIN|IDEA_WITH_BROKEN_OBSOLETE_KOTLIN|PROJECT_WITH_BROKEN_OBSOLETE_KOTLIN|IDEA_WITH_BROKEN_OFFICIAL_KOTLIN}" ],
        "plugin" : [ "{util#plugin}" ],
        "pluginVersion" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__kind" : [ "IDEA_DEFAULT", "IDEA_CUSTOM", "IDEA_KOTLIN_WITH_CUSTOM", "IDEA_KOTLIN", "PROJECT_DEFAULT", "PROJECT_CUSTOM", "PROJECT_KOTLIN_WITH_CUSTOM", "PROJECT_KOTLIN", "IDEA_OFFICIAL_DEFAULT", "IDEA_OBSOLETE_KOTLIN", "IDEA_OFFICIAL_KOTLIN_WITH_CUSTOM", "PROJECT_OFFICIAL_DEFAULT", "PROJECT_OBSOLETE_KOTLIN", "PROJECT_OBSOLETE_KOTLIN_WITH_CUSTOM", "IDEA_OFFICIAL_KOTLIN" ]
      }
    }
  }, {
    "id" : "kotlin.ide.gradle",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Import}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}", "{regexp#kotlin_version}" ],
        "target" : [ "{enum#__target}", "{enum:MPP.wasm.wasmWasi|MPP.wasm.wasmJs}" ]
      },
      "enums" : {
        "__target" : [ "kotlin-android", "kotlin-platform-common", "kotlin-platform-js", "kotlin-platform-jvm", "MPP.androidJvm", "MPP.androidJvm.android", "MPP.common", "MPP.common.metadata", "MPP.js", "MPP.js.js", "MPP.jvm", "MPP.jvm.jvm", "MPP.jvm.jvmWithJava", "MPP.native", "MPP.native.androidNativeArm32", "MPP.native.androidNativeArm64", "MPP.native.iosArm32", "MPP.native.iosArm64", "MPP.native.iosX64", "MPP.native.linuxArm32Hfp", "MPP.native.linuxArm64", "MPP.native.linuxMips32", "MPP.native.linuxMipsel32", "MPP.native.linuxX64", "MPP.native.macosX64", "MPP.native.mingwX64", "MPP.native.mingwX86", "MPP.native.wasm32", "MPP.native.zephyrStm32f4Disco", "unknown" ]
      }
    }
  }, {
    "id" : "kotlin.ide.inspections",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:apply.quick_fix|update.inspection}" ],
      "event_data" : {
        "file_path" : [ "{regexp#hash}" ],
        "has_deprecated_feature" : [ "{enum#boolean}" ],
        "has_new_feature" : [ "{enum#boolean}" ],
        "inspection_type" : [ "{enum:range_until|data_object|enum_entries}" ],
        "kotlin_language_version" : [ "{regexp#version_lang_api}" ]
      },
      "regexps" : {
        "version_lang_api" : "\\d\\.\\d"
      }
    },
    "anonymized_fields" : [ {
      "event" : "apply.quick_fix",
      "fields" : [ "file_path" ]
    }, {
      "event" : "update.inspection",
      "fields" : [ "file_path" ]
    } ]
  }, {
    "id" : "kotlin.ide.j2k",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Files|PSI_expression|Text_expression|Conversion}" ],
      "event_data" : {
        "Files_count" : [ "{regexp#integer}" ],
        "Is_new_J2K" : [ "{enum#boolean}" ],
        "Lines_count" : [ "{regexp#integer}" ],
        "Time" : [ "{regexp#integer}" ],
        "conversion_time" : [ "{regexp#integer}" ],
        "files_count" : [ "{regexp#integer}" ],
        "is_new_j2k" : [ "{enum#boolean}" ],
        "lines_count" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "source_type" : [ "{enum:Files|PSI_expression|Text_expression}" ]
      }
    }
  }, {
    "id" : "kotlin.ide.migrationTool",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Notification|Run}" ],
      "event_data" : {
        "old_api_version" : [ "{regexp#version_lang_api}" ],
        "old_language_version" : [ "{regexp#version_lang_api}" ],
        "old_stdlib_version" : [ "{regexp#version_stdlib}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ]
      },
      "regexps" : {
        "version_lang_api" : "\\d\\.\\d",
        "version_stdlib" : "\\d\\.\\d\\.\\d{1,3}"
      }
    }
  }, {
    "id" : "kotlin.ide.new.file",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Created}" ],
      "event_data" : {
        "file_template" : [ "{enum#__file_template}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ]
      },
      "enums" : {
        "__file_template" : [ "Kotlin_Class", "Kotlin_File", "Kotlin_Interface", "Kotlin_Data_Class", "Kotlin_Enum", "Kotlin_Sealed_Class", "Kotlin_Annotation", "Kotlin_Object", "Kotlin_Scratch", "Kotlin_Script", "Kotlin_Worksheet" ]
      }
    }
  }, {
    "id" : "kotlin.ide.new.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "build_system" : [ "{enum:gradleKotlin|gradleGroovy|jps|maven}" ],
        "group" : [ "{enum:Java|Kotlin|Gradle}" ],
        "module_template" : [ "{enum:composeAndroid|composeDesktopTemplate|composeMppModule|consoleJvmApp|ktorServer|mobileMppModule|nativeConsoleApp|reactJsClient|simpleJsClient|simpleNodeJs|none}", "{enum:simpleWasmClient}" ],
        "module_template_changed" : [ "{regexp#integer}" ],
        "module_type" : [ "{enum:androidNativeArm32Target|androidNativeArm64Target|iosArm32Target|iosArm64Target|iosX64Target|iosTarget|linuxArm32HfpTarget|linuxMips32Target|linuxMipsel32Target|linuxX64Target|macosX64Target|mingwX64Target|mingwX86Target|nativeForCurrentSystem|jsBrowser|jsNode|commonTarget|jvmTarget|androidTarget|multiplatform|JVM_Module|android|IOS_Module|jsBrowserSinglePlatform|jsNodeSinglePlatform}", "{enum:wasmSimple}" ],
        "modules_created" : [ "{regexp#integer}" ],
        "modules_removed" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}", "{regexp#kotlin_version}" ],
        "project_modules_list" : [ "{enum#__project_modules_list}", "{enum:wasmSimple}" ],
        "project_template" : [ "{enum#__project_template}", "{enum:reactApplication}", "{enum:multiplatformMobileApplicationUsingAppleGradlePlugin}", "{enum:multiplatformMobileApplicationUsingHybridProject}", "{enum:simpleWasmApplication}" ],
        "session_id" : [ "{regexp#integer}" ],
        "setting_id" : [ "{enum:buildSystem.type|testFramework|targetJvmVersion|androidPlugin|serverEngine|js.project.kind|js.compiler|projectTemplates.template|module.template|jvm.javaSupport|js.cssSupport|js.useStyledComponents|js.useReactRouterDom|js.useReactRedux}" ],
        "setting_value" : [ "{enum#__setting_value}", "{enum:multiplatformMobileApplicationUsingAppleGradlePlugin}", "{enum:multiplatformMobileApplicationUsingHybridProject}", "{enum:simpleWasmApplication|simpleWasmClient}" ]
      },
      "enums" : {
        "__event_id" : [ "project_created", "wizard_opened_by_hyperlink", "module_template_created", "module_created", "prev_clicked", "next_clicked", "jdk_changed", "setting_value_changed", "module_removed" ],
        "__project_modules_list" : [ "androidNativeArm64Target", "linuxMipsel32Target", "android", "linuxX64Target", "mingwX64Target", "jvmTarget", "JVM_Module", "iosArm64Target", "linuxMips32Target", "mingwX86Target", "jsNodeSinglePlatform", "commonTarget", "multiplatform", "jsBrowserSinglePlatform", "iosArm32Target", "iosX64Target", "jsBrowser", "macosX64Target", "IOS_Module", "jsNode", "androidNativeArm32Target", "iosTarget", "linuxArm32HfpTarget", "nativeForCurrentSystem", "androidTarget" ],
        "__project_template" : [ "JVM_|_IDEA", "JS_|_IDEA", "Kotlin/JVM", "Kotlin/JS", "Kotlin/JS_for_browser", "Kotlin/JS_for_Node.js", "Kotlin/Multiplatform_as_framework", "Kotlin/Multiplatform", "backendApplication", "consoleApplication", "multiplatformMobileApplication", "multiplatformMobileLibrary", "multiplatformApplication", "multiplatformLibrary", "nativeApplication", "frontendApplication", "fullStackWebApplication", "nodejsApplication", "none", "_IDEA", "JS_", "JVM_", "composeDesktopApplication", "composeMultiplatformApplication" ],
        "__setting_value" : [ "GradleKotlinDsl", "GradleGroovyDsl", "Jps", "Maven", "NONE", "JUNIT4", "JUNIT5", "TEST_NG", "JS", "COMMON", "JVM_1_6", "JVM_1_8", "JVM_9", "JVM_10", "JVM_11", "JVM_12", "JVM_13", "APPLICATION", "LIBRARY", "Netty", "Tomcat", "Jetty", "IR", "LEGACY", "BOTH", "JVM_|_IDEA", "JS_|_IDEA", "Kotlin/JVM", "Kotlin/JS", "Kotlin/JS_for_browser", "Kotlin/JS_for_Node.js", "Kotlin/Multiplatform_as_framework", "Kotlin/Multiplatform", "backendApplication", "consoleApplication", "multiplatformMobileApplication", "multiplatformMobileLibrary", "multiplatformApplication", "multiplatformLibrary", "nativeApplication", "frontendApplication", "fullStackWebApplication", "nodejsApplication", "reactApplication", "composeDesktopApplication", "composeMultiplatformApplication", "none", "composeAndroid", "composeDesktopTemplate", "composeMppModule", "consoleJvmApp", "ktorServer", "mobileMppModule", "nativeConsoleApp", "reactJsClient", "simpleJsClient", "simpleNodeJs", "gradleKotlin", "gradleGroovy", "jps", "maven", "true", "false", "_IDEA", "JS_", "JVM_" ]
      }
    }
  }, {
    "id" : "kotlin.ide.new.wizard",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:project_created|wizard_opened_by_hyperlink}" ],
      "event_data" : {
        "build_system" : [ "{enum:gradleKotlin|gradleGroovy|jps|maven}" ],
        "module_template_changed" : [ "{regexp#integer}" ],
        "modules_created" : [ "{regexp#integer}" ],
        "modules_removed" : [ "{regexp#integer}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "project_template" : [ "{enum#__project_template}" ]
      },
      "enums" : {
        "__project_template" : [ "backendApplication", "consoleApplication", "multiplatformMobileApplication", "multiplatformMobileLibrary", "multiplatformApplication", "multiplatformLibrary", "nativeApplication", "frontendApplication", "fullStackWebApplication", "none" ]
      }
    }
  }, {
    "id" : "kotlin.ide.refactoring.inline",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Launched}" ],
      "event_data" : {
        "element_type" : [ "{enum#__element_type}" ],
        "is_cross_lang" : [ "{enum#boolean}" ],
        "language_from" : [ "{util#lang}" ],
        "language_to" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ]
      },
      "enums" : {
        "__element_type" : [ "LAMBDA_EXPRESSION", "ANONYMOUS_FUNCTION", "LOCAL_VARIABLE", "PROPERTY", "TYPE_ALIAS", "UNKNOWN", "CONSTRUCTOR", "FUNCTION" ]
      }
    }
  }, {
    "id" : "kotlin.ide.refactoring.move",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Finished}" ],
      "event_data" : {
        "are_settings_changed" : [ "{enum#boolean}" ],
        "destination" : [ "{enum:PACKAGE|FILE|DECLARATION}" ],
        "entity" : [ "{enum#__entity}" ],
        "lagging" : [ "{regexp#integer}" ],
        "number_of_entities" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "succeeded" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__entity" : [ "FUNCTIONS", "CLASSES", "MIXED", "MPPCLASSES", "MPPFUNCTIONS", "MPPMIXED", "PACKAGE", "FILES" ]
      }
    }
  }, {
    "id" : "kotlin.ide.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:newInference|scriptingAutoReloadEnabled|addUnambiguousImportsOnTheFly|optimizeImportsOnTheFly}" ],
      "event_data" : {
        "definition_name" : [ "{enum#__definition_name}" ],
        "enabled" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "pluginVersion" : [ "{regexp#kotlin_version}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ]
      },
      "enums" : {
        "__definition_name" : [ "KotlinInitScript", "KotlinSettingsScript", "KotlinBuildScript", "MainKtsScript", "Kotlin_Script", "Script_definition_for_extension_scripts_and_IDE_console", "Space_Automation" ]
      }
    }
  }, {
    "id" : "kotlin.k.two.metrics",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:enabled}" ],
      "event_data" : {
        "is_k2_enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "kotlin.notebook",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "cell_execution_status" : [ "{enum:OK|COMPILATION_ERROR|RUNTIME_ERROR|ABORTED}" ],
        "cells_code_count" : [ "{regexp#integer}" ],
        "cells_count" : [ "{regexp#integer}" ],
        "cells_markdown_count" : [ "{regexp#integer}" ],
        "classpath_entries_count" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "executed_cells_count" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "library_name" : [ "{util#used_library_name}" ],
        "notebook_mode" : [ "{enum:standard|light}" ],
        "output_types" : [ "{enum:ERROR|STREAM_ERROR|STREAM_TEXT|OTHER|PLAIN_TEXT|HTML|MARKDOWN|JSON|RASTER_IMAGE|VECTOR_IMAGE|SWING_LETS_PLOT|SWING_DATAFRAME}" ],
        "project_libraries_v1_included" : [ "{enum#boolean}" ],
        "project_libraries_v2_count" : [ "{regexp#integer}" ],
        "project_sources_v1_included" : [ "{enum#boolean}" ],
        "project_sources_v2_count" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "output.updated", "cell.result.received", "library.used", "notebook.opened", "kernel.restarted", "notebook.cells.all.run" ]
      }
    }
  }, {
    "id" : "kotlin.onboarding.j2k",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "build_system" : [ "{enum:GRADLE|MAVEN|MULTIPLE|UNKNOWN|JPS}" ],
        "build_system_version" : [ "{regexp#version}" ],
        "can_auto_configure" : [ "{enum#boolean}" ],
        "is_auto_configuration" : [ "{enum#boolean}" ],
        "onboarding_session_id" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "project_sync.completed", "configure_kt_notification.clicked", "first_kt_file.created", "configured_kt_notification.shown", "project_sync.started", "configure_kt_window.shown", "project_sync.failed", "configure_kt.started", "first_kt_file.dialog_opened", "configure_kt_panel.shown", "configure_kt_notification.shown", "configure_kt.undone", "auto_config.checked" ]
      }
    }
  }, {
    "id" : "kotlin.project.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Build}" ],
      "event_data" : {
        "eventFlags" : [ "{regexp#integer}" ],
        "isMPP" : [ "{enum#boolean}" ],
        "languageLevel" : [ "{regexp#version}" ],
        "languageVersion" : [ "{regexp#float}" ],
        "platform" : [ "{enum:jvm|js|native|common}", "{enum:jvm|jvm.android|js|common|native.unknown|unknown|native.android_x64|native.android_x86|native.android_arm32|native.android_arm64|native.ios_arm32|native.ios_arm64|native.ios_x64|native.watchos_arm32|native.watchos_arm64|native.watchos_x86|native.watchos_x64|native.tvos_arm64|native.tvos_x64|native.linux_x64|native.mingw_x86|native.mingw_x64|native.macos_x64|native.linux_arm64|native.linux_arm32_hfp|native.linux_mips32|native.linux_mipsel32|native.wasm32}", "{enum:native.macos_arm64}", "{enum:native.ios_simulator_arm64|native.watchos_simulator_arm64|native.tvos_simulator_arm64}", "{enum:native.watchos_device_arm64}", "{enum:wasm}" ],
        "plugin" : [ "{util#plugin}" ],
        "pluginVersion" : [ "{regexp#kotlin_version}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#kotlin_version}", "{util#plugin_version}" ],
        "system" : [ "{enum:JPS|Maven|Gradle|unknown}" ]
      }
    }
  }, {
    "id" : "ktor.generator.ide",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "buildSystem" : [ "{enum:GRADLE|MAVEN|GRADLE_KTS}" ],
        "configurations_built_ms" : [ "{regexp#integer}" ],
        "count" : [ "{regexp#integer}" ],
        "delay_between_searches_ms" : [ "{regexp#integer}" ],
        "engine" : [ "{enum:NETTY|JETTY|CIO|TOMCAT}" ],
        "featureId" : [ "{enum#features_ids}" ],
        "featureVersion" : [ "{regexp#version}", "{enum:unknown}" ],
        "features" : [ "{enum#features_ids}" ],
        "from_version" : [ "{regexp#version}" ],
        "full_duration_ms" : [ "{regexp#integer}" ],
        "ktorVersion" : [ "{regexp#version}", "{enum:unknown}" ],
        "migration_retrieval_duration_ms" : [ "{regexp#integer}" ],
        "new_value" : [ "{enum#boolean}" ],
        "new_version" : [ "{regexp#version}" ],
        "search_for_main_methods_ms" : [ "{regexp#integer}" ],
        "search_for_modules_ms" : [ "{regexp#integer}" ],
        "source" : [ "{enum:INTENTION|ACTION}", "{enum:NOTIFICATION|ACTION}" ],
        "target" : [ "{enum:ROUTE|MODULE|EXTENSION_ROUTE}" ]
      },
      "enums" : {
        "__event_id" : [ "featureslist.requested", "project.generated", "feature.documentation.requested", "test.generated", "settings.add.auto.imports", "migration.applied", "run.configurations.generated", "settings.auto.create.run.configurations" ],
        "features_ids" : [ "auth", "auth-basic", "auth-digest", "auth-jwt", "auth-ldap", "auth-oauth", "auto-head-response", "caching-headers", "call-logging", "callid", "compression", "conditional-headers", "content-negotiation", "cors", "csrf", "css-dsl", "data-conversion", "default-headers", "double-receive", "exposed", "forwarded-header-support", "freemarker", "hsts", "html-dsl", "https-redirect", "kotlinx-serialization", "ktor-gson", "ktor-jackson", "ktor-locations", "ktor-network", "ktor-network-tls", "ktor-sessions", "ktor-websockets", "metrics", "metrics-micrometer", "mustache", "openapi", "partial-content", "pebble", "postgres", "resources", "routing", "shutdown-url", "sse", "static-content", "status-pages", "swagger", "thymeleaf", "velocity", "webjars" ]
      }
    }
  }, {
    "id" : "kubernetes.application.metrics",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:config.files.used}" ],
      "event_data" : {
        "environment" : [ "{regexp#integer}" ],
        "settings" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "kubernetes.project.metrics",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:apiModels.size.used|config.files.used|available.contexts.used|namespaces.count.used}" ],
      "event_data" : {
        "attached" : [ "{regexp#integer}" ],
        "avr" : [ "{regexp#float}" ],
        "count" : [ "{regexp#integer}" ],
        "max" : [ "{regexp#integer}" ],
        "settings" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "kubernetes.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:k8sVersion|namespaces.count.used}" ],
      "event_data" : {
        "global" : [ "{regexp#integer}" ],
        "in_project" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "kubernetes.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action_id" : [ "{enum:telepresence-create-interception|telepresence-create-interception-from-list|telepresence-connect|telepresence-quit|telepresence-leave|telepresence-install-traffic-manager|telepresence-install}", "{enum:apply|delete|reload|compare-with-cluster|change-context|view-yaml|describe-resources|remove-resources|pod-following|pod-download|pod-open-console|pod-run-shell-console|pod-forward-ports|deployment-follow|deployment-download|create-secret|stop-forwarding|namespaces|all-namespaces|open-kube-config|add-context|attach-context|refresh-configuration|refresh-model|toggle-watcher|install-kubectl|how-to-install|find-usages}", "{enum:paste-context-content}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "provider_class" : [ "{util#class_name}" ]
      },
      "enums" : {
        "__event_id" : [ "navigation.gutter.label.container", "inspection.remove.duplicate.envvar", "completion.kind", "completion.label.key", "completion.schema", "telepresence.action.triggered", "action.triggered", "service.view.selected" ]
      }
    }
  }, {
    "id" : "leftover.dirs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:cleanup.complete|scan.scheduled|scan.started}" ],
      "event_data" : {
        "delay_days" : [ "{regexp#integer}" ],
        "groups" : [ "{regexp#integer}" ],
        "total_mb" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "libraryUsage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:library_used}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "file_type" : [ "{util#file_type}" ],
        "library_name" : [ "{enum#library_names}", "{util#used_library_name}" ],
        "version" : [ "{regexp#version}", "{enum:unknown}" ]
      },
      "enums" : {
        "library_names" : [ "activemq", "activiti", "aeron", "akka-actor-typed", "akka-http", "akka-java", "akka-stream", "algebird", "allure1", "allure2", "androidx-compose", "apache-bval", "apache-camel", "apache-cayenne", "apache-collections", "apache-deltaspike", "apache-deltaspike-data", "apache-dubbo", "apache-flink", "apache-hc", "apache-http", "apache-ignite", "apache-mina", "apache-pdfbox", "apache-poi", "apache-pulsar", "apache-rocketmq", "apache-shiro", "apache-spark", "apache-thrift", "apache-tiles", "apollo", "appium", "armeria", "arquillian", "arrowkt", "asm", "aspectj", "async-http-client", "atlas", "avro", "aws-s3", "aws-sdk", "aws-sqs", "awspring", "axonframework", "axoniq", "blade", "breeze", "bytebuddy", "caliban", "camunda", "cats", "cats-effect", "chimney", "chisel3", "circe", "citrus", "clikt", "coherence", "consul", "corda", "coroutineworker", "crashkios", "cucumber", "dagger", "datanucleus-jpa", "debezium", "decompose", "deequ", "delta-core", "documents4j", "dokka", "doobie", "doodle", "drools", "dropwizard", "easymock", "ebean", "eclipse-collections", "eclipselink", "eclipselink-jpa", "ehcache", "elastic4s", "elasticmq", "eureka", "exposed", "fastutil", "finagle", "finatra", "firebase-kotlin-sdk", "flexy-pool", "flowable", "fluentlenium", "flyway", "freemarker", "fritz2", "fs2", "fuel", "gatling", "gauge-java", "geb", "google-cloud-pubsub", "google-http-java-client", "gorm", "grails", "graphql-java", "graphql-kotlin", "groovy", "gson", "guice", "gwt", "h2", "hazelcast", "helidon", "hexagonkt", "hibernate", "hibernate-envers", "hibernate-reactive", "hibernate-validator", "hikaricp", "htmlelements", "http4k", "http4s", "hystrix", "infinispan", "io.grpc", "itextpdf", "jackson", "jaegertracing", "jakarta-batch", "jakarta-cdi", "jakarta-ejb", "jakarta-jms", "jakarta-jpa", "jakarta-jsf", "jakarta-nosql", "jakarta-rs", "jakarta-validation", "jakarta-websocket", "jakarta-ws", "java-swing", "java-websocket", "javafx", "javalin", "javax-batch", "javax-cdi", "javax-ejb", "javax-jms", "javax-jpa", "javax-jsf", "javax-rs", "javax-validation", "javax-websocket", "jbehave", "jbpm", "jdbi", "jdi-light", "jedis", "jetbrains-annotations", "jetbrains-compose", "jhipster", "jmockit", "jodd-db", "jooby", "jooq", "js-externals", "json4s", "jsoniter-scala", "jsonpath", "jsoup", "junit", "junit5", "kafka", "karate", "klaxon", "klock", "kodein", "kodein-db", "kodein-di", "koin", "korge", "kotest", "kotless", "kotlin", "kotlin-material-ui", "kotlin-test", "kotlinx-benchmark", "kotlinx-browser", "kotlinx-cli", "kotlinx-collections-immutable", "kotlinx-coroutines", "kotlinx-datetime", "kotlinx-html", "kotlinx-io", "kotlinx-serialization", "ktlint", "ktor", "ktorm", "kvision", "lagom", "laminar", "liquibase", "log4j", "logback", "lombok", "lucene", "macwire", "magnolia", "mapstruct", "micrometer", "micronaut", "microprofile", "mleap", "mockito", "mockk", "mockserver", "moko-mvvm", "monix", "monocle", "multik", "multiplatform-settings", "munit", "mvikotlin", "mybatis", "napier", "netty", "npm-publish", "okhttp3", "okio", "opencv", "openfeign", "openjpa", "opentelemetry", "opentracing", "optaplanner", "osgi", "play", "play-json", "playwright-java", "protobuf", "pureconfig", "quarkus", "quarkus-qute", "quartz", "querydsl", "quill", "r2dbc", "rabbitmq", "rabbitmq-java-client", "reactor", "reaktive", "refined", "resilience4j", "restassured", "retrofit2", "robotframework", "rsocket-java", "rsocket-kotlin", "rxdownload", "rxjava", "rxjava3", "rxkotlin", "sangria", "scala", "scala-async", "scalacheck", "scalafx", "scalalikejdbc", "scalameta", "scalamock", "scalapb", "scalatest", "scalatra", "scalaz", "scio", "selenide", "selenium", "serenity", "shapeless", "skunk", "slf4j", "slick", "smallrye-mutiny", "spark", "specs2", "spek", "spire", "spock", "spring-amqp", "spring-batch", "spring-boot", "spring-cloud", "spring-cloud-gateway", "spring-cloud-kubernetes", "spring-cloud-openfeign", "spring-cloud-retrofit", "spring-cloud-stream", "spring-core", "spring-data-commons", "spring-data-hadoop", "spring-data-jdbc-ext", "spring-data-jpa", "spring-data-mongo", "spring-data-neo4j", "spring-data-r2dbc", "spring-data-rest", "spring-data-solr", "spring-graphql", "spring-integration", "spring-integration-amqp", "spring-kafka", "spring-osgi", "spring-security", "spring-security-oauth2", "spring-session", "spring-web", "spring-webflow", "spring-webflux", "spring-websocket", "spring-ws", "springfox", "sqldelight", "stately", "streamex", "struts2", "sttp", "swagger-v2", "swagger-v3", "tapestry5", "tapir", "testcontainers", "testng", "thymeleaf", "tornadofx", "twitter-server", "twitter-util", "unfiltered", "unirest", "upickle", "utest", "vaadin-flow", "vavr", "velocity", "vertx", "webtau", "weld", "wiremock", "xmlgraphics", "zio", "zio-test", "zipkin2", "zookeeper", "zuul" ]
      }
    }
  }, {
    "id" : "license.account.data",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:login.data}" ],
      "event_data" : {
        "logged_in" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "lifecycle",
    "builds" : [ {
      "from" : "191.4738"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "closing_duration_ms" : [ "{regexp#integer}" ],
        "command_line" : [ "{enum#boolean}" ],
        "debug_agent" : [ "{enum#boolean}" ],
        "dispose_duration_ms" : [ "{regexp#integer}" ],
        "duration_grouped" : [ "{regexp#integer}", "{regexp#integer}+", "{regexp#integer}s", "{regexp#integer}s+" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "duration_s" : [ "{regexp#integer}" ],
        "eap" : [ "{enum#boolean}" ],
        "error" : [ "{util#class_name}" ],
        "error_frames" : [ "{util#method_name}" ],
        "error_hash" : [ "{regexp#integer}" ],
        "error_size" : [ "{regexp#integer}" ],
        "errors_ignored" : [ "{regexp#integer}" ],
        "headless" : [ "{enum#boolean}" ],
        "internal" : [ "{enum#boolean}" ],
        "mapping_failed" : [ "{enum#boolean}" ],
        "memory_error_kind" : [ "{enum#__memory_error_kind}", "{enum:direct_buffers}" ],
        "mode" : [ "{enum:new|same|attach}" ],
        "oom" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "project_tab" : [ "{enum#boolean}" ],
        "restart" : [ "{enum#boolean}" ],
        "save_duration_ms" : [ "{regexp#integer}" ],
        "test" : [ "{enum#boolean}" ],
        "time_ms" : [ "{regexp#integer}" ],
        "too_many_errors" : [ "{enum#boolean}" ],
        "total_duration_ms" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "ide.error", "ide.freeze", "ide.start", "ide.close", "project.opening.finished", "project.opened", "project.closed", "frame.activated", "frame.deactivated", "project.module.attached", "project.frame.selected", "ide.crash.detected", "protocol.open.command.handled", "ide.deadlock.detected", "project.closed.and.disposed", "early.errors" ],
        "__memory_error_kind" : [ "heap", "min_heap", "perm_gen", "metaspace", "code_cache" ]
      }
    }
  }, {
    "id" : "light.edit",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:autosave.mode|open.file|open.in.project}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "open_place" : [ "{enum#__open_place}" ],
        "project_status" : [ "{enum:Open|Existing|New}" ]
      },
      "enums" : {
        "__open_place" : [ "LightEditOpenAction", "WelcomeScreenOpenAction", "CommandLine", "DragAndDrop", "RecentFiles" ]
      }
    }
  }, {
    "id" : "line.profiler",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:navigation.popup.shown|navigated.via.line.marker}" ],
      "event_data" : {
        "anonymous_id" : [ "{regexp#hash}" ],
        "navigation_choice_count" : [ "{regexp#integer}" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "navigated.via.line.marker",
      "fields" : [ "anonymous_id" ]
    }, {
      "event" : "navigation.popup.shown",
      "fields" : [ "anonymous_id" ]
    } ]
  }, {
    "id" : "live.templates",
    "builds" : [ ],
    "versions" : [ {
      "from" : "25"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started}" ],
      "event_data" : {
        "changedByUser" : [ "{enum#boolean}" ],
        "group" : [ "{util#live_template_group}", "{util#live_template}" ],
        "key" : [ "{util#live_template}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "llm.action.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "accept_diff_immediately" : [ "{enum#boolean}" ],
        "all_summary_score" : [ "{enum#boolean}" ],
        "all_summary_vcs_navigated" : [ "{enum#boolean}" ],
        "code_generation_request_finish_state" : [ "{enum:CODE_GENERATED|NO_CODE_GENERATED|INTERRUPTED|FAILED}", "{enum:PROGRESS}" ],
        "code_generation_state" : [ "{enum:NOT_AVAILABLE|ERROR|CLOSED|ACCEPTED}" ],
        "commit_generate_feature" : [ "{util#class_name}" ],
        "documentation_invoke_state" : [ "{enum:INLAY_BUTTON|INTENTION|INSPECTION}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "file_lang" : [ "{util#class_name}" ],
        "file_text_length" : [ "{regexp#integer}" ],
        "generated_summary_message_length" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "interaction" : [ "{util#class_name}" ],
        "is_customized" : [ "{enum#boolean}" ],
        "lang" : [ "{util#lang}" ],
        "lang_detection_mechanism" : [ "{enum:JET_ENRY}" ],
        "lang_pasted_snippet" : [ "{enum:C|C_SHARP|C_PLUSPLUS|COFFEESCRIPT|CSS|DART|DM|ELIXIR|GO|GROOVY|HTML|JAVA|JAVASCRIPT|KOTLIN|OBJECTIVE_C|PERL|PHP|POWERSHELL|PYTHON|RUBY|RUST|SCALA|SHELL|SWIFT|TYPESCRIPT|UNKNOWN}" ],
        "number_of_commits" : [ "{regexp#integer}" ],
        "number_of_files" : [ "{regexp#integer}" ],
        "original_summary_message_length" : [ "{regexp#integer}" ],
        "pasted_snippet_lang" : [ "{util#class_name}" ],
        "pasted_snippet_length" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "regenerate_count" : [ "{regexp#integer}" ],
        "score" : [ "{enum:YES|NO}" ],
        "show_diff_applied_immediately" : [ "{enum#boolean}" ],
        "specify_count" : [ "{regexp#integer}" ],
        "state" : [ "{enum:SUCCEED|ERROR|CANCEL|NOT_AUTHENTICATED}" ],
        "succeed" : [ "{enum#boolean}" ],
        "target" : [ "{util#class_name}" ],
        "target_lang" : [ "{util#class_name}" ],
        "time_to_first_diff" : [ "{regexp#integer}" ],
        "time_to_show" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "completion.request.started", "edit.request.sent", "completion.request.finished", "edit.request.score", "name.suggestion.score", "name.suggestion.request", "documentation.generation.sent", "edit.request.finished", "documentation.generation.score", "documentation.generation.finished", "edit.request.started", "documentation.generation.started", "commit.generation.sent", "commit.generation.score", "name.suggestion.started", "name.suggestion.finished", "completion.request.sent", "completion.request.score", "commit.generation.started", "commit.generation.finished", "name.suggestion.show", "name.suggestion.response", "language.conversion.finished", "language.conversion.started", "language.conversion.score", "commit.summary.generation.finished", "commit.summary.generation.started", "commit.summary.generation.sent", "commit.summary.generation.score", "commit.summary.generation.all_summary_chunk_generating", "commit.summary.generation.user_summary_generating", "commit.summary.generation.all_summary_generation", "language.conversion.request", "code.generation.finished", "code.generation.started", "code.generation.request.started", "code.generation.request.finished", "refactoring.showdiff.finished", "refactoring.showdiff.score", "refactoring.showdiff.started", "test.generation.finished", "test.generation.score", "test.generation.started", "test.generation.review", "test.generation.request", "language.conversion.paste.finished", "language.conversion.paste.request", "language.conversion.file.finished", "language.conversion.file.started", "language.conversion.paste.started", "language.conversion.paste.score" ]
      }
    }
  }, {
    "id" : "llm.authorization",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "ai_place" : [ "{enum:AI_SETTINGS|AI_TOOLWINDOW}" ],
        "error" : [ "{enum:BadRequest|Unauthorized|Forbidden|NotFound|Conflict|LengthRequired|PreconditionFailed|ContentTooLarge|UnprocessableContent|TooManyRequests|UnavailableForLegalReasons|ClosedRequest|InternalServerError|HTTPStatusException|ContentLengthExceeded|UnresolvedAddressException|HttpConnectTimeoutException|AccessProhibited|GraziePolicyForbiddenException|UnknownError|GrazieAuthorizationException|TokenLimitExceededException|AIAssistantForbiddenException|RequestTimeout}" ],
        "error_class" : [ "{util#class_name}" ],
        "level" : [ "{enum:Allowed|JvmFlag|OSRegistry|Agreement|IdeLicense|IdeLicenseNotInitialized|ProjectFile|UserSetting}", "{enum:RemDev}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "status" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "activate.subscription.clicked", "start.free.trial.clicked", "error.on.log.in", "go.to.activation.clicked", "how.to.disable.ai.clicked", "log.in.to.jb.account.clicked", "manage.subscriptions.clicked", "start.ai.assistant.clicked", "unlimited.ai.clicked" ]
      }
    }
  }, {
    "id" : "llm.budget",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:feature.budget.sent|feature.budget.received}" ],
      "event_data" : {
        "feature" : [ "{util#class_name}" ],
        "number_of_characters" : [ "{regexp#integer}" ],
        "number_of_characters_system" : [ "{regexp#integer}" ],
        "number_of_tokens" : [ "{regexp#integer}" ],
        "number_of_tokens_system" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "llm.chat",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "arguments_length_in_chars" : [ "{regexp#integer}" ],
        "chat_kind" : [ "{util#class_name}" ],
        "chat_session_id" : [ "{regexp#date_short_hash}" ],
        "dialog.id" : [ "{regexp#integer}" ],
        "dialog.number_of_disliked_message" : [ "{regexp#integer}" ],
        "dialog.number_of_liked_message" : [ "{regexp#integer}" ],
        "dialog.number_of_messages" : [ "{regexp#integer}" ],
        "dialog.source_action" : [ "{util#llm_parameters}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "error" : [ "{enum:BadRequest|Unauthorized|Forbidden|NotFound|Conflict|LengthRequired|PreconditionFailed|ContentTooLarge|UnprocessableContent|TooManyRequests|UnavailableForLegalReasons|ClosedRequest|InternalServerError|HTTPStatusException|ContentLengthExceeded|UnresolvedAddressException|HttpConnectTimeoutException|AccessProhibited|GraziePolicyForbiddenException|UnknownError}", "{enum#__error}" ],
        "error_class" : [ "{util#class_name}" ],
        "function_call_error" : [ "{util#class_name}" ],
        "function_call_response_length_in_chars" : [ "{regexp#integer}" ],
        "function_call_trimmed" : [ "{enum#boolean}" ],
        "function_name" : [ "{util#class_name}" ],
        "is_collapsed" : [ "{enum#boolean}" ],
        "is_exceeded_token_limit" : [ "{enum#boolean}" ],
        "level" : [ "{enum:ApplicationJvmFlag|ApplicationRegistry|ProjectFile|ProjectUserSetting|Unknown}", "{enum#__level}", "{enum:IdeLicense}", "{enum:Agreement}", "{enum:IdeLicenseNotInitialized}", "{enum:RemDev}" ],
        "message_id" : [ "{regexp#short_hash}" ],
        "number_of_characters" : [ "{regexp#integer}" ],
        "number_of_disliked_message" : [ "{regexp#integer}" ],
        "number_of_liked_message" : [ "{regexp#integer}" ],
        "number_of_lines" : [ "{regexp#integer}" ],
        "number_of_messages" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "rating" : [ "{enum:None|Like|Dislike}" ],
        "result" : [ "{enum:SUCCEED|WAIT_LIST|FAILED|EXCEPTION}" ],
        "source" : [ "{enum:CHAT_LOGIN_BUTTON|CHAT_RETRY_BUTTON|CHAT_WAIT_LIST|SETTINGS_PAGE|SETTINGS_PAGE_WAIT_LIST|NOTIFICATION|FULL_LINE}", "{enum:STATUS_BAR_LOGIN_BUTTON}" ],
        "source_action" : [ "{enum:RIDER_GENERATE_UNIT_TESTS}", "{enum:PYTHON_EXPLAIN_DATA_FRAME}", "{enum:GENERATE_API_REQUEST_EXAMPLE}", "{enum:BUILD_ERROR_EXPLANATION}", "{enum:NEW_POPUP_CHAT}", "{enum:UNKNOWN|NEW_CHAT|EXPLAIN_CODE_INTENTION|FIND_PROBLEMS_INTENTION|REFACTOR_THIS|UNKNOWN_CHAT_INTENTION|LOAD_STATE|RUNTIME_ERROR_EXPLANATION|EXPLAIN_COMMIT|UNITY_CREATE_NEW_FILE|UNITY_GENERATE_CODE|GENERATE_CODE_INPLACE|GENERATE_UNIT_TESTS|CUSTOM_CHAT|PROMPT_LIBRARY|ERROR_MESSAGE|PYTHON_DJANGO_ADMIN_FOR_MODEL_INTENTION|PYTHON_DJANGO_VIEW_FOR_MODEL_INTENTION|PYTHON_DJANGO_SERIALIZER_FOR_MODEL_INTENTION|PYTHON_DJANGO_CUSTOM_INTENTION|PYTHON_DJANGO_CUSTOM_SMART_CHAT_INTENTION|PYTHON_FILE_SIGNATURES_CUSTOM_INTENTION}" ],
        "start_time" : [ "{regexp#integer}" ],
        "status" : [ "{regexp#integer}" ],
        "user_message_id" : [ "{regexp#short_hash}" ]
      },
      "enums" : {
        "__error" : [ "GrazieAuthorizationException", "RequestTimeout", "AIAssistantForbiddenException", "TokenLimitExceededException", "ClassNotFoundException" ],
        "__event_id" : [ "editUsageMessageFinished", "codeSnippetPresentationChanged", "editUserMessageStarted", "editUserMessageCancelled", "newChatCreated", "messageSent", "codeCopied", "allChatsClicked", "messageReceived", "messageReacted", "messageReceivingCancelled", "assistantChatSummarySent", "all.chats.clicked", "code.snippet.presentation.changed", "edit.usage.message.finished", "message.reacted", "assistant.chat.summary.sent", "edit.user.message.cancelled", "chat.from.history.opened", "code.copied", "edit.user.message.cancelled.with.mouse", "message.received", "edit.user.message.started", "code.inserted", "message.sent", "new.chat.created", "message.receiving.cancelled", "code.snippet.inserted.at.caret", "send.feedback.clicked", "log.in.to.jetbrains.ai", "log.out.from.jetbrains.ai", "ai.response.error", "function.called", "code.snippet.file.created" ],
        "__level" : [ "OSRegistry", "JvmFlag", "JBA", "Allowed", "UserSetting" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "message.received",
      "fields" : [ "message_id", "user_message_id", "chat_session_id" ]
    }, {
      "event" : "message.sent",
      "fields" : [ "message_id", "chat_session_id" ]
    }, {
      "event" : "edit.user.message.cancelled",
      "fields" : [ "message_id", "chat_session_id" ]
    }, {
      "event" : "edit.user.message.started",
      "fields" : [ "message_id", "chat_session_id" ]
    }, {
      "event" : "assistant.chat.summary.sent",
      "fields" : [ "chat_session_id" ]
    }, {
      "event" : "code.snippet.inserted.at.caret",
      "fields" : [ "message_id", "chat_session_id" ]
    }, {
      "event" : "ai.response.error",
      "fields" : [ "chat_session_id" ]
    }, {
      "event" : "code.snippet.presentation.changed",
      "fields" : [ "message_id", "chat_session_id" ]
    }, {
      "event" : "function.called",
      "fields" : [ "chat_session_id" ]
    }, {
      "event" : "message.receiving.cancelled",
      "fields" : [ "message_id", "user_message_id", "chat_session_id" ]
    }, {
      "event" : "chat.from.history.opened",
      "fields" : [ "chat_session_id" ]
    }, {
      "event" : "code.snippet.file.created",
      "fields" : [ "chat_session_id", "message_id" ]
    }, {
      "event" : "message.reacted",
      "fields" : [ "message_id", "chat_session_id" ]
    }, {
      "event" : "new.chat.created",
      "fields" : [ "chat_session_id" ]
    }, {
      "event" : "edit.user.message.cancelled.with.mouse",
      "fields" : [ "chat_session_id" ]
    }, {
      "event" : "code.copied",
      "fields" : [ "message_id", "chat_session_id" ]
    }, {
      "event" : "edit.usage.message.finished",
      "fields" : [ "message_id", "chat_session_id" ]
    } ]
  }, {
    "id" : "llm.inline.completion",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:llm.item.ready}" ],
      "event_data" : {
        "accumulation_stop_reason" : [ "{enum:LLM_CODE_FINISHED|EOF|BLOCK_BALANCE|TOO_NESTED|FIRST_LINE_MODE}", "{enum:LINE_LIMIT}" ],
        "cached_request_id" : [ "{regexp#integer}" ],
        "caching" : [ "{enum:FRESH|BY_POSITION|BY_PROMPT_TEXT|CONTINUATION}" ],
        "decline_reason" : [ "{enum:LLM_DECISION|LLM_DID_NOT_RESPOND|LLM_RESPONSE_HAS_NO_ANSWER|LLM_RESPONSE_HAS_NO_CODE|SYNTAX_ERROR|UNRESOLVABLE|UNSUPPORTED_CONTEXT|INTERNAL_IDE_PROBLEM|CANCELLED|EXCEPTION|DAILY_LIMIT_EXCEEDED}", "{enum:DUPLICATE}", "{enum:CONFLICTING_PLUGINS}" ],
        "references_renamed" : [ "{enum#boolean}" ],
        "request_id" : [ "{regexp#integer}" ],
        "stage" : [ "{enum:START|PROMPT_GENERATION|SEND_REQUEST|ACCUMULATE_RESPONSE|POST_PROCESS|RESULT}" ],
        "time_to_accumulate_response" : [ "{regexp#integer}" ],
        "time_to_collect_context" : [ "{regexp#integer}" ],
        "time_to_postprocess" : [ "{regexp#integer}" ],
        "will_yield_more_results" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "llm.metrics",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:metric.calculated}" ],
      "event_data" : {
        "experiment_id" : [ "{regexp#integer}" ],
        "llm_configuration_id" : [ "{regexp#integer}" ],
        "metric" : [ "{util#class_name}" ],
        "metric_value" : [ "{regexp#float}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "llm.project.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:kill.switch.level|system.prompts.customized}" ],
      "event_data" : {
        "action_id" : [ "{enum:AIAssistant.VCS.GenerateCommitMessage}" ],
        "is_customized" : [ "{enum#boolean}" ],
        "level" : [ "{enum:Allowed|JvmFlag|OSRegistry|Agreement|IdeLicense|IdeLicenseNotInitialized|ProjectFile|UserSetting}", "{enum:RemDev}" ]
      }
    }
  }, {
    "id" : "llm.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "end_of_quotas" : [ "{regexp#integer}" ],
        "level" : [ "{enum:Allowed|JvmFlag|OSRegistry|Agreement|IdeLicense|IdeLicenseNotInitialized|ProjectFile|UserSetting}", "{enum:RemDev}" ],
        "number_of_prompts_created" : [ "{regexp#integer}" ],
        "paid" : [ "{enum#boolean}" ],
        "percent" : [ "{regexp#integer}" ],
        "prompts_with_code_selection" : [ "{regexp#integer}" ],
        "state" : [ "{enum#__state}", "{enum:Unknown|EnoughQuota|QuotaReached}" ],
        "trial" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "log.in.state", "name.suggestion.enabled", "generate.commit.summary.enabled", "convert.language", "smart.chat", "prompts", "inline.completion", "ai.license.available", "kill.switch.app.level", "quotas" ],
        "__state" : [ "Unknown", "NoAuth", "InProgress", "WaitList", "Authed", "WAITING_FOR_GRAZIE", "NO_JBA", "JBA", "NO_AGREEMENT", "WAITING_FOR_JBA", "GRAZIE_LITE", "GRAZIE_PRO" ]
      }
    }
  }, {
    "id" : "local.history.counter",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "actionKind" : [ "{enum:RevertRevisions|RevertChanges|CreatePatch|Diff}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "is_toolwindow_ui" : [ "{enum#boolean}" ],
        "kind" : [ "{enum:Recent|File|Directory|Selection}" ]
      },
      "enums" : {
        "__event_id" : [ "load.items.finished", "load.items.started", "action.used", "filter.finished", "filter.used", "filter.started", "load.diff.finished", "load.diff.started", "opened" ]
      }
    }
  }, {
    "id" : "login",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "activity_id" : [ "{regexp#integer}" ],
        "dialogType" : [ "{enum:LicenseDialog|StartTrialDialog|LoginDialog}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "error_type" : [ "{enum:TrialNotSupported|Other}" ],
        "ide_requires_license" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "license" : [ "{enum:none|trial|student|professional|open_source}" ],
        "link_copy" : [ "{enum#boolean}" ],
        "logged_in" : [ "{enum#boolean}" ],
        "login_provider" : [ "{enum:jba|google|github|gitlab|bitbucket}" ],
        "newsletter" : [ "{enum#boolean}" ],
        "onboarding" : [ "{enum#boolean}" ],
        "plugins_require_licenses" : [ "{enum#boolean}" ],
        "session_time_ms" : [ "{regexp#integer}" ],
        "source" : [ "{enum:login_dialog|licenses_user_info|licenses_new_license|licenses_trial}", "{enum:LicenseDialogLink}", "{enum:StartTrialDialogLink}" ],
        "successful" : [ "{enum#boolean}" ],
        "timestamp" : [ "{regexp#integer}" ],
        "token_check" : [ "{enum#boolean}" ],
        "token_input" : [ "{enum#boolean}" ],
        "troubles_pressed" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "exit", "licenses.dialog.shown", "request.trial", "continue", "browser.login", "buy.license", "licenses.dialog.closed", "manual.login", "browser.register", "trial.dialog.start.trial.pressed", "trial.dialog.closed", "trial.dialog.error.occurred", "trial.dialog.shown", "trial.dialog.start.activate.pressed", "proxy.settings.shown", "startup.process.run", "startup.process.finished" ]
      }
    }
  }, {
    "id" : "markdown.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:runner.executed}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "runner" : [ "{util#class_name}" ],
        "type" : [ "{enum:BLOCK|LINE}" ]
      }
    }
  }, {
    "id" : "maven.import",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "after_apply_duration_ms" : [ "{regexp#integer}" ],
        "attempts" : [ "{regexp#integer}" ],
        "before_apply_duration_ms" : [ "{regexp#integer}" ],
        "collect_folders_duration_ms" : [ "{regexp#integer}" ],
        "config_duration_ms" : [ "{regexp#integer}" ],
        "config_modules_duration_ms" : [ "{regexp#integer}" ],
        "configurator_class" : [ "{util#class_name}" ],
        "duration_in_background_ms" : [ "{regexp#integer}" ],
        "duration_in_write_action_ms" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "duration_of_bridges_commit_ms" : [ "{regexp#integer}" ],
        "duration_of_bridges_creation_ms" : [ "{regexp#integer}" ],
        "duration_of_workspace_update_call_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "importer_class" : [ "{util#class_name}" ],
        "number_of_modules" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "total_duration_ms" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "hasUserModifiedImportedLibrary", "hasUserAddedModuleDependency", "hasUserAddedLibraryDependency", "importer_run", "configurator_run", "legacy_import.started", "workspace_folders_update.started", "workspace_import.legacy_importers.finished", "workspace_import.legacy_importers.started", "workspace_import.populate.finished", "workspace_import.configurator_run", "workspace_import.commit.finished", "legacy_import.finished", "legacy_import.create_modules.started", "legacy_import.importers.started", "legacy_import.create_modules.finished", "workspace_import.started", "legacy_import.delete_obsolete.started", "workspace_import.commit.started", "workspace_import.finished", "workspace_import.populate.started", "legacy_import.importers.finished", "legacy_import.delete_obsolete.finished", "workspace_folders_update.finished", "workspace_commit", "post_import_tasks_run", "workspace_import.legacy_importers.stats" ]
      }
    }
  }, {
    "id" : "maven.indexing",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "artifacts_count" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "groups_count" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "is_central" : [ "{enum#boolean}" ],
        "is_local" : [ "{enum#boolean}" ],
        "is_private" : [ "{enum#boolean}" ],
        "is_success" : [ "{enum#boolean}" ],
        "manual" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "artifact.from.pom.added", "index.update.started", "index.update.finished", "index.broken", "index.open", "gav.index.update.started", "gav.index.update.finished" ]
      }
    }
  }, {
    "id" : "maven.plugins",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:maven.plugins.used}" ],
      "event_data" : {
        "extension" : [ "{enum#boolean}" ],
        "group_artifact_id" : [ "{util#maven_plugin_rule_whitelist_ids}" ],
        "has_configuration" : [ "{enum#boolean}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "mermaid.count",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:diagrams.injected|diagram.used}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "file_type" : [ "{util#file_type}" ],
        "type" : [ "{enum:Pie|Journey|Flowchart|Sequence|Class|State|EntityRelationship|Gantt|Requirement|GitGraph|C4|Mindmap|Timeline|Quadrant|ZenUml|Sankey}" ],
        "types" : [ "{enum:Pie|Journey|Flowchart|Sequence|Class|State|EntityRelationship|Gantt|Requirement|GitGraph|C4|Mindmap|Timeline|Quadrant|ZenUml|Sankey}" ]
      }
    }
  }, {
    "id" : "microservices.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action_id" : [ "{enum:find_usages|open_endpoints|generate_request|generate_openapi|generate_test}", "{enum:show_secured_urls|show_security_matchers}" ],
        "endpoints_provider" : [ "{util#endpoint_provider_name}" ],
        "filter_id" : [ "{enum:framework|module|type}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__event_id" : [ "endpoints.groups.requested", "url.path.reference.variants", "url.path.segment.navigate", "mq.reference.variants", "mq.reference.navigate", "url.path.inlay.actions", "endpoints.tab.openapi.activated", "endpoints.tab.http.client.activated", "endpoints.list.filtered", "url.path.inlay.action.triggered" ]
      }
    }
  }, {
    "id" : "ml.completion",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:decorating.settings.changed|ranking.settings.changed|decorating.opinion.provided}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "enabled_by_default" : [ "{enum#boolean}" ],
        "opinion" : [ "{enum:LIKE|DISLIKE|NEUTRAL}" ],
        "ranker_id" : [ "{util#ml_completion_ranker_id}" ],
        "using_language_checkbox" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "module.facets",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:module.with.facet}" ],
      "event_data" : {
        "facet" : [ "{util#facets_type}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "move.refactoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:handler.invoked|move.files.or.directories}" ],
      "event_data" : {
        "handler" : [ "{util#class_name}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "new.project.wizard",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "framework" : [ "{util#framework}" ],
        "generator_id" : [ "{util#class_name}" ],
        "gradle-kotlin-dsl" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "projectType" : [ "{util#project_type}" ]
      },
      "enums" : {
        "__event_id" : [ "finish", "attempt", "finish.add.framework", "attempt.add.framework", "project.generated", "project.created" ]
      }
    }
  }, {
    "id" : "new.project.wizard.interactions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "add_sample_code" : [ "{enum#boolean}" ],
        "add_sample_onboarding_tips" : [ "{enum#boolean}" ],
        "build_system" : [ "{enum:Amper}", "{enum:IntelliJ|Gradle|Maven|SBT|other}", "{enum:intellij|gradle|maven|sbt|other}" ],
        "build_system_dsl" : [ "{enum:groovy|kotlin|other}" ],
        "build_system_parent" : [ "{enum#boolean}" ],
        "build_system_sdk_version" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "generator" : [ "{util#class_name}", "{util#npw_generator}" ],
        "git" : [ "{enum#boolean}" ],
        "gradle_distribution" : [ "{enum:BUNDLED|DEFAULT_WRAPPED|WRAPPED|LOCAL}" ],
        "gradle_dsl" : [ "{enum:KOTLIN|GROOVY}" ],
        "gradle_version" : [ "{util#npw_gradle_version}" ],
        "groovy_sdk_type" : [ "{enum:maven|local|null|other}", "{enum:Maven|Local|None}" ],
        "hits" : [ "{regexp#integer}" ],
        "input_mask" : [ "{regexp#integer}" ],
        "language" : [ "{util#class_name}", "{enum#__language}", "{enum:Java|Kotlin|Groovy|JavaScript|HTML|Python|PHP|Ruby|Go|Scala|Rust|other}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_selected" : [ "{enum#__plugin_selected}", "{enum:Java|Kotlin|Groovy|JavaScript|HTML|Python|PHP|Ruby|Go|Scala|Rust|other}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "project_created" : [ "{enum#boolean}" ],
        "screen" : [ "{regexp#integer}" ],
        "typed_chars" : [ "{regexp#integer}" ],
        "use_compact_project_structure" : [ "{enum#boolean}" ],
        "version" : [ "{regexp#version}" ],
        "wizard_session_id" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "project.location.changed", "navigate.prev", "project.name.changed", "navigate.help", "git.changed", "select.custom.template", "create.git.repo", "generator.finished", "select.language", "wizard.dialog.open", "project.created", "search", "language.finished", "navigate.next", "build.system.add.sample.code.changed", "groovy.lib.changed", "groovy.lib.finished", "build.system.sdk.changed", "build.system.module.name.changed", "build.system.dsl.changed", "build.system.content.root.changed", "build.system.group.id.changed", "build.system.changed", "build.system.artifact.id.changed", "build.system.module.file.location.changed", "build.system.sdk.finished", "build.system.finished", "plugin.selected", "add.plugin.clicked", "generator.selected", "wizard.dialog.finish", "build.system.version.changed", "build.system.parent.changed", "build.system.add.sample.onboarding.tips.changed", "build.system.parent.finished", "git.finished", "gradle.version.finished", "gradle.dsl.finished", "gradle.distribution.finished", "gradle.version.changed", "gradle.dsl.changed", "gradle.distribution.changed", "build.system.use.compact.project.structure.changed", "kotlin.kmp.wizard.link.clicked", "more.plugin.item.selected", "manage.plugin.link.clicked", "more.plugin.link.clicked" ],
        "__language" : [ "Scala", "Go", "PHP", "Ruby", "Python", "Java", "JavaScript", "HTML", "Groovy", "Kotlin", "python", "other", "java", "groovy", "scala", "kotlin", "go", "php", "html", "javascript", "ruby" ],
        "__plugin_selected" : [ "python", "other", "java", "groovy", "scala", "kotlin", "go", "php", "html", "javascript", "ruby", "Java", "JavaScript", "HTML", "Groovy", "Kotlin" ]
      }
    }
  }, {
    "id" : "new.ui.onboarding",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "last_step_duration_ms" : [ "{regexp#integer}" ],
        "reason" : [ "{enum:SKIP_ALL|ESCAPE_PRESSED|PROJECT_CLOSED}" ],
        "starting_place" : [ "{enum:WELCOME_DIALOG|CONFIGURE_NEW_UI_TOOLWINDOW}" ],
        "step_id" : [ "{util#newUiOnboardingStepId}" ]
      },
      "enums" : {
        "__event_id" : [ "started", "welcome.dialog.shown", "stopped", "welcome.dialog.skip.clicked", "step.started", "step.finished", "finished", "link.clicked" ]
      }
    }
  }, {
    "id" : "node.js.interpreter.and.package.manager.on.startup",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:nvmrc|package.manager|interpreter}" ],
      "event_data" : {
        "is_node_from_path" : [ "{enum#boolean}" ],
        "name" : [ "{enum:npm|yarn|pnpm}" ],
        "nvmrc_version_installed" : [ "{enum#boolean}" ],
        "resolved" : [ "{enum#boolean}" ],
        "type" : [ "{util#node_interpreter_type}" ],
        "version" : [ "{regexp#version}" ],
        "yarn_lock" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "node.js.interpreter.and.package.manager.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:package.manager|interpreter|nvmrc}" ],
      "event_data" : {
        "is_node_from_path" : [ "{enum#boolean}" ],
        "name" : [ "{enum:npm|yarn|pnpm}" ],
        "nvmrc_version_installed" : [ "{enum#boolean}" ],
        "project_interpreter_and_nvmrc_have_same_version" : [ "{enum#boolean}" ],
        "project_interpreter_uses_node_from_path" : [ "{enum#boolean}" ],
        "resolved" : [ "{enum#boolean}" ],
        "type" : [ "{util#node_interpreter_type}" ],
        "version" : [ "{regexp#version}" ],
        "yarn_pnp" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "node.packages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:node_package}" ],
      "event_data" : {
        "name" : [ "{util#node.packages}", "{enum:@mui/material|@mui/icons-material|pinia|bun-types}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "nodejs.run.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:exec.params}" ],
      "event_data" : {
        "interpreter_type" : [ "{enum#__interpreter_type}" ]
      },
      "enums" : {
        "__interpreter_type" : [ "Local", "WSL", "Remote_sftp", "Remote_docker", "Remote_vagrant", "Remote_docker-compose", "Remote_ssh", "undefined", "third.party_remote", "Remote_unknown", "Unknown" ]
      }
    }
  }, {
    "id" : "notification.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:changed}" ],
      "event_data" : {
        "display_type" : [ "{enum:NONE|BALLOON|STICKY_BALLOON|TOOL_WINDOW}" ],
        "notification_group" : [ "{util#notification_group}" ],
        "play_sound" : [ "{enum#boolean}" ],
        "read_aloud" : [ "{enum#boolean}" ],
        "should_log" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "notifications",
    "builds" : [ ],
    "versions" : [ {
      "from" : "40"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action_id" : [ "{util#class_name}", "{util#action}", "{enum#action}" ],
        "additional.display_id" : [ "{enum#notification_id}", "{util#notification_display_id}" ],
        "class" : [ "{util#class_name}" ],
        "display_id" : [ "{util#notification_display_id}" ],
        "display_type" : [ "{enum:BALLOON|STICKY_BALLOON|TOOL_WINDOW}", "{enum:NONE}" ],
        "id" : [ "{regexp:\\d+.\\d+}" ],
        "is_expandable" : [ "{enum#boolean}" ],
        "notification_group" : [ "{util#notification_group}", "{enum:JavaScript_Debugger_Console_URL_Starter|New_JVM_Backend|New JVM Backend|LIGHTWEIGHT_LICENSE_NOTIFICATION}" ],
        "notification_place" : [ "{enum:BALLOON|EVENT_LOG}", "{enum:TOOL_WINDOW}", "{enum:ACTION_CENTER}" ],
        "parent" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "severity" : [ "{enum:ERROR|INFORMATION|WARNING}" ]
      },
      "enums" : {
        "__event_id" : [ "action.invoked", "balloon.collapsed", "balloon.expanded", "closed.by.user", "event.log.balloon.shown", "hyperlink.clicked", "logged", "settings.clicked", "shown" ],
        "notification_id" : [ "ignored.to.exclude.synchronization.notification", "externally.added.files.notification", "project.configuration.files.added.notification", "manage.ignore.files.notification", "github.missing.default.account", "github.pull.request.cannot.set.tracking.branch", "github.clone.unable.to.create.destination.dir", "github.clone.unable.to.find.destination", "github.open.in.browser.file.is.not.under.repo", "github.open.in.browser.cannot.get.last.revision", "github.rebase.success", "github.gist.cannot.create", "github.pull.request.cannot.load.branches", "github.pull.request.cannot.collect.additional.data", "github.pull.request.cannot.load.forks", "github.pull.request.failed.to.add.remote", "github.pull.request.push.failed", "github.pull.request.creation.error", "github.pull.request.cannot.collect.diff.data", "github.pull.request.cannot.find.repo", "github.pull.request.created", "github.pull.request.cannot.process.remote", "github.pull.request.no.current.branch", "github.rebase.cannot.validate.upstream.remote", "github.rebase.upstream.is.own.repo", "github.rebase.cannot.get.user.info", "github.rebase.cannot.retrieve.upstream.info", "github.rebase.cannot.configure.upstream.remote", "github.rebase.repo.not.found", "github.rebase.cannot.load.repo.info", "github.rebase.repo.is.not.a.fork", "github.share.cannot.find.git.repo", "github.share.cannot.create.repo", "github.share.project.successfully.shared", "github.share.empty.repo.created", "github.share.project.created.init.commit.failed", "github.share.init.push.failed", "github.gist.created", "github.git.repo.init.error", "unknown", "hg.update.unresolved.conflicts.error", "git.merge.local.changes.detected", "vcs.patch.apply.rollback.failed", "hg.qrefresh.error", "git.revert.abort.failed", "git.fetch.success", "git.branch.operation.success", "git.pull.failed", "hg.merge.warning", "vcs.commit.finished.with.warnings", "vcs.shelve.successful", "git.merge.reset.error", "git.stage.commit.successful", "git.clone.unable.to.create.destination.dir", "git.rebase.cannot.continue", "vcs.commit.canceled", "git.branch.rename.rollback.success", "hg.merge.error", "hg.rebase.error", "git.update.no.tracked.branch.error", "git.rebase.update.project.error", "hg.tag.creation.error", "git.local.changes.not.restored", "hg.clone.destination.error", "vcs.shelve.failed", "hg.merging.with.ancestor.skipped", "vcs.patch.apply.aborted", "hg.pushed.successfully", "git.remote.branch.deletion.success", "hg.repository.created", "git.tag.created", "hg.qpop.completed.with.errors", "git.branch.operation.error", "hg.compare.with.branch.error", "git.fetch.error", "hg.nothing.to.push", "git.rebase.cannot.abort", "hg.unsupported.extensions", "vcs.patch.partially.applied", "git.branches.update.successful", "hg.exception.during.merge.commit", "git.init.failed", "git.rebase.not.allowed", "hg.qfold.error", "hg.qfinish.error", "git.merge.abort.success", "git.init.error", "git.rebase.commit.edit.undo.error.repo.changed", "git.reset.failed", "git.update.detached.head.error", "git.create.branch.rollback.successful", "git.branch.checkout.failed", "git.delete.branch.on.merge", "vcs.root.added", "git.stash.failed", "vcs.patch.copied.to.clipboard", "git.merge.abort.failed", "vcs.could.not.compare.with.branch", "git.reset.successful", "git.branch.creation.failed", "git.branch.deletion.rollback.error", "hg.graft.continue.error", "hg.merge.exception", "git.rebase.abort.succeeded", "hg.debugancestor.error", "hg.log.command.execution.error", "hg.unable.to.run.executable", "hg.bookmark.error", "git.rebase.commit.edit.undo.error", "git.unstash.with.unresolved.conflicts", "git.unstash.failed", "hg.qgoto.error", "hg.clone.error", "git.clone.failed", "git.rebase.abort.failed", "hg.remote.auth.error", "vcs.uncommitted.changes.saving.error", "git.update.nothing.to.update", "git.merge.rollback.error", "hg.qnew.error", "git.checkout.success", "git.update.error", "git.cannot.resolve.conflict", "git.unstash.with.conflicts", "space.sharing.not.finished", "hg.rebase.continue.error", "git.checkout.rollback.error", "git.reset.partially.failed", "git.remote.branch.deletion.error", "hg.qrename.error", "hg.unsupported.version", "hg.repo.creation.error", "space.git.repo.init.error", "git.tag.remote.deletion.error", "hg.push.error", "vcs.cherry.pick.error", "git.repository.created", "vcs.roots.invalid", "git.stash.local.changes.detected", "git.could.not.compare.with.branch", "git.rebase.not.started", "space.project.shared.successfully", "vcs.compare.failed", "vcs.patch.apply.success.applied", "hg.qdelete.error", "hg.branch.creation.error", "git.cherry.pick.abort.failed", "git.rebase.rollback.failed", "git.merge.error", "vcs.patch.apply.cannot.find.patch.file", "git.rebase.commit.edit.undo.error.protected.branch", "git.rebase.successful", "vcs.commit.failed", "git.could.not.load.changes.of.commit", "git.unresolved.conflicts", "vcs.patch.apply.new.files.error", "hg.rebase.abort.error", "git.revert.abort.success", "git.stage.commit.error", "git.tag.not.created", "git.create.branch.rollback.error", "git.fix.tracked.not.on.branch", "vcs.shelve.deletion.undo", "hg.tag.creation.failed", "git.tag.deletion.rollback.error", "hg.update.error", "vcs.roots.registered", "hg.status.command.error", "hg.qimport.error", "vcs.patch.apply.not.patch.type.file", "vcs.commit.finished", "git.could.not.save.uncommitted.changes", "hg.rename.failed", "git.branch.rename.rollback.failed", "git.cherry.pick.abort.success", "hg.qpop.error", "git.conflict.resolving.error", "git.merge.failed", "hg.pull.error", "git.unstash.patch.applied", "hg.bookmark.name.is.empty", "hg.pull.auth.required", "git.rebase.abort", "vcs.patch.already.applied", "git.checkout.new.branch.operation.rollback.error", "hg4idea.changesets.error", "vcs.patch.creation.failed", "hg.graft.error", "hg.qpush.error", "git.checkout.new.branch.operation.rollback.successful", "github.rebase.remote.origin.not.found", "github.rebase.account.not.found", "github.rebase.multi.repo.not.supported", "rebase.error.failed.to.match.gh.repo", "git.branch.set.upstream.failed", "git.log.could.not.load.changes.of.commit", "vcs.project.partially.updated", "vcs.shelf.undo.delete", "vcs.branch.operations.are.executed.on.all.roots", "git.rebase.collect.updated.changes.error", "git.push.not.supported", "vcs.inactive.ranges.damaged", "git.commit.cancelled", "git.fetch.result", "git.tag.remote.deletion.success", "git.fetch.cancelled", "git.fetch.details", "git.project.updated", "git.all.files.are.up.to.date", "git.fetch.result.error", "git.project.partially.updated", "git.push.result", "git.branch.deleted", "git.tag.restored", "git.files.updated.after.merge", "vcs.project.update.finished", "git.tag.deleted", "git.commit.edit.success", "space.other", "gradle.jvm.invalid", "gradle.jvm.configured", "gradle.configuration.error", "sh.update.shellcheck.error", "sh.update.shellcheck.success", "sh.update.formatter.success", "sh.install.formatter.error", "sh.update.formatter.error", "sh.install.formatter", "sh.update.shellcheck", "sh.update.formatter", "sh.install.formatter.success", "git.bad.executable", "git.init.stage.failed", "git.rebase.failed", "diff.external.too.many.selected", "ignored.to.exclude.not.found", "git.rebase.stopped.for.editing", "vcs.cannot.load.annotations", "untracked.files.overwritten", "diff.external.cant.load.changes", "vcs.obsolete.plugin.unbundled", "vcs.suggested.plugin.install.failed", "diff.merge.intenral.error", "git.rebase.stopped.due.to.conflicts", "vcs.commit.checks.failed", "git.tags.loading.failed", "vcs.commit.checks.only.failed", "vcs.add.unversioned.error", "vcs.post.commit.checks.failed", "grazie.pro.advertisement", "git.open.in.browser.error", "git.ignore.file.generation.error", "review.branch.checkout.failed", "space.merge.request.creation.failed", "space.merge.request.created", "space.git.repo.foldernotfound", "git.stage.operation.error", "vcs.log.navigation.error", "vcs.log.commit.not.found", "file.history.load.details.error", "vcs.log.fatal.error", "vcs.log.not.available", "git.stash.non.empty.index.detected", "git.stash.successful", "space.review.create", "gitlab.merge.request.create", "github.pull.request.create", "maven.workspace.first.import.notification", "maven.wrapper.file.not.found.notification", "maven.workspace.external.storage.notification", "maven.wrapper.downloading.error.notification", "project.structure.automatically.detected.notification.id", "build.script.found.notification.id", "maven.wrapper.information.notification", "maven.wrapper.empty.url.notification", "github.pull.request.branch.update.failed" ]
      }
    }
  }, {
    "id" : "oc",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "add_to_project" : [ "{enum#boolean}" ],
        "code_style" : [ "{enum#__code_style}", "{enum:microsoft}" ],
        "from" : [ "{enum:dereference|dot}" ],
        "header_only" : [ "{enum#boolean}" ],
        "with_header" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__code_style" : [ "third.party", "qt", "allman", "gnu", "lldb", "stroustrup", "kr", "whitesmiths", "google", "llvm" ],
        "__event_id" : [ "completion.qualified", "completion.change.qualifying.token", "create.cpp.class", "create.source.file", "create.file", "apply.formatter.settings" ]
      }
    }
  }, {
    "id" : "oc.clangd.crash",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:tidy|total|namehints}" ]
    }
  }, {
    "id" : "oc.clangd.memoryLimitExceedances",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:total}" ]
    }
  }, {
    "id" : "oc.clangtidy",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:has.clangtidy.file}" ]
    }
  }, {
    "id" : "oc.misra",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:oc.misra.enabled}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "oc.source.extensions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:source.file}" ],
      "event_data" : {
        "extension" : [ "{enum#__extension}" ]
      },
      "enums" : {
        "__extension" : [ "c", "i", "ii", "cc", "cp", "cxx", "cpp", "c++", "m", "mm", "C", "I", "II", "CC", "CP", "CXX", "CPP", "C++", "M", "MM", "Other" ]
      }
    }
  }, {
    "id" : "oc.symbols",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:built}" ],
      "event_data" : {
        "duration_group" : [ "{regexp#integer}s+", "<{regexp#integer}s", "{regexp#integer}m+", ">{regexp#integer}m" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "files" : [ "{regexp#integer}" ],
        "mode" : [ "{enum:FAST|COMPACT|FULL}" ],
        "tables" : [ "{regexp#integer}" ],
        "tables_group" : [ "{regexp#integer}+", "{regexp#integer}", "<{regexp#integer}" ]
      }
    }
  }, {
    "id" : "onboarding.tips.statistics",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:tips.disabled|promoted.action.used|hide.disable.proposal|onboarding.tips.installed}" ],
      "event_data" : {
        "action_id" : [ "{enum:SearchEverywhere|ShowIntentionActions|Run|Debug|ToggleLineBreakpoint}", "{enum:DebugClass|RunClass}" ],
        "first_time_used" : [ "{enum#boolean}" ],
        "projects_with_tips" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "os.file.type.association",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:os.association.created}" ],
      "event_data" : {
        "file_type" : [ "{util#file_type}" ]
      }
    }
  }, {
    "id" : "os.linux.wm",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:xdg.current.desktop|xdg.session.type}" ],
      "event_data" : {
        "value" : [ "{enum#__value}", "{enum:Terminal|X11|Wayland|empty|Unknown}" ]
      },
      "enums" : {
        "__value" : [ "LG3D", "KDE", "Gnome", "Gnome_Shell", "Gnome_Classic", "Ubuntu_Gnome", "Budgie_Gnome", "GNOME_Flashback_Unity", "GNOME_Flashback_Gnome", "GNOME_Flashback", "pop_GNOME", "Awesome_GNOME", "X-Cinnamon", "Unity", "Unity7", "XFCE", "XDG_CURRENT_DESKTOP_is_empty", "i3", "MATE", "Pantheon", "Deepin", "LXDE", "LXQt", "Enlightenment", "UKUI", "X-Generic", "ICEWM", "Fluxbox", "default.desktop", "Unknown", "empty" ]
      }
    }
  }, {
    "id" : "package.management.ui",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:upgrade|uninstall|install|browseAvailablePackages}" ],
      "event_data" : {
        "service" : [ "{enum#service_name}" ]
      },
      "enums" : {
        "service_name" : [ "Node.js", "Python", "Bower" ]
      }
    }
  }, {
    "id" : "packagesearch",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "checkbox_name" : [ "{enum:OnlyStable|OnlyKotlinMp}" ],
        "checkbox_state" : [ "{enum#boolean}" ],
        "details_link_label" : [ "{enum:PackageUsages|GitHub|Documentation|License|ProjectWebsite|Readme}" ],
        "details_visible" : [ "{enum#boolean}", "{enum:PackageDetails|OnlyStable|OnlyKotlinMp}" ],
        "event_data_1" : [ "{regexp#integer}" ],
        "module_operation_provider_class" : [ "{util#class_name}" ],
        "package_from_version" : [ "{regexp#version}" ],
        "package_id" : [ "{util#top_package_id}" ],
        "package_is_installed" : [ "{enum#boolean}" ],
        "package_version" : [ "{regexp#version}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "preferences_auto_add_repositories" : [ "{enum#boolean}" ],
        "preferences_default_gradle_scope_changed" : [ "{enum#boolean}" ],
        "preferences_default_maven_scope_changed" : [ "{enum#boolean}" ],
        "preferences_gradle_scopes_count" : [ "{regexp#integer}" ],
        "preferences_update_scopes_on_usage" : [ "{enum#boolean}" ],
        "repository_id" : [ "{enum:OTHER|NONE|MAVEN_CENTRAL|GOOGLE_MAVEN|JETBRAINS_REPOS}", "{enum:CLOJARS}" ],
        "repository_url" : [ "{enum:https://repo.maven.apache.org/maven2/|https://maven-central.storage-download.googleapis.com/maven2|https://repo1.maven.org/maven2/|https://maven.google.com/|https://maven.pkg.jetbrains.space/kotlin/p/dokka/dev/|https://maven.pkg.jetbrains.space/public/p/compose/dev/|https://maven.pkg.jetbrains.space/public/p/ktor/eap/|https://maven.pkg.jetbrains.space/public/p/space/maven/}", "{enum:https://repo.clojars.org/}" ],
        "repository_uses_custom_url" : [ "{enum#boolean}" ],
        "search_query_length" : [ "{regexp#integer}" ],
        "sort_metric" : [ "{enum:None|GitHub stars|StackOverflow health|Dependency rating|OSS health}" ],
        "target_modules" : [ "{enum:None|One|All}", "{enum:Some}" ],
        "target_modules_mixed_build_systems" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "enabled", "maven", "gradle-groovy", "gradle-kts", "details_link_click", "preferences_changed", "toggle", "package_installed", "package_selected", "upgrade_all_event", "repository_removed", "package_updated", "repository_added", "target_modules_selected", "package_removed", "search_query_clear", "preferences_restore_defaults", "search_request", "sort_metric_changed" ]
      }
    }
  }, {
    "id" : "packagesearch.dialog",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "build-system" : [ "{enum#build_system}" ],
        "gradle-groovy" : [ "{regexp#integer}" ],
        "gradle-kts" : [ "{regexp#integer}" ],
        "hit-min-order" : [ "{regexp#integer}" ],
        "ij" : [ "{regexp#integer}" ],
        "match-groups" : [ "{regexp#integer}" ],
        "match-items" : [ "{regexp#integer}" ],
        "maven" : [ "{regexp#integer}" ],
        "ok" : [ "{enum#boolean}" ],
        "query-size" : [ "{regexp#integer}" ],
        "query-tokens" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "request", "installed", "close-cancel", "response", "project-info", "response-failed", "close", "open" ],
        "build_system" : [ "maven", "gradle-groovy", "gradle-kts" ]
      }
    }
  }, {
    "id" : "performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "9"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "cold_start" : [ "{enum#boolean}" ],
        "cpu_time_ms" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "during_indexing" : [ "{enum#boolean}" ],
        "gc_time_ms" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "place" : [ "{util#place}" ],
        "power_save_mode" : [ "{enum#boolean}" ],
        "power_source" : [ "{enum:UNKNOWN|AC|BATTERY}" ],
        "swap_load" : [ "{regexp#integer}" ],
        "system_cpu_load" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "ui.latency", "ui.lagging", "heartbeat", "popup.latency", "mainmenu.latency" ]
      }
    }
  }, {
    "id" : "php.architecture.code.smell.line.marker",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:extract_class_fix_started|move_method_fix_started|extract_method_fix_started}" ]
    }
  }, {
    "id" : "php.architecture.extract.function",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:dialog.closed|search.cancelled|unable.to.find.candidates|popup.shown}" ],
      "event_data" : {
        "chosen_candidate_number" : [ "{regexp#integer}" ],
        "cyclomatic_complexity" : [ "{regexp#integer}" ],
        "duration" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "lines_of_code" : [ "{regexp#integer}" ],
        "max_nesting_depth" : [ "{regexp#integer}" ],
        "number_of_candidates" : [ "{regexp#integer}" ],
        "output_variables" : [ "{regexp#integer}" ],
        "refactoring_applied" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "php.check.reg.exp",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:check.regexp.tooltip.shown|run.check.regexp.intention}" ]
    }
  }, {
    "id" : "php.code.analysis",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:level_automatic_change_reverted|level_automatically_changed}" ],
      "event_data" : {
        "new_level" : [ "{regexp#version}" ],
        "old_level" : [ "{regexp#version}" ],
        "revert_from_level" : [ "{regexp#version}" ],
        "revert_to_level" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "php.code.vision",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:inheritors.clicked|references.clicked}" ],
      "event_data" : {
        "location" : [ "{enum:class|interface|trait|enum|enum case|class const|field|method|function|const|unknown}" ]
      }
    }
  }, {
    "id" : "php.codeGolf.ideFeaturesTrainer",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:start|passed}" ],
      "event_data" : {
        "duration" : [ "{regexp#integer}" ],
        "lesson_id" : [ "{util#lesson_id}" ]
      }
    }
  }, {
    "id" : "php.command.line.tools.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:command.executed}" ],
      "event_data" : {
        "toolType" : [ "{enum#__toolType}" ]
      },
      "enums" : {
        "__toolType" : [ "unconfigured", "unknown", "custom", "zend1", "zend2", "symfony", "composer", "symfonyBasedTool", "drush", "wordPress" ]
      }
    }
  }, {
    "id" : "php.completion",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:insert.fqcn|insert.namespace|insert.expected.argument}" ],
      "event_data" : {
        "type" : [ "{enum:constant|scalar|class.constant|function.call}" ]
      }
    }
  }, {
    "id" : "php.composer.config",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "configured" : [ "{enum#boolean}" ],
        "configured_subprojects" : [ "{regexp#integer}" ],
        "constraint" : [ "{enum:>|>=|-|~|^|=}" ],
        "custom_vendor_dir" : [ "{enum#boolean}" ],
        "default" : [ "{enum#boolean}" ],
        "dev" : [ "{enum#boolean}" ],
        "interpreterType" : [ "{enum#__interpreterType}" ],
        "json_in_subdirs" : [ "{regexp#integer}" ],
        "libs" : [ "{enum#boolean}" ],
        "max_depth" : [ "{regexp#integer}" ],
        "name" : [ "{util#composer_package}" ],
        "php_versions" : [ "{regexp#version}" ],
        "repository_type" : [ "{enum#__repository_type}" ],
        "settings" : [ "{enum:NOT_INITIALIZED|SYNCHRONIZE|DONT_SYNCHRONIZE}" ],
        "state" : [ "{enum:configured|foundInBaseDir|foundOutOfBaseDir|none}" ],
        "type" : [ "{enum:unknown|ExecutableComposerExecution|PharComposerExecution|ComposerRemoteInterpreterExecution}" ],
        "version" : [ "{enum:any|master|branch|undefined}", "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "package", "executor", "sync", "json", "repository", "installed_package" ],
        "__interpreterType" : [ "third.party", "unconfigured", "lost", "corrupted", "local", "vagrant", "docker", "docker-compose", "ssh-credentials", "web-deployment" ],
        "__repository_type" : [ "composer", "vcs", "git", "svn", "fossil", "hg", "pear", "package", "artifact", "path" ]
      }
    }
  }, {
    "id" : "php.composer.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:actionInvoked}" ],
      "event_data" : {
        "action" : [ "{enum#__action}" ],
        "place" : [ "{util#place}" ]
      },
      "enums" : {
        "__action" : [ "init", "addDependencyDialogShown", "create-project", "clear-cache", "diagnose", "dump-autoload", "install", "updateAll", "licenses", "self-update", "status", "validate", "updatePackage", "require", "remove", "runScriptFromContext", "editRunConfigFromContext", "createRunConfigFromContext", "updateDryRun" ]
      }
    }
  }, {
    "id" : "php.composer.files.view",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:add|edit|remove}" ]
    }
  }, {
    "id" : "php.config",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "auto_generated" : [ "{enum#boolean}" ],
        "count" : [ "{regexp#integer}" ],
        "debugger" : [ "{enum:xdebug|ZendDebugger|unknown}" ],
        "equals_to_project_level" : [ "{enum#boolean}" ],
        "name" : [ "{enum#__name}", "{enum:READONLY_CLASSES}", "{enum:STANDALONE_NULL_FALSE|TRUE_TYPE}", "{enum:INTERSECTION_AND_UNION_IN_SAME_TYPE}", "{enum:CONSTANTS_IN_TRAITS}", "{enum:TRAILING_COMMA_IN_GROUP_USES}", "{enum:TYPED_CLASS_CONSTANTS}", "{enum:ANONYMOUS_READONLY_CLASSES}", "{enum:DYNAMIC_CLASS_CONSTANT}", "{enum:ARBITRARY_STATIC_VARIABLE_INITIALIZERS}", "{enum:ATTRIBUTE_OVERRIDE}" ],
        "php_language_level_composer_sync" : [ "{enum#boolean}" ],
        "php_level" : [ "{regexp#version}", "{enum:unknown|invalid.format}" ],
        "value" : [ "{enum:not.installed|installed}", "{enum#__value}" ],
        "with_mappings" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "debug.skip.path.total", "debug.server.total", "debug.server", "project.language.level", "default.interpreter", "interpreters.total", "interpreter", "php.code.style", "php.feature.usage" ],
        "__name" : [ "SHORT_ARRAY_SYNTAX", "TRAILING_COMMA_IN_FUNCTION_CALL", "ARRAY_DEREFERENCING", "CLASS_NAME_CONST", "TRAITS", "KEYWORD_NAMES", "CLASS_MEMBER_ACCESS_ON_INSTANTIATION", "THIS_IN_CLOSURE", "EMPTY_ANY_EXPRESSION", "COALESCE_OPERATOR", "IMMEDIATE_DEREFERENCING", "UNIFORM_VARIABLE_SYNTAX", "SCALAR_TYPE_HINTS", "RETURN_TYPES", "LIST_ASSIGN", "NULLABLES", "CLASS_CONSTANT_VISIBILITY", "SELF_IN_CLOSURE", "USE_FUNCTION_AND_CONST", "GENERATORS", "ARGUMENT_UNPACKING", "FINALLY", "VARIADIC_FUNCTIONS", "EXPONENTIATION", "CALL_TIME_PASS_BY_REFERENCE", "STATIC_IN_CLOSURE", "SPACESHIP_OPERATOR", "VAR_CONTINUE_ARGUMENT", "GROUPED_USE", "ANONYMOUS_CLASSES", "CATCH_MULTIPLE", "VAR_BREAK_ARGUMENT", "FLEXIBLE_HEREDOCS", "FOREACH_LIST", "BINARY_LITERAL", "RETURN_VOID", "PARENT_IN_CLOSURE", "OBJECT_TYPE_HINT", "ABSTRACT_FUNCTION_OVERRIDE", "TYPED_PROPERTIES", "LITERAL_IN_INSTANCEOF", "LITERAL_IN_STATIC_CALL", "VAR_BREAK_ZERO_ARGUMENT", "VAR_CONTINUE_ZERO_ARGUMENT", "ATTRIBUTES", "NEW_IN_INIT", "COALESCE_ASSIGN", "NAMESPACED_NAME_AS_SINGLE_TOKEN", "REFERENCES_IN_LIST", "ENUM_CLASSES", "NUMERIC_LITERALS_SEPARATORS", "PROPERTY_PROMOTION", "MATCH_EXPRESSION", "LIST_KEYS", "UNION_TYPES", "ARROW_FUNCTION_SYNTAX", "EXPLICIT_OCTAL_LITERAL", "TRAILING_COMMA_IN_PARAMETER_LIST", "CLASS_NAME_LITERAL_ON_OBJECT", "BUILT_IN_WEB_SERVER", "READONLY_PROPERTIES", "NEGATIVE_NUMERIC_INDICES", "ABSTRACT_PRIVATE_TRAIT_METHODS", "THROW_EXPRESSION", "INTERSECTION_TYPES", "TRAILING_COMMA_IN_CLOSURE_USE_LIST", "NAMED_ARGUMENTS", "NULLSAFE_DEREFERENCING", "ITERABLE_TYPE_HINT", "FINAL_CLASS_CONSTANTS", "SPREAD_OPERATOR_IN_ARRAY", "STATIC_RETURN_TYPE_HINT", "RETURN_NEVER", "FIRST_CLASS_CALLABLE", "CONSTANT_SCALAR_EXPRESSIONS", "MIXED_TYPE_HINT", "NON_CAPTURING_CATCHES" ],
        "__value" : [ "default", "edited", "third.party", "Zend", "PEAR", "WordPress", "Joomla!", "CodeIgniter", "PSR1/PSR2", "PSR12", "Laravel", "Symfony2", "Drupal" ]
      }
    }
  }, {
    "id" : "php.config.analysis",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:call.tree.analysis.depth|custom.format.functions|skip.constant.params|unchecked.exceptions}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "php.debug",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "autostart" : [ "{enum#boolean}" ],
        "connect_back" : [ "{enum#boolean}" ],
        "coverage" : [ "{enum#boolean}" ],
        "debugger" : [ "{enum:xdebug|Zend_Debugger|unknown}" ],
        "mode" : [ "{enum:req|jit|unknown}" ],
        "php_version" : [ "{regexp#version}" ],
        "profiler" : [ "{enum#boolean}" ],
        "type" : [ "{enum:zero_config|cli|web_server}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "config", "session.started", "session.ended", "too.much.events", "virtual.file.frame.exists", "navigate.link.clicked", "navigate.link.shown" ]
      }
    }
  }, {
    "id" : "php.debug.validation",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:debug.config.validated}" ],
      "event_data" : {
        "error_count" : [ "{regexp#integer}" ],
        "type" : [ "{enum:SCRIPT|LOCAL|REMOTE|PHPINFO}" ]
      }
    }
  }, {
    "id" : "php.eval.run",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:action.executed}" ],
      "event_data" : {
        "version" : [ "{enum:git.master_jit|git.master|rfc.literals|8.2.1|8.2.0|8.1.14|8.1.13|8.1.12|8.1.11|8.1.10|8.1.9|8.1.8|8.1.7|8.1.6|8.1.5|8.1.4|8.1.3|8.1.2|8.1.1|8.1.0|8.0.27|8.0.26|8.0.25|8.0.24|8.0.23|8.0.22|8.0.21|8.0.20|8.0.19|8.0.18|8.0.17|8.0.16|8.0.15|8.0.14|8.0.13|8.0.12|8.0.11|8.0.10|8.0.9|8.0.8|8.0.7|8.0.6|8.0.5|8.0.3|8.0.2|8.0.1|8.0.0|7.4.33|7.4.32|7.4.30|7.4.29|7.4.28|7.4.27|7.4.26|7.4.25|7.4.24|7.4.23|7.4.22|7.4.21|7.4.20|7.4.19|7.4.18|7.4.16|7.4.15|7.4.14|7.4.13|7.4.12|7.4.11|7.4.10|7.4.9|7.4.8|7.4.7|7.4.6|7.4.5|7.4.4|7.4.3|7.4.2|7.4.1|7.4.0|7.3.33|7.3.32|7.3.31|7.3.30|7.3.29|7.3.28|7.3.27|7.3.26|7.3.25|7.3.24|7.3.23|7.3.22|7.3.21|7.3.20|7.3.19|7.3.18|7.3.17|7.3.16|7.3.15|7.3.14|7.3.13|7.3.12|7.3.11|7.3.10|7.3.9|7.3.8|7.3.7|7.3.6|7.3.5|7.3.4|7.3.3|7.3.2|7.3.1|7.3.0|7.2.34|7.2.33|7.2.32|7.2.31|7.2.30|7.2.29|7.2.28|7.2.27|7.2.26|7.2.25|7.2.24|7.2.23|7.2.22|7.2.21|7.2.20|7.2.19|7.2.18|7.2.17|7.2.16|7.2.15|7.2.14|7.2.13|7.2.12|7.2.11|7.2.10|7.2.9|7.2.8|7.2.7|7.2.6|7.2.5|7.2.4|7.2.3|7.2.2|7.2.1|7.2.0|7.1.33|7.1.32|7.1.31|7.1.30|7.1.29|7.1.28|7.1.27|7.1.26|7.1.25|7.1.24|7.1.23|7.1.22|7.1.21|7.1.20|7.1.19|7.1.18|7.1.17|7.1.16|7.1.15|7.1.14|7.1.13|7.1.12|7.1.11|7.1.10|7.1.9|7.1.8|7.1.7|7.1.6|7.1.5|7.1.4|7.1.3|7.1.2|7.1.1|7.1.0|7.0.33|7.0.32|7.0.31|7.0.30|7.0.29|7.0.28|7.0.27|7.0.26|7.0.25|7.0.24|7.0.23|7.0.22|7.0.21|7.0.20|7.0.19|7.0.18|7.0.17|7.0.16|7.0.15|7.0.14|7.0.13|7.0.12|7.0.11|7.0.10|7.0.9|7.0.8|7.0.7|7.0.6|7.0.5|7.0.4|7.0.3|7.0.2|7.0.1|7.0.0|5.6.40|5.6.39|5.6.38|5.6.37|5.6.36|5.6.35|5.6.34|5.6.33|5.6.32|5.6.31|5.6.30|5.6.29|5.6.28|5.6.27|5.6.26|5.6.25|5.6.24|5.6.23|5.6.22|5.6.21|5.6.20|5.6.19|5.6.18|5.6.17|5.6.16|5.6.15|5.6.14|5.6.13|5.6.12|5.6.11|5.6.10|5.6.9|5.6.8|5.6.7|5.6.6|5.6.5|5.6.4|5.6.3|5.6.2|5.6.1|5.6.0|5.6.40|5.6.39|5.6.38|5.6.37|5.6.36|5.6.35|5.6.34|5.6.33|5.6.32|5.6.31|5.6.30|5.6.29|5.6.28|5.6.27|5.6.26|5.6.25|5.6.24|5.6.23|5.6.22|5.6.21|5.6.20|5.6.19|5.6.18|5.6.17|5.6.16|5.6.15|5.6.14|5.6.13|5.6.12|5.6.11|5.6.10|5.6.9|5.6.8|5.6.7|5.6.6|5.6.5|5.6.4|5.6.3|5.6.2|5.6.1|5.6.0|5.5.38|5.5.37|5.5.36|5.5.35|5.5.34|5.5.33|5.5.32|5.5.31|5.5.30|5.5.29|5.5.28|5.5.27|5.5.26|5.5.25|5.5.24|5.5.23|5.5.22|5.5.21|5.5.20|5.5.19|5.5.18|5.5.17|5.5.16|5.5.15|5.5.14|5.5.13|5.5.12|5.5.11|5.5.10|5.5.9|5.5.8|5.5.7|5.5.6|5.5.5|5.5.4|5.5.3|5.5.2|5.5.1|5.5.0|5.5.38|5.5.37|5.5.36|5.5.35|5.5.34|5.5.33|5.5.32|5.5.31|5.5.30|5.5.29|5.5.28|5.5.27|5.5.26|5.5.25|5.5.24|5.5.23|5.5.22|5.5.21|5.5.20|5.5.19|5.5.18|5.5.17|5.5.16|5.5.15|5.5.14|5.5.13|5.5.12|5.5.11|5.5.10|5.5.9|5.5.8|5.5.7|5.5.6|5.5.5|5.5.4|5.5.3|5.5.2|5.5.1|5.5.0|5.4.45|5.4.44|5.4.43|5.4.42|5.4.41|5.4.40|5.4.39|5.4.38|5.4.37|5.4.36|5.4.35|5.4.34|5.4.33|5.4.32|5.4.31|5.4.30|5.4.29|5.4.28|5.4.27|5.4.26|5.4.25|5.4.24|5.4.23|5.4.22|5.4.21|5.4.20|5.4.19|5.4.18|5.4.17|5.4.16|5.4.15|5.4.14|5.4.13|5.4.12|5.4.11|5.4.10|5.4.9|5.4.8|5.4.7|5.4.6|5.4.5|5.4.4|5.4.3|5.4.2|5.4.1|5.4.0|5.3.29|5.3.28|5.3.27|5.3.26|5.3.25|5.3.24|5.3.23|5.3.22|5.3.21|5.3.20|5.3.19|5.3.18|5.3.17|5.3.16|5.3.15|5.3.14|5.3.13|5.3.12|5.3.11|5.3.10|5.3.9|5.3.8|5.3.7|5.3.6|5.3.5|5.3.4|5.3.3|5.3.2|5.3.1|5.3.0|5.2.17|5.2.16|5.2.15|5.2.14|5.2.13|5.2.12|5.2.11|5.2.10|5.2.9|5.2.8|5.2.7|5.2.6|5.2.5|5.2.4|5.2.3|5.2.2|5.2.1|5.2.0|5.1.6|5.1.5|5.1.4|5.1.3|5.1.2|5.1.1|5.1.0|5.1.6|5.1.5|5.1.4|5.1.3|5.1.2|5.1.1|5.1.0|5.0.5|5.0.4|5.0.3|5.0.2|5.0.1|5.0.0|4.4.9|4.4.8|4.4.7|4.4.6|4.4.5|4.4.4|4.4.3|4.4.2|4.4.1|4.4.0|4.3.11|4.3.10|4.3.9|4.3.8|4.3.7|4.3.6|4.3.5|4.3.4|4.3.3|4.3.2|4.3.1|4.3.0|eol|}", "{regexp#version}" ]
      }
    }
  }, {
    "id" : "php.external.formatters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:type}" ],
      "event_data" : {
        "value" : [ "{enum:PHP_CS_FIXER|PHP_CBF|NO}", "{enum:LARAVEL_PINT}" ]
      }
    }
  }, {
    "id" : "php.extract.class.options",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:dialog.closed}" ],
      "event_data" : {
        "generate_accessors" : [ "{enum#boolean}" ],
        "invoked_explicitly" : [ "{enum#boolean}" ],
        "number_of_members" : [ "{regexp#integer}" ],
        "number_of_preselected_members" : [ "{regexp#integer}" ],
        "number_of_selected_members" : [ "{regexp#integer}" ],
        "refactoring_applied" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "php.extract.method.options",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:dialog.closed}" ],
      "event_data" : {
        "context" : [ "{enum:REFACTORING|DUPLICATE_FUNCTION_INSPECTION|PHP_ARCHITECTURE}" ],
        "fold_parameters" : [ "{enum#boolean}" ],
        "function" : [ "{enum#boolean}" ],
        "generate_doc" : [ "{enum#boolean}" ],
        "output_by_parameter_ref" : [ "{enum#boolean}" ],
        "params_initializer_changed" : [ "{enum#boolean}" ],
        "params_renamed" : [ "{enum#boolean}" ],
        "params_reordered" : [ "{enum#boolean}" ],
        "params_type_changed" : [ "{enum#boolean}" ],
        "refactoring_applied" : [ "{enum#boolean}" ],
        "renamed" : [ "{enum#boolean}" ],
        "replace_break_continue" : [ "{enum#boolean}" ],
        "replace_duplicates" : [ "{enum#boolean}" ],
        "static" : [ "{enum#boolean}" ],
        "visibility_changed" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "php.extract.method.selector",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:selector.shown|element.selected}" ],
      "event_data" : {
        "position" : [ "{regexp#integer}" ],
        "statement" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "php.find.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:select.default.method.target}" ],
      "event_data" : {
        "base_method" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "php.frameworks",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:integration.enabled}" ],
      "event_data" : {
        "framework" : [ "{enum:Drupal|Joomla|WordPress}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "php.import.class.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:php.import.class.invoked|php.import.class.popup.closed|php.import.class.invoked.from.popup}" ],
      "event_data" : {
        "class_reference_place" : [ "{enum:DOC_COMMENT|FIELD_TYPE|PARAMETER_TYPE|RETURN_TYPE|METHOD_CALL|CLASS_CONSTANT_REFERENCE|RETURN_NEW_EXPRESSION|NEW_EXPRESSION|UNKNOWN}", "{enum:IMPLEMENTS_LIST|EXTENDS_LIST}" ],
        "index_of_selected_candidate_in_popup" : [ "{regexp#integer}" ],
        "number_of_candidates" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "php.include.path.custom",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:relative|non.composer|absolute|all}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "php.interpreters.default.name",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:default.name|custom.name|extended.name}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "interpreter_type" : [ "{enum#__interpreter_type}" ],
        "level" : [ "{enum:ide|project}" ]
      },
      "enums" : {
        "__interpreter_type" : [ "third.party", "local", "vagrant", "docker", "docker-compose", "ssh-credentials", "web-deployment" ]
      }
    }
  }, {
    "id" : "php.jb.attributes.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:attribute.usage}" ],
      "event_data" : {
        "name" : [ "{enum:ArrayShape|Deprecated|ExpectedValues|Immutable|Language|NoReturn|Pure}" ]
      }
    }
  }, {
    "id" : "php.meta.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:meta_directives_used}" ],
      "event_data" : {
        "meta_directive" : [ "{enum:pattern|type|elementType}" ]
      }
    }
  }, {
    "id" : "php.move.dnd.refactoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:php.move.succeeded}" ],
      "event_data" : {
        "succeeded_because_of_psr_detection" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "php.move.refactoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:finished|started}" ],
      "event_data" : {
        "invoked_explicitly" : [ "{enum#boolean}" ],
        "is_invoked_explicitly" : [ "{enum#boolean}" ],
        "move_id" : [ "{enum#__move_id}", "{enum:move.unused.instance.method}" ],
        "status" : [ "{enum:succeed|cancelled}" ]
      },
      "enums" : {
        "__move_id" : [ "move.instance.method", "move.static.members", "make.static.then.move", "move.function", "move.class", "move.file.constant", "move.namespace" ]
      }
    }
  }, {
    "id" : "php.new.action",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action_id" : [ "{enum#new_test_actions}" ],
        "directory_was_changed" : [ "{enum#boolean}" ],
        "extension" : [ "{enum#file_extensions}" ],
        "extension_was_changed" : [ "{enum#boolean}" ],
        "file_name_was_changed" : [ "{enum#boolean}" ],
        "framework" : [ "{enum#test_frameworks}" ],
        "implements_table_was_changed" : [ "{enum#boolean}" ],
        "library_was_changed" : [ "{enum#boolean}" ],
        "method_count" : [ "{regexp#integer}" ],
        "methods_table_was_changed" : [ "{enum#boolean}" ],
        "namespace_was_changed" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "show_inherited_members_was_changed" : [ "{enum#boolean}" ],
        "source" : [ "{enum#source}" ],
        "super_fqn_was_changed" : [ "{enum#boolean}" ],
        "target" : [ "{enum#target}" ],
        "template_was_changed" : [ "{enum#boolean}" ],
        "test_target_text_was_changed" : [ "{enum#boolean}" ],
        "type" : [ "{enum:PHP_Class|PHP_Interface|PHP_Trait|custom}", "{enum:PHP Enum}" ],
        "with_custom_vars" : [ "{enum#boolean}" ],
        "with_inherit_member" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "add.new.class", "add.new.class.fields.usage", "add.new.test", "add.new.test.fields.usage", "add.new.file" ],
        "file_extensions" : [ "ctp", "hphp", "inc", "module", "php", "php4", "php5", "phtml" ],
        "new_test_actions" : [ "PHPUnit_Test", "Test", "PhpUnitNewTestFromClass", "PhpNewTest", "CodeceptionNewUnitTestFromClass", "third.party", "{util#class_name}" ],
        "source" : [ "empty", "interface", "trait", "class" ],
        "target" : [ "class", "method", "none" ],
        "test_frameworks" : [ "PHPUnit", "PHPUnit_6+", "PHPSpec", "Codeception_Unit", "Codeception_Functional", "third.party", "PHPUnit_6" ]
      }
    }
  }, {
    "id" : "php.phing",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:build.file}" ]
    }
  }, {
    "id" : "php.rector.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:rector.changes.applied|rector.exec.finished}" ],
      "event_data" : {
        "applied_type" : [ "{enum:ALL|PARTIAL}" ],
        "finish_type" : [ "{enum:SUCCEED|CANCELLED|FAILED}" ]
      }
    }
  }, {
    "id" : "php.rename.constructor",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:rename.to.construct|rename.class}" ]
    }
  }, {
    "id" : "php.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:select}" ],
      "event_data" : {
        "tab" : [ "{enum:INCLUDE_PATH|PHP_RUNTIME|ANALYSIS|COMPOSER_FILES}" ]
      }
    }
  }, {
    "id" : "php.stubs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:all.extensions.default|extension}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "name" : [ "{util#php_stub_extension}" ]
      }
    }
  }, {
    "id" : "php.terminal.customizer",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:php.path.customization.enabled}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "php.test.framework",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:configured.test.framework}" ],
      "event_data" : {
        "config_type" : [ "{enum:CUSTOM_LOADER|PHPUNIT_PHAR|INCLUDE_PATH}" ],
        "framework" : [ "{enum:phpunit|behat|codeception|phpspec}" ],
        "level" : [ "{enum:ide|project}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "php.twig.injection",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:twig.injection.rules|injection.rules.modified}" ],
      "event_data" : {
        "value" : [ "{enum:modified}" ]
      }
    }
  }, {
    "id" : "php.unit.run.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:configured}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "has_custom_options" : [ "{enum#boolean}" ],
        "scope" : [ "{enum:Directory|Method|Class|XML|Pattern}" ],
        "use_paratest" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "php.unit.run.configuration.exec",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:execute}" ],
      "event_data" : {
        "has_custom_options" : [ "{enum#boolean}" ],
        "scope" : [ "{enum:Directory|Method|Class|XML|Pattern}" ],
        "use_paratest" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "php.workshop",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:workshop}" ],
      "event_data" : {
        "distribution" : [ "{enum:docker}" ]
      }
    }
  }, {
    "id" : "platform.installer",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:Update_Manager|Update Manager}" ],
      "event_data" : {
        "value" : [ "{enum:Toolbox_App|Snap|IDE}", "{enum:Other}" ]
      }
    }
  }, {
    "id" : "platform.registry",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:registry|experiment|advanced.setting}" ],
      "event_data" : {
        "id" : [ "{util#registry_key}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "plugin.manager",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "acceptance_result" : [ "{enum:ACCEPTED|DECLINED|AUTO_ACCEPTED}" ],
        "enabled_state" : [ "{enum:ENABLED_ON_DEMAND|ENABLED|DISABLED}" ],
        "group" : [ "{enum:UPDATE|INSTALLING|INSTALLED|SEARCH_INSTALLED|SEARCH|FEATURED|NEW_AND_UPDATED|TOP_DOWNLOADS|TOP_RATED|CUSTOM_REPOSITORY}", "{enum:BUNDLED_UPDATE}", "{enum:SUGGESTED}", "{enum:STAFF_PICKS}", "{enum:INTERNAL}" ],
        "index" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "previous_version" : [ "{util#plugin_version}" ],
        "signature_check_result" : [ "{enum:INVALID_SIGNATURE|MISSING_SIGNATURE|WRONG_SIGNATURE|SUCCESSFUL}" ],
        "source" : [ "{enum:MARKETPLACE|CUSTOM_REPOSITORY|FROM_DISK}" ],
        "states" : [ "{enum:ENABLE_GLOBALLY|ENABLE_FOR_PROJECT|ENABLE_FOR_PROJECT_DISABLE_GLOBALLY|DISABLE_GLOBALLY|DISABLE_FOR_PROJECT|DISABLE_FOR_PROJECT_ENABLE_GLOBALLY}" ]
      },
      "enums" : {
        "__event_id" : [ "plugin.install.third.party.check", "plugin.installation.finished", "plugin.installation.started", "plugin.signature.check.result", "plugin.signature.warning.shown", "plugin.state.changed", "plugin.was.removed", "plugin.search.card.opened" ]
      }
    }
  }, {
    "id" : "plugins",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "unsafe_id" : [ "{enum:io.zhile.research.ide-eval-resetter}" ]
      },
      "enums" : {
        "__event_id" : [ "disabled.plugin", "enabled.not.bundled.plugin", "per.project.disabled", "per.project.enabled", "unsafe.plugin", "migration.installed.plugin" ]
      }
    }
  }, {
    "id" : "plugins.advertiser",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "pluginId" : [ "{util#plugin}" ],
        "plugins" : [ "{util#plugin}" ],
        "source" : [ "{enum:editor|notification|plugins_search|plugins_suggested_group|actions|settings|new_project_wizard|search}" ]
      },
      "enums" : {
        "__event_id" : [ "install.plugins", "ignore.extensions", "open.download.page", "ignore.ultimate", "ignore.unknown.features", "enable.plugins", "configure.plugins", "learn.more", "suggestion.shown", "try.ultimate.toolbox.used", "try.ultimate.installation.started", "try.ultimate.open.started", "try.ultimate.initiated", "try.ultimate.cancelled", "try.ultimate.fallback.used", "try.ultimate.open.finished", "try.ultimate.installation.finished", "try.ultimate.download.started", "try.ultimate.download.finished" ]
      }
    }
  }, {
    "id" : "plugins.dynamic",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#version}", "{util#plugin_version}" ]
      },
      "enums" : {
        "__event_id" : [ "load", "unload.fail", "unload.success", "unload.failure", "load.success" ]
      }
    }
  }, {
    "id" : "polaris.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "editor" : [ "{enum#boolean}" ],
        "index" : [ "{regexp#integer}" ],
        "keyboard" : [ "{enum#boolean}" ],
        "mesto" : [ "{enum:EDITOR|QUICK_DOCUMENTATION|POPUP|TOOL_WINDOW|FILE|FIND_WINDOW}" ],
        "raw" : [ "{enum#boolean}" ],
        "searched" : [ "{enum#boolean}" ],
        "time" : [ "{regexp#integer}" ],
        "type" : [ "{enum:parameter|comparison|next_call}", "{enum:parameters|snippets}", "{enum:raw|generated}", "{enum:completion|snippets}" ]
      },
      "enums" : {
        "__event_id" : [ "inline_shown", "snippet_shown", "parameter_copied", "inline_rejected", "prev_inline", "next_snippet", "suggestion_accepted", "snippet_rejected", "next_inline", "parameter_pasted", "suggestion_shown", "previous_snippet", "snippet_copied", "snippet_pasted", "inline_accepted", "snippet_accepted", "find_usages_in_dumb_mode", "go_to_declaration_in_dumb_mode", "navigated_to_usage", "onboarding_hint_shown" ]
      }
    }
  }, {
    "id" : "polaris.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:recommendations_level|completion_auto_show|parameters_visible|background_snippets}" ],
      "event_data" : {
        "value" : [ "{enum:NOTHING|IMPORTANT|ALL}", "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "pprof.profiler.usages.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:profiler.used}" ],
      "event_data" : {
        "profiler_id" : [ "{util#pprof_profiler_id}" ]
      }
    }
  }, {
    "id" : "problems.view.sessions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:problems.tab.hidden|problems.tab.shown|select.item}" ],
      "event_data" : {
        "duration_seconds" : [ "{regexp#integer}" ],
        "preview" : [ "{enum#boolean}" ],
        "problems_count" : [ "{regexp#integer}" ],
        "scope_tab" : [ "{enum:CurrentFile|ProjectErrors|unknown}", "{enum:ServerSide|Vulnerabilities}" ],
        "severity" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "productivity",
    "builds" : [ ],
    "versions" : [ {
      "from" : "26"
    } ],
    "rules" : {
      "event_id" : [ "{enum:feature.used}" ],
      "event_data" : {
        "group" : [ "{util#productivity_group}", "{util#productivity}" ],
        "id" : [ "{util#productivity}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "profiler.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum:absolute_time|short_time}", "{enum:SHORT_TIME|ABSOLUTE_TIME|DEFAULT}" ]
      },
      "enums" : {
        "__event_id" : [ "tabNameFormat", "filterCalls", "hideLessOnePercents", "showCalleesList", "showPercentsOfRoot", "icicleGraph", "stickyText", "focusOnSearch", "showChart", "showThreadId", "keepSimilarThreadsClose", "filterSlider", "highlightIdeProcesses", "filterDevelopmentTools", "dragToChangeZoom", "sortThreadsByName", "navigateWithSingleClick", "showThreadList" ]
      }
    }
  }, {
    "id" : "profiler.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action_id" : [ "{enum:JumpToSource|FocusInFlameGraph|FocusInCallTree|FocusInMethodList|MethodMergedCallees|MethodBackTraces|CopyFrame|CopyStackUpToFrame|ExpandTree|CollapseTree|ExpandAll|CollapseAll|PresentationSettings|CompareWithBaseline|CreateDiff|ContextMenu|SpeedSearch|RecursionCheckbox|Drag|Scroll|Zoom|FocusOnNode|ZoomIn|ZoomOut|ResetZoom|IcicleGraph|StickyText|NodesFilter|CaptureImage|CopyImage|SaveImage|SearchToolbar|SelectDiffFlameGraphType|ShowPercentOfTotal|ShowPercentOfParent|FilterCalls|HideCallsLessPercent|ShowCalleeList|FocusOnSubtree|ExcludeSubtree|FocusOnCall|ExcludeCall|RecursionCollapse|ShowChart|ZoomIn|ZoomOut|ZoomReset|ZoomBySelectionWithoutModifier|FilterEvents|ThreadList.SortByName|ThreadList.SortByMetric|ThreadList.ShowIds|ThreadList.KeepSimilarThreadsClose|ThreadList.AllThreadsMergedSelected|ThreadList.CustomThreadSelected|ThreadList.SpeedSearch}", "{enum:GetExpandableEventContents|OpenExpandableEventContentsPanel}", "{enum:ExpandGroup|CollapseGroup}", "{enum:ThreadList.Show}" ],
        "anonymous_dump_id" : [ "{regexp#hash}" ],
        "anonymous_id" : [ "{regexp#hash}" ],
        "capture_memory_snapshot_origin" : [ "{enum:WELCOME_SCREEN|CPU_MEMORY_TAB}" ],
        "diff_calc_time" : [ "{regexp#integer}" ],
        "diff_calc_time_ms" : [ "{regexp#integer}" ],
        "diff_flame_graph_type" : [ "{util#class_name}" ],
        "dump_state" : [ "{enum:EMPTY|NON_EMPTY|NOT_EXIST}" ],
        "enabled" : [ "{enum#boolean}" ],
        "folder_state" : [ "{enum:NOT_EXIST|NOT_A_DIRECTORY|NOT_WRITABLE}" ],
        "home_action_id" : [ "{enum:ProcessesList.ShowDevTools|ProcessesList.HighlightIdeProcesses|ProcessesList.EditConfigurations|ProcessesList.SnapshotFolder|Process.LiveCharts|Process.AttachProfiler|Process.MemorySnapshot|Process.ThreadDump|RecentSnapshots.Open.Context|RecentSnapshots.Open.Click|RecentSnapshots.Reveal|RecentSnapshots.Hide.Context|RecentSnapshots.Hide.Click|OpenSnapshot.Button|OpenSnapshot.Hint}" ],
        "id" : [ "{util#run_config_id}" ],
        "input_event" : [ "{util#shortcut}" ],
        "kind" : [ "{enum:ADD|COPY|REMOVE|CHANGE}" ],
        "load_time" : [ "{regexp#integer}" ],
        "load_time_ms" : [ "{regexp#integer}" ],
        "name" : [ "{enum:flameGraph|callTree|methodList}", "{util#profiler_event_id_validator}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "possible_reasons" : [ "{enum:short_session|gradle|duplicate_arguments|incompatible_jdk|jfr_sync_init_failed|jfr_sync_start_failed|stopped_before_flushed|no_data_written}", "{enum:forceful_kill}" ],
        "prev_event_time" : [ "{regexp#integer}" ],
        "prev_event_time_ms" : [ "{regexp#integer}" ],
        "prev_tab_time" : [ "{regexp#integer}" ],
        "prev_tab_time_ms" : [ "{regexp#integer}" ],
        "process_type" : [ "{enum:IDE|IDE_DESCENDANT|EXTERNAL}" ],
        "profiler_configuration_type" : [ "{util#profiler_configuration_type}" ],
        "run_configuration_type" : [ "{util#run_config}" ],
        "run_widget_action_id" : [ "{enum:Widget.StopRecording|Widget.StartRecording|Widget.ShowResults}" ],
        "running_mode" : [ "{enum:RUN|ATTACH}" ],
        "size" : [ "{regexp#integer}" ],
        "snapshot_import_origin" : [ "{enum:RECENT|OPEN_FILE}", "{enum:REOPEN_FROM_WIDGET}" ],
        "snapshot_import_source" : [ "{util#snapshot_import_source_validator}" ],
        "snapshot_size" : [ "{regexp#integer}" ],
        "snapshot_size_bytes" : [ "{regexp#integer}" ],
        "snapshot_type" : [ "{util#profiler_snapshot_type}" ],
        "tab_component_id" : [ "{util#profiler_tab_id_validator}" ],
        "type" : [ "{util#profiler_snapshot_type}" ]
      },
      "enums" : {
        "__event_id" : [ "execute", "start", "snapshot.generated", "attach", "tree.recursion.collapse", "tree.recursion.checkbox", "snapshot.open", "tab.open", "event.open", "configurations.changed", "home.action.invoked", "diff.flamegraph.type.changed", "diff.created", "snapshot.action.invoked", "run.widget.interaction", "bad.snapshot.folder", "profiler.error", "profiler.recoverFromError", "memory.snapshot.generated" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "tab.open",
      "fields" : [ "anonymous_dump_id", "anonymous_id" ]
    }, {
      "event" : "snapshot.action.invoked",
      "fields" : [ "anonymous_dump_id", "anonymous_id" ]
    }, {
      "event" : "event.open",
      "fields" : [ "anonymous_dump_id", "anonymous_id" ]
    } ]
  }, {
    "id" : "project.fs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:case-sensitivity|roots-watched}" ],
      "event_data" : {
        "cs-implicit" : [ "{enum#boolean}" ],
        "cs-project" : [ "{enum#boolean}" ],
        "cs-system" : [ "{enum#boolean}" ],
        "pct-non-watched" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "project.import",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "added_modules" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "linked_projects" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "resolved_dependencies" : [ "{regexp#integer}" ],
        "resolved_dependencies_percent" : [ "{regexp#float}" ],
        "root_projects" : [ "{regexp#integer}" ],
        "submodules_count" : [ "{regexp#integer}" ],
        "system_id" : [ "{enum#build_tools}" ],
        "task_class" : [ "{util#class_name}" ]
      },
      "enums" : {
        "__event_id" : [ "started", "finished", "import_project.finished", "import_project.stage.started", "import_project.stage.finished", "import_project.started", "reapply_model_import_project.started", "import_project.read.started", "import_project.resolve.finished", "resolve_plugins.finished", "import_project.configure.finished", "import_project.configure.started", "import_project.read.finished", "import_project.workspace_import.started", "import_project.workspace_import.finished", "resolve_plugins.started", "import_project.resolve.started", "reapply_model_import_project.finished", "import_project.fast_model_read.started", "import_project.fast_model_read.finished", "import_project.configure_post_process.started", "import_project.configure_post_process.finished" ]
      }
    }
  }, {
    "id" : "project.indexable.files",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:all.indexable.files|content.indexable.files}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "project.intellij.monorepo",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:is.intellij}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "project.structure",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "type" : [ "{enum#__type}" ]
      },
      "enums" : {
        "__event_id" : [ "modules.total", "content.roots.total", "source.roots.total", "excluded.roots.total", "package.prefix", "source.root", "named.scopes.total.local", "named.scopes.total.shared", "project.in.wsl", "unloaded.modules.total", "module.groups.total" ],
        "__type" : [ "cookbooks-root", "java-resource", "java-source", "java-test-resource", "java-test", "kotlin-resource", "kotlin-source", "kotlin-test-resource", "kotlin-test" ]
      }
    }
  }, {
    "id" : "project.view.pane",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:current}" ],
      "event_data" : {
        "class_name" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{regexp#version}", "{util#plugin_version}" ],
        "scope_class_name" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "project.view.pane.changes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:changed}" ],
      "event_data" : {
        "from_class_name" : [ "{util#class_name}" ],
        "from_scope_class_name" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "to_class_name" : [ "{util#class_name}" ],
        "to_scope_class_name" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "project.view.performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:dir.expanded}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "proxy.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:proxy.type}" ],
      "event_data" : {
        "name" : [ "{enum:Auto|Socks|Http}" ]
      }
    }
  }, {
    "id" : "pycharm.promo",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:open.learn.more.page|open.download.page}" ],
      "event_data" : {
        "source" : [ "{enum:go_to_action|new_file|project_wizard|settings}", "{enum:file_preview}" ],
        "topic" : [ "{enum:aicodecompletion|database|dataframe|django|docker|endpoints|javascript|jupyter|plots|remotessh|typescript}" ]
      }
    }
  }, {
    "id" : "python.code.vision",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:usages.clicked}" ],
      "event_data" : {
        "location" : [ "{enum:class|function|method|unknown}" ]
      }
    }
  }, {
    "id" : "python.dataview",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:slicing.applied|data.opened}" ],
      "event_data" : {
        "columns_count" : [ "{regexp#integer}" ],
        "dimensions" : [ "{enum:ONE|TWO|THREE|MULTIPLE|UNKNOWN}" ],
        "rows_count" : [ "{regexp#integer}" ],
        "type" : [ "{enum:ARRAY|DATAFRAME|GEO_DATAFRAME|SERIES|GEO_SERIES|UNKNOWN}" ]
      }
    }
  }, {
    "id" : "python.interpreter.remote",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "Remote_Docker_Compose", "Remote_SSH_Credentials", "Remote_WSL", "Remote_Vagrant", "Remote_Web_Deployment", "Remote_Docker", "local" ]
      }
    }
  }, {
    "id" : "python.namespace.packages.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:namespace.package.apply.in.root.provider|namespace.package.created|namespace.package.mark.or.unmark}" ],
      "event_data" : {
        "is_mark" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "python.new.interpreter.added",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:interpreted.added}" ],
      "event_data" : {
        "executionType" : [ "{enum:local|Remote_Docker|Remote_Docker_Compose|Remote_WSL|Remote_null|third_party|Remote_SSH_Credentials|Remote_Vagrant|Remote_Web_Deployment|Remote_Unknown}" ],
        "interpreterType" : [ "{enum:pipenv|condavenv|virtualenv|regular|poetry}", "{enum:pyenv}" ],
        "python_version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "python.new.project.wizard",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:project.generated|django.admin.selected|suggested.venv.dir|existing.venv}" ],
      "event_data" : {
        "additional.create_git_repo" : [ "{enum#boolean}" ],
        "additional.create_jupyter_sample" : [ "{enum#boolean}" ],
        "additional.create_python_script_sample" : [ "{enum#boolean}" ],
        "django_admin" : [ "{enum#boolean}" ],
        "executionType" : [ "{enum:local|Remote_Docker|Remote_Docker_Compose|Remote_WSL|Remote_null|third_party|Remote_SSH_Credentials|Remote_Vagrant|Remote_Web_Deployment|Remote_Unknown}" ],
        "generator" : [ "{util#class_name}" ],
        "inherit_global_site_package" : [ "{enum#boolean}" ],
        "interpreterType" : [ "{enum:pipenv|condavenv|virtualenv|regular|poetry}", "{enum:pyenv}" ],
        "interpreter_creation_mode" : [ "{enum:simple|custom|not_applicable}" ],
        "make_available_to_all_projects" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "previously_configured" : [ "{enum#boolean}" ],
        "python_version" : [ "{regexp#version}" ],
        "wsl_context" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "python.packages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:python_package_installed|python_packages_installed_in_sdk}" ],
      "event_data" : {
        "executionType" : [ "{enum:local|Remote_Docker|Remote_Docker_Compose|Remote_WSL|Remote_null|third_party|Remote_SSH_Credentials|Remote_Vagrant|Remote_Web_Deployment|Remote_Unknown}" ],
        "interpreterType" : [ "{enum:pyenv}", "{enum:pipenv|condavenv|virtualenv|regular|poetry}" ],
        "lang" : [ "{util#lang}" ],
        "package" : [ "{enum#python_packages}" ],
        "package_version" : [ "{regexp#version}" ],
        "python_implementation" : [ "{enum:PyPy|Jython|Python}" ],
        "python_version" : [ "{regexp#integer}", "{regexp#version}" ]
      }
    }
  }, {
    "id" : "python.packages.in.editor",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:python.packages.used}" ],
      "event_data" : {
        "executionType" : [ "{enum:local|Remote_Docker|Remote_Docker_Compose|Remote_WSL|Remote_null|third_party|Remote_SSH_Credentials|Remote_Vagrant|Remote_Web_Deployment|Remote_Unknown}" ],
        "has_sdk" : [ "{enum#boolean}" ],
        "interpreterType" : [ "{enum:pipenv|condavenv|virtualenv|regular|poetry}", "{enum:pyenv}" ],
        "package" : [ "{enum#python_packages}" ],
        "package_version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "python.packages.toolwindow",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:installed|uninstalled|repositories.changed|details.requested}" ]
    }
  }, {
    "id" : "python.plots",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:interactive.plots.notification.shown|setting.plots.in.tool.window.enabled|interactive.plots.notification.accepted|setting.interactive.plots.enabled}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "executionType" : [ "{enum:local|Remote_Docker|Remote_Docker_Compose|Remote_WSL|Remote_null|third_party|Remote_SSH_Credentials|Remote_Vagrant|Remote_Web_Deployment|Remote_Unknown}" ],
        "interpreterType" : [ "{enum:pipenv|condavenv|virtualenv|regular|poetry}", "{enum:pyenv}" ],
        "lang" : [ "{util#lang}" ],
        "python_implementation" : [ "{enum:PyPy|Jython|Python}" ],
        "python_version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "python.professional",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:django_used|flask_used|app_engine_used|template_engine}" ],
      "event_data" : {
        "executionType" : [ "{enum#__executionType}" ],
        "interpreterType" : [ "{enum:pipenv|condavenv|virtualenv|regular}", "{enum:poetry}", "{enum:pyenv}" ],
        "lang" : [ "{util#lang}" ],
        "py_template_language" : [ "{enum#__py_template_language}" ],
        "python_implementation" : [ "{enum:PyPy|Jython|Python}" ],
        "python_version" : [ "{regexp#integer}", "{regexp#version}" ]
      },
      "enums" : {
        "__executionType" : [ "local", "Remote_Docker", "Remote_Docker_Compose", "Remote_WSL", "Remote_null", "third_party", "Remote_SSH_Credentials", "Remote_Vagrant", "Remote_Web_Deployment", "Remote_Unknown" ],
        "__py_template_language" : [ "DjangoTemplate", "Mako", "Jinja2", "Chameleon", "Web2Py" ]
      }
    }
  }, {
    "id" : "python.run.anything",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:executed}" ],
      "event_data" : {
        "command_type" : [ "{enum:PYTHON|PIP}", "{enum:CONDA}" ]
      }
    }
  }, {
    "id" : "python.scientific",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:matplotlib_in_toolwindow_used|sci_view_used|data_view_toolwindow_used}" ],
      "event_data" : {
        "executionType" : [ "{enum#__executionType}" ],
        "interpreterType" : [ "{enum:pipenv|condavenv|virtualenv|regular}", "{enum:poetry}", "{enum:pyenv}" ],
        "lang" : [ "{util#lang}" ],
        "python_implementation" : [ "{enum:PyPy|Jython|Python}" ],
        "python_version" : [ "{regexp#integer}", "{regexp#version}" ]
      },
      "enums" : {
        "__executionType" : [ "local", "Remote_Docker", "Remote_Docker_Compose", "Remote_WSL", "Remote_null", "third_party", "Remote_SSH_Credentials", "Remote_Vagrant", "Remote_Web_Deployment", "Remote_Unknown" ]
      }
    }
  }, {
    "id" : "python.sdk.addNewEnv",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:condaFromFile.data.confirmed|venvFromFile.data.confirmed}" ],
      "event_data" : {
        "baseSdk" : [ "{enum:BLANK_UNCHANGED|SPECIFIED|CHANGED|UNCHANGED}" ],
        "conda_path" : [ "{enum:BLANK_UNCHANGED|SPECIFIED|CHANGED|UNCHANGED}" ],
        "environmentYml_path" : [ "{enum:BLANK_UNCHANGED|SPECIFIED|CHANGED|UNCHANGED}" ],
        "path" : [ "{enum:BLANK_UNCHANGED|SPECIFIED|CHANGED|UNCHANGED}" ],
        "requirementsTxtOrSetupPy_path" : [ "{enum:BLANK_UNCHANGED|TXT_SPECIFIED|PY_SPECIFIED|OTHER_SPECIFIED|CHANGED_TXT_TO_OTHER|CHANGED_TXT_TO_PY|CHANGED_TXT_TO_TXT|CHANGED_PY_TO_OTHER|CHANGED_PY_TO_PY|CHANGED_PY_TO_TXT|CHANGED_OTHER_TO_OTHER|CHANGED_OTHER_TO_PY|CHANGED_OTHER_TO_TXT|UNCHANGED}" ]
      }
    }
  }, {
    "id" : "python.sdk.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "baseSdk" : [ "{enum:NOT_FILLED|SPECIFIED}" ],
        "conda_path" : [ "{enum:NOT_FILLED|SPECIFIED}" ],
        "dialog_result" : [ "{enum:OK|CANCELLED|SKIPPED}" ],
        "env_result" : [ "{enum:CREATION_FAILURE|DEPS_NOT_FOUND|INSTALLATION_FAILURE|CREATED}", "{enum:LISTING_FAILURE|CREATION_FAILURE|NO_LISTING_DIFFERENCE|AMBIGUOUS_LISTING_DIFFERENCE|NO_BINARY|AMBIGUOUS_BINARIES|CREATED}", "{enum:CREATION_FAILURE|NO_EXECUTABLE|NO_EXECUTABLE_FILE|CREATED}" ],
        "pipenv_path" : [ "{enum:NOT_FILLED|SPECIFIED}" ],
        "source" : [ "{enum:CONFIGURATOR|INSPECTION}" ]
      },
      "enums" : {
        "__event_id" : [ "venv.dialog.closed", "venv.created", "condaEnv.dialog.closed", "condaEnv.created", "pipenv.dialog.closed", "pipenv.created" ]
      }
    }
  }, {
    "id" : "python.sdk.install.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:install.download|install.installation|install.lookup|install.download.win}" ],
      "event_data" : {
        "download_result" : [ "{enum#__download_result}" ],
        "installation_result" : [ "{enum#__installation_result}" ],
        "lookup_result" : [ "{enum:FOUND|NOT_FOUND}" ],
        "os" : [ "{enum:WIN|MAC}", "{enum:Linux|FreeBSD|Other}" ],
        "py_version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__download_result" : [ "EXCEPTION", "SIZE", "CHECKSUM", "CANCELLED", "OK" ],
        "__installation_result" : [ "EXCEPTION", "EXIT_CODE", "TIMEOUT", "CANCELLED", "OK" ]
      }
    }
  }, {
    "id" : "python.sdks",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:python_sdk_used}" ],
      "event_data" : {
        "executionType" : [ "{enum#__executionType}" ],
        "interpreterType" : [ "{enum:pipenv|condavenv|virtualenv|regular}", "{enum:poetry}", "{enum:pyenv}" ],
        "lang" : [ "{util#lang}" ],
        "python_implementation" : [ "{enum:PyPy|Jython|Python}" ],
        "python_version" : [ "{regexp#integer}", "{regexp#version}" ]
      },
      "enums" : {
        "__executionType" : [ "local", "Remote_Docker", "Remote_Docker_Compose", "Remote_WSL", "Remote_null", "third_party", "Remote_SSH_Credentials", "Remote_Vagrant", "Remote_Web_Deployment", "Remote_Unknown" ]
      }
    }
  }, {
    "id" : "python.welcome.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:welcome.project|welcome.script|welcome.projectView|welcome.runConfiguration}" ],
      "event_data" : {
        "project_type" : [ "{enum:NEW|OPENED}" ],
        "project_view_point" : [ "{enum:IMMEDIATELY|FROM_LISTENER}" ],
        "project_view_result" : [ "{enum:EXPANDED|NO_TOOLWINDOW|NO_PANE|NO_TREE}", "{enum:REJECTED}" ],
        "run_configuration_result" : [ "{enum:CREATED|NULL}" ],
        "script_result" : [ "{enum#__script_result}", "{enum:DISABLED_BUT_COULD|DISABLED_AND_COULD_NOT}" ]
      },
      "enums" : {
        "__script_result" : [ "CREATED", "NOT_EMPTY", "NO_VFILE", "NO_PSI", "NO_DOCUMENT" ]
      }
    }
  }, {
    "id" : "qodana.coverage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:input.coverage.loaded|total.coverage.reported|fresh.coverage.reported}" ],
      "event_data" : {
        "fresh_coverage_value" : [ "{regexp#integer}" ],
        "is_fresh_computed" : [ "{enum#boolean}" ],
        "is_total_computed" : [ "{enum#boolean}" ],
        "language" : [ "{enum:JVM|PHP|JavaScript|None|Other}", "{enum:Go|Python}" ],
        "total_coverage_value" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "qodana.inspections",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "activityKind" : [ "{enum:LINTER_EXECUTION|PROJECT_OPENING|PROJECT_CONFIGURATION|PROJECT_ANALYSIS}" ],
        "analyzedCount" : [ "{regexp#integer}" ],
        "duration" : [ "{regexp#integer}" ],
        "filesCount" : [ "{regexp#integer}" ],
        "filetype" : [ "{util#file_type}" ],
        "finish" : [ "{regexp#integer}" ],
        "inspectionId" : [ "{util#inspection_id_rule}" ],
        "kind" : [ "{enum:REFERENCE_SEARCH|GLOBAL_POST_RUN_ACTIVITIES}", "{enum:EXTERNAL_TOOLS_EXECUTION|EXTERNAL_TOOLS_CONFIGURATION}", "{enum:LOCAL|LOCAL_PRIORITY|GLOBAL_SIMPLE|GLOBAL}" ],
        "lowerBound" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "problemsCount" : [ "{regexp#integer}" ],
        "start" : [ "{regexp#integer}" ],
        "threadId" : [ "{regexp#integer}" ],
        "totalCount" : [ "{regexp#integer}" ],
        "upperBound" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "activity.finished", "inspection.finished", "inspection.duration", "inspection.fingerprint", "qodana.activity.finished" ]
      }
    }
  }, {
    "id" : "qodana.plugin",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "ci" : [ "{enum:GITHUB|GITLAB|TEAMCITY}", "{enum#__ci}" ],
        "current_step" : [ "{enum:WelcomeRunQodana|YamlAndRunQodana|EditYamlThenSetupCI|SetupCI}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "is_highlight" : [ "{enum#boolean}" ],
        "is_link" : [ "{enum#boolean}" ],
        "is_received" : [ "{enum#boolean}" ],
        "language" : [ "{enum:JVM|PHP|JavaScript|None|Other}", "{enum:Go|Python}" ],
        "learn_more_source" : [ "{enum:NO_PROJECTS_VIEW|SOUTH_PANEL}", "{enum:PROBLEMS_PANEL_LINK|TOOLTIP}" ],
        "new_step" : [ "{enum:WelcomeRunQodana|YamlAndRunQodana|EditYamlThenSetupCI|SetupCI}" ],
        "panel_action" : [ "{enum:OPEN_QODANA_BROWSER_UI_FROM_BANNER|CLOSE_BANNER|OPEN_WEBSITE_FROM_PROMO}" ],
        "problem_view_navigated_node" : [ "{enum:SEVERITY|INSPECTION_CATEGORY|INSPECTION|MODULE|DIRECTORY|FILE|PROBLEM|OTHER}", "{enum:ROOT}" ],
        "problem_view_selected_node" : [ "{enum:SEVERITY|INSPECTION_CATEGORY|INSPECTION|MODULE|DIRECTORY|FILE|PROBLEM|OTHER}", "{enum:ROOT}" ],
        "problems_count" : [ "{regexp#integer}" ],
        "protocol" : [ "{enum:OPEN_REPORT|SHOW_MARKER}", "{enum:SETUP_CI}" ],
        "publish_cloud" : [ "{enum#boolean}" ],
        "report_type" : [ "{enum:FILE|OPEN_IN_IDE|OPEN_IN_IDE_CLOUD_REPORT|CLOUD|LOCAL_RUN_NOT_PUBLISHED|LOCAL_RUN_PUBLISHED|UNKNOWN|NONE}" ],
        "should_show" : [ "{enum#boolean}" ],
        "source" : [ "{enum:TOOLS_SELECT_SARIF_FILE|OPEN_IN_IDE|CLOUD_HIGHLIGHT_ON_LINK|CLOUD_HIGHLIGHT_NEW_REPORT_APPEARED_NOTIFICATION|REPORT_NOT_AVAILABLE|QODANA_PANEL_CLOSE|QODANA_PANEL_CANCEL_LOADING|TOOLS_LIST|SARIF_FILE}", "{enum:CLOSE_ACTION_PANEL|CLOUD_REFRESH_ACTION_PANEL|RUN_QODANA_DIALOG|EDITOR_INTENTION}", "{enum:CLOUD_AUTO_LOAD_LATEST}", "{enum:PROBLEMS_VIEW_OPEN_REPORT}", "{enum:REFRESH_TOKEN_EXPIRED|TOOLS_LIST|OAUTH_SUCCEEDED|QODANA_SETTINGS_PANEL}", "{enum:PROMO_PANEL|OPEN_IN_IDE_DIALOG}", "{enum:LINK_WINDOW|UNAUTHORIZED|TOOLS_LIST}", "{enum:LINK_VIEW|AUTO_LINK}", "{enum:CLOUD|LOCAL_REPORT|BANNER|TOOLS_LIST}", "{enum:PROBLEMS_VIEW_AUTHORIZED_LINKED|PROBLEMS_VIEW_AUTHORIZED_NOT_LINKED}" ],
        "state" : [ "{enum:FAILED_OPEN_PROJECT|FAILED_CONSTRUCTING_REPORT|SUCCESS}", "{enum:STARTED|SUCCEEDED|CANCELLED|FAILED}" ],
        "tab_state" : [ "{enum:PROMO|ANALYZING|AUTHORIZED|AUTHORIZING|LINKED|LOADING_REPORT|SELECTED_REPORT}", "{enum#__tab_state}" ],
        "tab_state_action" : [ "{enum:ANALYZING|AUTHORIZING|LOADING_REPORT|SELECTED_REPORT|NOT_AUTHORIZED_NO_CI|NOT_AUTHORIZED_CI_PRESENT|AUTHORIZED_NOT_LINKED_NO_CI|AUTHORIZED_NOT_LINKED_PRESENT|AUTHORIZED_LINKED_NO_CI|AUTHORIZED_LINKED_CI_PRESENT|OTHER}" ],
        "transition" : [ "{enum:OPEN|NEXT|PREVIOUS|CLOSE}" ],
        "user_state" : [ "{enum:AUTHORIZED|AUTHORIZING|NOT_AUTHORIZED}" ],
        "with_baseline" : [ "{enum#boolean}" ],
        "wizard" : [ "{enum:RunQodana|YamlAndCI}" ],
        "yaml" : [ "{enum:SAVE|NO_SAVE|ALREADY_PRESENT}" ]
      },
      "enums" : {
        "__ci" : [ "CIRCLECI", "SPACE", "AZURE", "BITBUCKET", "JENKINS" ],
        "__event_id" : [ "highlight_report", "cloud_user_state", "open_in_ide", "cloud_link", "run.dialog.started", "tab.unselected", "tab.selected", "report.data.highlighted", "analysis.step.finished", "setup.ci.finished", "setup.ci.opened", "wizard.dialog.step.finished", "panel.action.executed", "report.with.coverage.received", "problem.view.node.opened", "problem.view.node.navigated", "link.dialog.create.project.pressed", "problem.view.link.project.pressed", "problem.view.login.pressed", "problem.view.learn.more.pressed", "problem.view.run.qodana.pressed" ],
        "__tab_state" : [ "OTHER", "AUTHORIZED_LINKED_CI_PRESENT", "AUTHORIZED_NOT_LINKED_NO_CI", "AUTHORIZED_NOT_LINKED_PRESENT", "NOT_AUTHORIZED_NO_CI", "AUTHORIZED_LINKED_NO_CI", "NOT_AUTHORIZED_CI_PRESENT" ]
      }
    }
  }, {
    "id" : "qodana.plugin.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "fixed" : [ "{regexp#integer}" ],
        "highlighted_report_state" : [ "{enum:SELECTED|LOADING|NOT_SELECTED}" ],
        "is_link" : [ "{enum#boolean}" ],
        "language" : [ "{enum:JVM|PHP|JavaScript|None|Other}", "{enum:Go|Python}" ],
        "missing" : [ "{regexp#integer}" ],
        "report_type" : [ "{enum:FILE|OPEN_IN_IDE|CLOUD|UNKNOWN|NONE}", "{enum:OPEN_IN_IDE_CLOUD_REPORT|LOCAL_RUN_NOT_PUBLISHED|LOCAL_RUN_PUBLISHED}" ],
        "total" : [ "{regexp#integer}" ],
        "user_state" : [ "{enum:AUTHORIZED|AUTHORIZING|NOT_AUTHORIZED}" ]
      },
      "enums" : {
        "__event_id" : [ "link_state", "user_state", "highlighted_report_state", "problems.data.reported", "coverage.in.report.shown" ]
      }
    }
  }, {
    "id" : "r.interpreters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:setup.interpreter}" ],
      "event_data" : {
        "is_conda" : [ "{enum#boolean}" ],
        "suggested" : [ "{regexp:(\\d+\\.?)*\\d+_(true|false)}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "r.workflow",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:call.method.from.console}" ],
      "event_data" : {
        "name" : [ "{enum:install.packages|install_github}" ]
      }
    }
  }, {
    "id" : "rails.new.app.extra.args",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:rails.app.created}" ],
      "event_data" : {
        "extraArg" : [ "{enum:--skip-namespace|--no-skip-namespace|--skip-collision-check|--no-skip-collision-check|-r|--ruby|-m|--template|-d|--database|-G|--skip-git|--no-slip-git|--skip-keeps|--no-skip-keeps|-M|--skip-action-mailer|--no-skip-action-mailer|--skip-action-mailbox|--no-skip-action-mailbox|--skip-action-text|--no-skip-action-text|-O|--skip-active-record|--no-skip-active-record|--skip-active-job|--no-skip-active-job|--skip-active-storage|--no-skip-active-storage|-C|--skip-action-cable|--no-skip-action-cable|-A|--skip-asset-pipeline|--no-skip-asset-pipeline|-a|--asset-pipeline|-J|--skip-javascript|--no-skip-javascript|--skip-hotwire|--no-skip-hotwire|--skip-jbuilder|--no-skip-jbuilder|-T|--skip-test|--no-skip-test|--skip-system-test|--no-skip-system-test|--skip-bootsnap|--no-skip-bootsnap|--dev|--no-dev|--edge|--no-edge|--master|--main|--no-main|--rc|--no-rc|--no-no-rc|--api|--no-api|--minimal|--no-minimal|-j|--javascript|-c|--css|-B|--skip-bundle|--no-skip-bundle|-f|--force|-p|--pretend|--no-pretend|-q|--quite|--no-quiet|-s|--skip|--no-skip|-h|--help|--no-help|-v|--version|--no-version}", "{enum:--webpacker|--webpack|--js}" ],
        "version" : [ "{regexp:(\\d+\\.?)*\\d+}" ]
      }
    }
  }, {
    "id" : "rbs.create.file.from.template",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:created}" ],
      "event_data" : {
        "template" : [ "{enum:RBS Class|RBS Module|RBS Interface|RBS File}" ]
      }
    }
  }, {
    "id" : "rdct.lifecycle",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "client_id" : [ "{regexp#hash}" ],
        "connection_type" : [ "{enum:ws_relay|turn_relay_quic|p2p_quic|direct_tcp|unknown}" ],
        "disconnects_count" : [ "{regexp#integer}" ],
        "duration_minutes" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "guests_count" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "is_unattended" : [ "{enum#boolean}" ],
        "mode" : [ "{enum:Readonly|EditFiles|FullAccess|Custom}" ],
        "parentProductCode" : [ "{enum:|unknown|IU|RM|WS|PS|PY|DS|OC|CL|DB|RD|GO|GW}" ],
        "participants_max" : [ "{regexp#integer}" ],
        "participation_type" : [ "{enum:OneOnOne|Group}" ],
        "permissions.files" : [ "{enum:Readonly|FullAccess}" ],
        "permissions.mode" : [ "{enum:Readonly|EditFiles|FullAccess|Custom}" ],
        "permissions.other_tw" : [ "{enum:Disabled|Readonly|FullAccess}" ],
        "permissions.run" : [ "{enum:Disabled|Readonly|FullAccess}" ],
        "permissions.terminal" : [ "{enum:Disabled|Readonly|Request|FullAccess}" ],
        "permissions_changed.files" : [ "{enum:Readonly|FullAccess}" ],
        "permissions_changed.mode" : [ "{enum:Readonly|EditFiles|FullAccess|Custom}" ],
        "permissions_changed.other_tw" : [ "{enum:Disabled|Readonly|FullAccess}" ],
        "permissions_changed.run" : [ "{enum:Disabled|Readonly|FullAccess}" ],
        "permissions_changed.terminal" : [ "{enum:Disabled|Readonly|Request|FullAccess}" ],
        "permissions_request_result" : [ "{enum:Approved|Declined|Ignored}" ],
        "permissions_requested" : [ "{enum:FULL_ACCESS|EDIT_FILES}" ],
        "ping_direct" : [ "{regexp#integer}" ],
        "ping_ui_thread" : [ "{regexp#integer}" ],
        "place" : [ "{util#place}" ],
        "relay_host" : [ "{regexp:null|codewithme-relay(-staging)?-\\d\\.(europe-north|europe-west|us-east|us-west|af-south|asia-northeast|asia-south|southamerica-east|australia-southeast|cn-north)[0-9-.]{1,3}(gke|eks)(\\.api)?\\.(intellij\\.net|jetbrains\\.com|jetbrains\\.com\\.cn)}" ],
        "session_duration_minutes" : [ "{regexp#integer}" ],
        "session_ended_reason" : [ "{enum:ManualTermination|License|ServerConnectionError|ProjectClosing}" ],
        "session_id" : [ "{regexp#hash}" ],
        "telephony_enabled" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "permissions.changed", "permissions.requested", "screensharing.enabled.finished", "circle.left.click.start", "circle.left.click.stop", "circle.right.click", "editor.following.label.stop", "editor.following.label.resume", "reconnection", "connection.failed", "connected.to.host", "microphone.enabled.started", "voicecall.joined.finished", "permissions.request.finished", "session.finished", "microphone.enabled.finished", "voicecall.joined.started", "screensharing.enabled.started", "enabled.from.action", "camera.enabled.finished", "guest.connected", "disconnected.from.host", "port.forwarding.removed", "leave.call", "transport.disconnected", "guest.disconnected", "guest.ping", "show.call.window", "leave.session", "camera.enabled.started", "show.port.forwarding.window", "session.created", "transport.connected", "port.forwarding.created", "reconnection.failed", "remdev.controller.connected", "cwm.guest.disconnected", "remdev.controller.disconnected", "cwm.guest.connected" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "transport.connected",
      "fields" : [ "client_id", "session_id" ]
    }, {
      "event" : "circle.left.click.start",
      "fields" : [ "client_id", "session_id" ]
    }, {
      "event" : "remdev.controller.connected",
      "fields" : [ "client_id" ]
    }, {
      "event" : "connection.failed",
      "fields" : [ "session_id" ]
    }, {
      "event" : "session.finished",
      "fields" : [ "session_id" ]
    }, {
      "event" : "remdev.controller.disconnected",
      "fields" : [ "client_id" ]
    }, {
      "event" : "session.created",
      "fields" : [ "session_id" ]
    }, {
      "event" : "disconnected.from.host",
      "fields" : [ "client_id", "session_id" ]
    }, {
      "event" : "guest.ping",
      "fields" : [ "client_id", "session_id" ]
    }, {
      "event" : "circle.left.click.stop",
      "fields" : [ "client_id", "session_id" ]
    }, {
      "event" : "cwm.guest.connected",
      "fields" : [ "client_id", "session_id" ]
    }, {
      "event" : "connected.to.host",
      "fields" : [ "client_id", "session_id" ]
    }, {
      "event" : "guest.connected",
      "fields" : [ "client_id", "session_id" ]
    }, {
      "event" : "permissions.request.finished",
      "fields" : [ "client_id", "session_id" ]
    }, {
      "event" : "permissions.requested",
      "fields" : [ "session_id" ]
    }, {
      "event" : "reconnection.failed",
      "fields" : [ "session_id" ]
    }, {
      "event" : "guest.disconnected",
      "fields" : [ "client_id", "session_id" ]
    }, {
      "event" : "port.forwarding.removed",
      "fields" : [ "session_id" ]
    }, {
      "event" : "editor.following.label.stop",
      "fields" : [ "client_id", "session_id" ]
    }, {
      "event" : "permissions.changed",
      "fields" : [ "client_id", "session_id" ]
    }, {
      "event" : "transport.disconnected",
      "fields" : [ "client_id", "session_id" ]
    }, {
      "event" : "circle.right.click",
      "fields" : [ "client_id", "session_id" ]
    }, {
      "event" : "port.forwarding.created",
      "fields" : [ "session_id" ]
    }, {
      "event" : "editor.following.label.resume",
      "fields" : [ "client_id", "session_id" ]
    }, {
      "event" : "cwm.guest.disconnected",
      "fields" : [ "client_id", "session_id" ]
    }, {
      "event" : "reconnection",
      "fields" : [ "session_id" ]
    } ]
  }, {
    "id" : "reactivestreams.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:postfix.completion.used|customized.stackframe.selected|reactor.stream.debugger.used}" ],
      "event_data" : {
        "reactivestreams_implementation" : [ "{enum:Reactor|RxJava}" ]
      }
    }
  }, {
    "id" : "reader.mode",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:see.also.navigation|widget.switched}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "readme.on.start",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:readme.closed}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "refactoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:handler.invoked|executed|usages.searched}" ],
      "event_data" : {
        "cancelled" : [ "{enum#boolean}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "element" : [ "{util#class_name}" ],
        "handler" : [ "{util#class_name}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "processor" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "refactoring.dialog",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:open.in.editor.saved|open.in.editor.shown}" ],
      "event_data" : {
        "class_name" : [ "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "selected" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "remote.sdk.type",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:configured.sdk}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "level" : [ "{enum:ide|project}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "sdk_type" : [ "{enum#__sdk_type}", "{util#sdk_type}", "{util#class_name}" ]
      },
      "enums" : {
        "__sdk_type" : [ "Docker_Compose", "Docker", "Web_Deployment", "Vagrant", "SSH_Credentials", "WSL", "unknown" ]
      }
    }
  }, {
    "id" : "remote.sdk.type.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:PHP_Docker|PHP_Docker_Compose}" ]
    }
  }, {
    "id" : "rename.code.vision",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:clicked}" ]
    }
  }, {
    "id" : "rename.inplace.popup",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:hide|openRenameDialog|settingsChanged|show}" ],
      "event_data" : {
        "changedOnHide" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "linkUsed" : [ "{enum#boolean}" ],
        "search_in_comments" : [ "{enum#boolean}" ],
        "search_in_comments_on_hide" : [ "{enum#boolean}" ],
        "search_in_text_occurrences" : [ "{enum#boolean}" ],
        "search_in_text_occurrences_on_hide" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "rename.refactoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started|executed|reference.processed|local_search_in_comments}" ],
      "event_data" : {
        "lang" : [ "{util#lang}" ],
        "local_include_comments" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "reference_class" : [ "{util#class_name}" ],
        "rename_processor" : [ "{util#class_name}" ],
        "scope_type" : [ "{enum#__scope_type}" ],
        "search_in_comments" : [ "{enum#boolean}" ],
        "search_in_text_occurrences" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__scope_type" : [ "project", "test", "tests", "production", "module", "current file", "current_file", "third.party", "unknown" ]
      }
    }
  }, {
    "id" : "reopen.project.startup.performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:frame.became.interactive|first.ui.shown|frame.became.visible|code.loaded.and.visible.in.editor}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "file_type" : [ "{util#file_type}" ],
        "has_settings" : [ "{enum#boolean}" ],
        "loaded_cached_markup" : [ "{enum#boolean}" ],
        "no_editors_to_open" : [ "{enum#boolean}" ],
        "projects_type" : [ "{enum:Reopened|FromFilesToLoad|FromArgs|Unknown}" ],
        "source_of_selected_editor" : [ "{enum:TextEditor|UnknownEditor|FoundReadmeFile}" ],
        "type" : [ "{enum:Splash|Frame}" ],
        "violation" : [ "{enum:MightBeLightEditProject|MultipleProjects|NoProjectFound|WelcomeScreenShown|OpeningURI|ApplicationStarter|HasOpenedProject}" ]
      }
    }
  }, {
    "id" : "ruby.all.sdks",
    "builds" : [ {
      "from" : "192.4642"
    } ],
    "rules" : {
      "event_id" : [ "{enum:sdks}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "ruby.brakeman.count",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:report|execution.failed}" ],
      "event_data" : {
        "exit_code" : [ "{regexp#integer}" ],
        "high_confidence_warnings_count" : [ "{regexp#integer}" ],
        "low_confidence_warnings_count" : [ "{regexp#integer}" ],
        "medium_confidence_warnings_count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "ruby.brakeman.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:settings}" ],
      "event_data" : {
        "inspection_enabled" : [ "{enum#boolean}" ],
        "level" : [ "{enum:Weak|Medium|High}" ]
      }
    }
  }, {
    "id" : "ruby.bundler.actions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:args.exist}" ],
      "event_data" : {
        "actionName" : [ "{enum:CLEAN|GEM|INIT|INSTALL|LOCK|OUTDATED|PACK|UPDATE}", "{enum:CONFIG}" ],
        "isArgsEmpty" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "ruby.capistrano.count",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:capistrano.task.runFromPopup|capistrano.task.executed}" ],
      "event_data" : {
        "taskName" : [ "{enum:deploy:check|doctor:variables|git:create_release|deploy:symlink:linked_dirs|deploy|deploy:finished|deploy:symlink:shared|doctor:gems|deploy:publishing|deploy:check:make_linked_dirs|deploy:reverted|git:update|doctor:environment|deploy:check:linked_files|git:wrapper|deploy:starting|git:check|install|deploy:log_revision|deploy:symlink:linked_files|deploy:set_current_revision|deploy:finishing|deploy:symlink:release|deploy:started|deploy:revert_release|deploy:updating|deploy:reverting|deploy:check:directories|git:set_current_revision|deploy:finishing_rollback|deploy:cleanup|deploy:check:linked_dirs|git:clone|doctor:servers|deploy:updated|doctor|deploy:rollback|deploy:cleanup_rollback|deploy:published|capify}", "{enum#__taskName}" ]
      },
      "enums" : {
        "__taskName" : [ "hg:create_release", "maintenance:disable", "npm:rebuild", "deploy:migrating", "composer:dump_autoload", "deploy:rollback_release_path", "symfony", "passenger:rvm:after_rvm_path_is_set", "passenger:bundler:hook", "npm:prune", "passenger:chruby:hook", "rvm:hook", "maintenance:enable", "deploy:compile_assets", "deploy:failed", "hg:clone", "svn:clone", "passenger:restart", "symfony:make_console_executable", "rvm:check", "deploy:print_config_variables", "deploy:clobber_assets", "deploy:set_rails_env", "symfony:set_permissions", "rbenv:map_bins", "hg:update", "svn:check", "deploy:set_previous_revision", "deploy:set_permissions:acl", "deploy:set_permissions:chgrp", "deploy:assets:precompile", "npm:install", "symfony:console", "deploy:new_release_path", "deploy:set_symfony_env", "deploy:set_linked_dirs", "symfony:cache:clear", "deploy:assets:backup_manifest", "deploy:rollback_assets", "bundler:map_bins", "composer:self_update", "deploy:normalize_assets", "deploy:migrate", "svn:update", "svn:set_current_revision", "hg:set_current_revision", "chruby:map_bins", "deploy:cleanup_assets", "symfony:create_cache_dir", "default", "bundler:config", "deploy:set_permissions:chown", "symfony:assets:install", "bundler:clean", "rbenv:validate", "deploy:restart", "svn:create_release", "deploy:set_permissions:chmod", "console", "symfony:cache:warmup", "deploy:set_permissions:check", "passenger:rbenv:hook", "load:defaults", "composer:run", "passenger:rvm:hook", "hg:check", "composer:install", "chruby:validate", "passenger:test_with_passenger", "deploy:assets:restore_manifest", "composer:install_executable", "bundler:install" ]
      }
    }
  }, {
    "id" : "ruby.capistrano.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:capistrano.capify.file}" ],
      "event_data" : {
        "hasCapifyFile" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "ruby.completion.provider",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:finished}" ],
      "event_data" : {
        "class" : [ "{util#class_name}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "{enum:COMPLETION_PROVIDER|REFERENCE_WITH_COMPLETION}" ]
      }
    }
  }, {
    "id" : "ruby.create.file.from.template",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:created}" ],
      "event_data" : {
        "template" : [ "{enum:Ruby Class|Ruby Module|Ruby File|Minitest|Minitest Spec|RSpec|TestUnit}" ]
      }
    }
  }, {
    "id" : "ruby.gems.names",
    "builds" : [ {
      "from" : "192.4642"
    } ],
    "rules" : {
      "event_id" : [ "{enum:configured.gem}" ],
      "event_data" : {
        "dependence" : [ "{enum:explicit|optional|implicit}" ],
        "name" : [ "{util#ruby_gem}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "ruby.gemsets.seventh.eighth.percentile",
    "builds" : [ {
      "from" : "193.4386.1",
      "to" : "232"
    } ],
    "rules" : {
      "event_id" : [ "{enum:gemset}" ],
      "event_data" : {
        "type" : [ "{enum:rbenv|rvm}" ],
        "value" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "ruby.not.empty.gemsets",
    "builds" : [ {
      "from" : "193.4386.1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:gemset}" ],
      "event_data" : {
        "average" : [ "{regexp#float}" ],
        "type" : [ "{enum:rbenv|rvm}" ]
      }
    }
  }, {
    "id" : "ruby.project.type",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:project.type}" ],
      "event_data" : {
        "type" : [ "{enum:plain_ruby|rails|gem|motion}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "ruby.run.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "branchCoverage" : [ "{enum#boolean}" ],
        "configurationType" : [ "{util#class_name}" ],
        "count" : [ "{regexp#integer}" ],
        "coverageInTestFolder" : [ "{enum#boolean}" ],
        "doNotUseRCov" : [ "{enum#boolean}" ],
        "forkedProcessesCoverage" : [ "{enum#boolean}" ],
        "nailgunServerEnabled" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "preloadServerType" : [ "{enum:None|DRb|Zeus|Spring}" ],
        "railsServerType" : [ "{enum:default|glassfish|lighttpd|mongrel|passenger|puma|thin|torquebox|trinidad|unicorn|webrick|zeus}" ],
        "rubySdkSourceType" : [ "{enum:PROJECT_OR_MODULE|ALTERNATIVE}" ],
        "usingBundleMode" : [ "{enum:AUTO|ENABLE|DISABLE}" ]
      },
      "enums" : {
        "__event_id" : [ "preloadServer.configured", "rubySdkSourceType.configured", "usingBundleMode.configured", "nailgunServer.configured", "coverage.branchCoverage.configured", "coverage.coverageInTestFolder.configured", "coverage.doNotUseRCov.configured", "coverage.forkedProcessesCoverage.configured", "railsServer.configured" ]
      }
    }
  }, {
    "id" : "ruby.run.configuration.changes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "configurationType" : [ "{util#class_name}" ],
        "newBranchCoverage" : [ "{enum#boolean}" ],
        "newCoverageInTestFolder" : [ "{enum#boolean}" ],
        "newDoNotUseRCov" : [ "{enum#boolean}" ],
        "newForkedProcessesCoverage" : [ "{enum#boolean}" ],
        "newNailgunServerEnabledValue" : [ "{enum#boolean}" ],
        "newSdkSourceType" : [ "{enum:PROJECT_OR_MODULE|ALTERNATIVE}" ],
        "newServerType" : [ "{enum:None|DRb|Zeus|Spring}" ],
        "newUsingBundleMode" : [ "{enum:AUTO|ENABLE|DISABLE}" ],
        "oldBranchCoverage" : [ "{enum#boolean}" ],
        "oldCoverageInTestFolder" : [ "{enum#boolean}" ],
        "oldDoNotUseRCov" : [ "{enum#boolean}" ],
        "oldForkedProcessesCoverage" : [ "{enum#boolean}" ],
        "oldNailgunServerEnabledValue" : [ "{enum#boolean}" ],
        "oldSdkSourceType" : [ "{enum:PROJECT_OR_MODULE|ALTERNATIVE}" ],
        "oldServerType" : [ "{enum:None|DRb|Zeus|Spring}" ],
        "oldUsingBundleMode" : [ "{enum:AUTO|ENABLE|DISABLE}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__event_id" : [ "preloadServerType.changed", "rubySdkSourceType.changed", "nailgunServerEnabled.changed", "usingBundleMode.changed", "coverage.forkedProcessesCoverage.changed", "coverage.branchCoverage.changed", "coverage.coverageInTestFolder.changed", "coverage.doNotUseRCov.changed" ]
      }
    }
  }, {
    "id" : "ruby.sdk.version",
    "builds" : [ {
      "from" : "191.5849"
    } ],
    "rules" : {
      "event_id" : [ "{enum:ruby_sdk}" ],
      "event_data" : {
        "host_type" : [ "{enum#__host_type}" ],
        "ruby_type" : [ "{enum#__ruby_type}" ],
        "version" : [ "{regexp#version}" ],
        "version_manager" : [ "{enum#__version_manager}", "{enum:mise}" ]
      },
      "enums" : {
        "__host_type" : [ "Local", "Missing", "Unknown_Remote", "Unnamed_Remote", "Unknown", "Web_Deployment", "Vagrant", "SSH_Credentials", "WSL", "Docker", "Docker_Compose" ],
        "__ruby_type" : [ "jruby", "ruby", "rbx", "truffleruby", "Missing" ],
        "__version_manager" : [ "asdf", "chruby", "rvm", "rbenv", "system" ]
      }
    }
  }, {
    "id" : "ruby.settings.debugger.type.renderers",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:existing.type.renderers|enabled.type.renderers|disabled.type.renderers}" ],
      "event_data" : {
        "numberDisabledTypeRenderers" : [ "{regexp#integer}" ],
        "numberEnabledTypeRenderers" : [ "{regexp#integer}" ],
        "numberExistingTypeRenderers" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "ruby.version.managers",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:manager}" ],
      "event_data" : {
        "value" : [ "{enum#__value}", "{enum:MiseVersionManagerHandler}" ]
      },
      "enums" : {
        "__value" : [ "RvmVersionManagerHandler", "RubySystemVersionManagerHandler", "RbenvVersionManagerHandler", "ChrubyVersionManagerHandler", "AsdfVersionManagerHandler" ]
      }
    }
  }, {
    "id" : "run.configuration.exec",
    "builds" : [ ],
    "versions" : [ {
      "from" : "24"
    } ],
    "rules" : {
      "event_id" : [ "{enum:started|ui.shown|finished}" ],
      "event_data" : {
        "additional.alternative_jre_version" : [ "{regexp#integer}" ],
        "additional.lang" : [ "{util#lang}" ],
        "additional.launch_settings_command" : [ "{enum:executable|iis|iisexpress|project}" ],
        "additional.node_version_major" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "env_files_count" : [ "{regexp#integer}" ],
        "executor" : [ "{util#run_config_executor}" ],
        "factory" : [ "{util#run_config_factory}", "{util#run_config_id}" ],
        "finish_type" : [ "{enum:FAILED_TO_START|UNKNOWN}", "{enum:TERMINATED}", "{enum:TERMINATED_BY_STOP|TERMINATED_DUE_TO_RERUN}" ],
        "id" : [ "{util#run_config_id}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "is_rerun" : [ "{enum#boolean}" ],
        "is_running_current_file" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "step_id" : [ "{regexp#integer}" ],
        "target" : [ "{util#run_target}" ]
      }
    }
  }, {
    "id" : "run.configuration.type",
    "builds" : [ ],
    "versions" : [ {
      "from" : "5"
    } ],
    "rules" : {
      "event_id" : [ "{enum:configured.in.project|feature.used|total.configurations.registered}" ],
      "event_data" : {
        "activate_before_run" : [ "{enum#boolean}" ],
        "additional.alternative_jre_version" : [ "{regexp#integer}" ],
        "additional.lang" : [ "{util#lang}" ],
        "additional.node_version_major" : [ "{regexp#integer}" ],
        "count" : [ "{regexp#integer}" ],
        "edit_before_run" : [ "{enum#boolean}" ],
        "env_files_count" : [ "{regexp#integer}" ],
        "factory" : [ "{util#run_config_factory}", "{util#run_config_id}" ],
        "featureName" : [ "{util#plugin_info}" ],
        "focus_before_run" : [ "{enum#boolean}" ],
        "id" : [ "{util#run_config_id}" ],
        "parallel" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "shared" : [ "{enum#boolean}" ],
        "target" : [ "{util#run_target}" ],
        "temp_count" : [ "{regexp#integer}" ],
        "temporary" : [ "{enum#boolean}" ],
        "total_count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "run.configuration.ui.interactions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "hint_number" : [ "{regexp#integer}" ],
        "id" : [ "{util#run_config_id}" ],
        "input_event" : [ "{util#shortcut}" ],
        "option_id" : [ "{enum:browser.option.with.javascript.debugger|browser.option.target.browser|browser.option.after.launch|external.system.vm.parameters.fragment}", "{enum:Runtime}", "{enum:Use_Hot_Reload}", "{enum:Roslyn_Target_Project}", "{enum:Extra_mlaunch_Parameters}", "{enum:before.launch.editSettings|before.launch.openToolWindow|beforeRunTasks|commandLineParameters|coverage|doNotBuildBeforeRun|environmentVariables|jrePath|log.monitor|mainClass|module.classpath|redirectInput|runParallel|shorten.command.line|target.project.path|vmParameters|workingDirectory|count|junit.test.kind|repeat|testScope|maven.params.workingDir|maven.params.goals|maven.params.profiles|maven.params.resolveToWorkspace|maven.general.useProjectSettings|maven.general.workOffline|maven.general.produceExceptionErrorMessages|maven.general.usePluginRegistry|maven.general.recursive|maven.general.alwaysUpdateSnapshots|maven.general.threadsEditor|maven.general.outputLevel|maven.general.checksumPolicy|maven.general.failPolicy|maven.general.showDialogWithAdvancedSettings|maven.general.mavenHome|maven.general.settingsFileOverride.checkbox|maven.general.settingsFileOverride.text|maven.general.localRepoOverride.checkbox|maven.general.localRepoOverride.text|maven.runner.useProjectSettings|maven.runner.delegateToMaven|maven.runner.runInBackground|maven.runner.vmParameters|maven.runner.envVariables|maven.runner.jdk|maven.runner.targetJdk|maven.runner.skipTests|maven.runner.properties|Dump_file_path|Exe_path|Program_arguments|Working_directory|Environment_variables|Runtime_arguments|Use_Mono_runtime|Use_external_console|Project|Target_framework|Launch_profile|Open_browser|Application_URL|Launch_URL|IIS_Express_Certificate|Hosting_model|Generate_applicationhost.config|Show_IIS_Express_output|Send_debug_request|Additional_IIS_Express_arguments|Static_method|URL|Session_name|Arguments|Solution_Configuration|Executable_file|Default_arguments|Optional_arguments}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "projectSettingsAvailable" : [ "{enum#boolean}" ],
        "providerClass" : [ "{util#class_name}" ],
        "useProjectSettings" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "modify.run.option", "remove.run.option", "add", "remove", "hints.shown", "option.navigate", "copy", "before.run.task.remove", "before.run.task.add", "before.run.task.edit" ]
      }
    }
  }, {
    "id" : "run.dashboard",
    "builds" : [ {
      "from" : "192.4831"
    } ],
    "rules" : {
      "event_id" : [ "{enum:run.dashboard|added.run.configuration|removed.run.configuration}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "factory" : [ "{util#run_config_factory}" ],
        "id" : [ "{util#run_config_id}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "run.target.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:creation.began|creation.cancelled|creation.succeeded}" ],
      "event_data" : {
        "step_number" : [ "{regexp#integer}" ],
        "type" : [ "{util#run_target}" ]
      }
    }
  }, {
    "id" : "rust.advanced.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:cargo_test_tool_window|macros_maximum_recursion|external_doc_url|convert_json_to_struct}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "is_docs_rs" : [ "{enum#boolean}" ],
        "limit" : [ "{regexp#integer}" ],
        "preference" : [ "{enum:Yes|No|Ask every time}" ]
      }
    }
  }, {
    "id" : "rust.cargo.build",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:error.emitted}" ],
      "event_data" : {
        "error_code" : [ "{regexp:E0\\d{3}}", "{util#rust_error_code_validation_rule}" ]
      }
    }
  }, {
    "id" : "rust.cargo.code.insight",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:version.wrapped}" ]
    }
  }, {
    "id" : "rust.cargo.completion",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:dependency.completed.as.key|dependency.completed.in.header}" ]
    }
  }, {
    "id" : "rust.cargo.sync",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:project.refreshed}" ],
      "event_data" : {
        "build_script_evaluation_status" : [ "{enum:UpToDate|NeedsUpdate|UpdateFailed}" ],
        "is_explicit_reload" : [ "{enum#boolean}" ],
        "rustc_info_status" : [ "{enum:UpToDate|NeedsUpdate|UpdateFailed}" ],
        "stdlib_status" : [ "{enum:UpToDate|NeedsUpdate|UpdateFailed}" ],
        "success" : [ "{enum#boolean}" ],
        "workspace_status" : [ "{enum:UpToDate|NeedsUpdate|UpdateFailed}" ]
      }
    }
  }, {
    "id" : "rust.cfg.switcher",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "file_type" : [ "{enum:RUST|TOML}" ],
        "new_state" : [ "{enum:Enabled|Disabled}" ],
        "value" : [ "{enum:aarch64-apple-darwin|aarch64-apple-ios|aarch64-apple-ios-macabi|aarch64-apple-ios-sim|aarch64-apple-tvos|aarch64-apple-watchos-sim|aarch64-fuchsia|aarch64-kmc-solid_asp3|aarch64-linux-android|aarch64-nintendo-switch-freestanding|aarch64-pc-windows-gnullvm|aarch64-pc-windows-msvc|aarch64-unknown-freebsd|aarch64-unknown-fuchsia|aarch64-unknown-hermit|aarch64-unknown-linux-gnu|aarch64-unknown-linux-gnu_ilp32|aarch64-unknown-linux-musl|aarch64-unknown-linux-ohos|aarch64-unknown-netbsd|aarch64-unknown-none|aarch64-unknown-none-softfloat|aarch64-unknown-nto-qnx710|aarch64-unknown-openbsd|aarch64-unknown-redox|aarch64-unknown-teeos|aarch64-unknown-uefi|aarch64-uwp-windows-msvc|aarch64-wrs-vxworks|aarch64_be-unknown-linux-gnu|aarch64_be-unknown-linux-gnu_ilp32|aarch64_be-unknown-netbsd|arm-linux-androideabi|arm-unknown-linux-gnueabi|arm-unknown-linux-gnueabihf|arm-unknown-linux-musleabi|arm-unknown-linux-musleabihf|arm64_32-apple-watchos|armeb-unknown-linux-gnueabi|armebv7r-none-eabi|armebv7r-none-eabihf|armv4t-none-eabi|armv4t-unknown-linux-gnueabi|armv5te-none-eabi|armv5te-unknown-linux-gnueabi|armv5te-unknown-linux-musleabi|armv5te-unknown-linux-uclibceabi|armv6-unknown-freebsd|armv6-unknown-netbsd-eabihf|armv6k-nintendo-3ds|armv7-linux-androideabi|armv7-sony-vita-newlibeabihf|armv7-unknown-freebsd|armv7-unknown-linux-gnueabi|armv7-unknown-linux-gnueabihf|armv7-unknown-linux-musleabi|armv7-unknown-linux-musleabihf|armv7-unknown-linux-ohos|armv7-unknown-linux-uclibceabi|armv7-unknown-linux-uclibceabihf|armv7-unknown-netbsd-eabihf|armv7-wrs-vxworks-eabihf|armv7a-kmc-solid_asp3-eabi|armv7a-kmc-solid_asp3-eabihf|armv7a-none-eabi|armv7a-none-eabihf|armv7k-apple-watchos|armv7r-none-eabi|armv7r-none-eabihf|armv7s-apple-ios|asmjs-unknown-emscripten|avr-unknown-gnu-atmega328|bpfeb-unknown-none|bpfel-unknown-none|csky-unknown-linux-gnuabiv2|hexagon-unknown-linux-musl|i386-apple-ios|i586-pc-nto-qnx700|i586-pc-windows-msvc|i586-unknown-linux-gnu|i586-unknown-linux-musl|i686-apple-darwin|i686-linux-android|i686-pc-windows-gnu|i686-pc-windows-gnullvm|i686-pc-windows-msvc|i686-unknown-freebsd|i686-unknown-haiku|i686-unknown-hurd-gnu|i686-unknown-linux-gnu|i686-unknown-linux-musl|i686-unknown-netbsd|i686-unknown-openbsd|i686-unknown-uefi|i686-uwp-windows-gnu|i686-uwp-windows-msvc|i686-wrs-vxworks|loongarch64-unknown-linux-gnu|loongarch64-unknown-none|loongarch64-unknown-none-softfloat|m68k-unknown-linux-gnu|mips-unknown-linux-gnu|mips-unknown-linux-musl|mips-unknown-linux-uclibc|mips64-openwrt-linux-musl|mips64-unknown-linux-gnuabi64|mips64-unknown-linux-muslabi64|mips64el-unknown-linux-gnuabi64|mips64el-unknown-linux-muslabi64|mipsel-sony-psp|mipsel-sony-psx|mipsel-unknown-linux-gnu|mipsel-unknown-linux-musl|mipsel-unknown-linux-uclibc|mipsel-unknown-none|mipsisa32r6-unknown-linux-gnu|mipsisa32r6el-unknown-linux-gnu|mipsisa64r6-unknown-linux-gnuabi64|mipsisa64r6el-unknown-linux-gnuabi64|msp430-none-elf|nvptx64-nvidia-cuda|powerpc-unknown-freebsd|powerpc-unknown-linux-gnu|powerpc-unknown-linux-gnuspe|powerpc-unknown-linux-musl|powerpc-unknown-netbsd|powerpc-unknown-openbsd|powerpc-wrs-vxworks|powerpc-wrs-vxworks-spe|powerpc64-ibm-aix|powerpc64-unknown-freebsd|powerpc64-unknown-linux-gnu|powerpc64-unknown-linux-musl|powerpc64-unknown-openbsd|powerpc64-wrs-vxworks|powerpc64le-unknown-freebsd|powerpc64le-unknown-linux-gnu|powerpc64le-unknown-linux-musl|riscv32gc-unknown-linux-gnu|riscv32gc-unknown-linux-musl|riscv32i-unknown-none-elf|riscv32im-unknown-none-elf|riscv32imac-esp-espidf|riscv32imac-unknown-none-elf|riscv32imac-unknown-xous-elf|riscv32imc-esp-espidf|riscv32imc-unknown-none-elf|riscv64-linux-android|riscv64gc-unknown-freebsd|riscv64gc-unknown-fuchsia|riscv64gc-unknown-hermit|riscv64gc-unknown-linux-gnu|riscv64gc-unknown-linux-musl|riscv64gc-unknown-netbsd|riscv64gc-unknown-none-elf|riscv64gc-unknown-openbsd|riscv64imac-unknown-none-elf|s390x-unknown-linux-gnu|s390x-unknown-linux-musl|sparc-unknown-linux-gnu|sparc-unknown-none-elf|sparc64-unknown-linux-gnu|sparc64-unknown-netbsd|sparc64-unknown-openbsd|sparcv9-sun-solaris|thumbv4t-none-eabi|thumbv5te-none-eabi|thumbv6m-none-eabi|thumbv7a-pc-windows-msvc|thumbv7a-uwp-windows-msvc|thumbv7em-none-eabi|thumbv7em-none-eabihf|thumbv7m-none-eabi|thumbv7neon-linux-androideabi|thumbv7neon-unknown-linux-gnueabihf|thumbv7neon-unknown-linux-musleabihf|thumbv8m.base-none-eabi|thumbv8m.main-none-eabi|thumbv8m.main-none-eabihf|wasm32-unknown-emscripten|wasm32-unknown-unknown|wasm32-wasi|wasm32-wasi-preview1-threads|wasm64-unknown-unknown|x86_64-apple-darwin|x86_64-apple-ios|x86_64-apple-ios-macabi|x86_64-apple-tvos|x86_64-apple-watchos-sim|x86_64-fortanix-unknown-sgx|x86_64-fuchsia|x86_64-linux-android|x86_64-pc-nto-qnx710|x86_64-pc-solaris|x86_64-pc-windows-gnu|x86_64-pc-windows-gnullvm|x86_64-pc-windows-msvc|x86_64-sun-solaris|x86_64-unikraft-linux-musl|x86_64-unknown-dragonfly|x86_64-unknown-freebsd|x86_64-unknown-fuchsia|x86_64-unknown-haiku|x86_64-unknown-hermit|x86_64-unknown-illumos|x86_64-unknown-l4re-uclibc|x86_64-unknown-linux-gnu|x86_64-unknown-linux-gnux32|x86_64-unknown-linux-musl|x86_64-unknown-linux-ohos|x86_64-unknown-netbsd|x86_64-unknown-none|x86_64-unknown-openbsd|x86_64-unknown-redox|x86_64-unknown-uefi|x86_64-uwp-windows-gnu|x86_64-uwp-windows-msvc|x86_64-wrs-vxworks|x86_64h-apple-darwin}" ]
      },
      "enums" : {
        "__event_id" : [ "rustc.target.selected", "cargo.feature.toggled", "widget.clicked", "line.marker.clicked", "line.marker.created" ]
      }
    }
  }, {
    "id" : "rust.code.vision",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:author.clicked|usages.clicked|implementations.clicked}" ],
      "event_data" : {
        "location" : [ "{enum:function|struct_item|enum_item|enum_variant|named_field_decl|trait_item|impl_item|type_alias|constant|macro_def|mod_item|unknown}" ]
      }
    }
  }, {
    "id" : "rust.compiler.fixes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:fix.created|fix.applied}" ],
      "event_data" : {
        "error_code" : [ "{regexp:E0\\d{3}}", "{util#rust_error_code_validation_rule}" ]
      }
    }
  }, {
    "id" : "rust.counters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "attachment_type" : [ "{enum:Rust File|Rust File Attached}" ],
        "candiate_modules_count" : [ "{regexp#integer}" ],
        "crate_name" : [ "{enum:rand|serde|serde|log|log|log|log|log|log|clap|futures|regex|regex|lazy_static|uuid|uuid|once_cell|async_trait|bytes|bytes|url|url}" ],
        "duration_seconds" : [ "{regexp#integer}" ],
        "features_exists" : [ "{enum#boolean}" ],
        "file_path" : [ "{regexp#hash}" ],
        "id" : [ "{util#class_name}" ],
        "is_known" : [ "{enum:KNOWN|UNKNOWN}" ],
        "location" : [ "{enum:BANG_MACRO|ATTR_MACRO|NO_MACRO}" ],
        "name" : [ "{enum:syn|rand|libc|rand_core|quote|proc-macro2|cfg-if|serde|autocfg|itoa|unicode-xid|bitflags|getrandom|log|rand_chacha|lazy_static|serde_derive|time|serde_json|base64|memchr|regex|num-traits|parking_lot_core|regex-syntax|cc|smallvec|parking_lot|version_check|ryu|once_cell|strsim|aho-corasick|semver|clap|bytes|hashbrown|digest|crossbeam-utils|lock_api|scopeguard|block-buffer|generic-array|num_cpus|byteorder|textwrap|atty|indexmap|num-integer|mio|percent-encoding|idna|either|pin-project-lite|url|ppv-lite86|tokio|itertools|unicode-width|heck|slab|thiserror|thiserror-impl|futures|ansi_term|unicode-normalization|chrono|memoffset|rustc_version|miniz_oxide|fnv|typenum|unicode-bidi|anyhow|pkg-config|termcolor|env_logger|futures-core|hyper|socket2|tokio-util|toml|futures-util|futures-task|crossbeam-epoch|futures-sink|futures-channel|crossbeam-channel|winapi|thread_local|http|sha2|futures-io|arrayvec|matches|tracing|nom|pin-utils|opaque-debug|tracing-core|httparse|tinyvec|h2|crossbeam-deque|humantime|pin-project|unicode-segmentation|pin-project-internal|crc32fast|nix|remove_dir_all|tempfile|instant|futures-macro|http-body|backtrace|uuid|adler|rustc-demangle|proc-macro-hack|futures-executor|hex|vec_map|mime|want|form_urlencoded|semver-parser|flate2|openssl-sys|ahash|proc-macro-error|serde_urlencoded|try-lock|tinyvec_macros|tokio-macros|wasi|quick-error|walkdir|proc-macro-error-attr|object|spin|same-file|async-trait|sha-1|tower-service|glob|num-bigint|httpdate|encoding_rs|gimli|signal-hook-registry|openssl|rayon|subtle|unicode-ident|hmac|rayon-core|rand_hc|reqwest|cpufeatures|openssl-probe|addr2line|tracing-attributes|linked-hash-map|foreign-types|foreign-types-shared|redox_syscall|which|regex-automata|unicase|paste|synstructure|rustls|static_assertions|native-tls|fastrand|bstr|ipnet|crypto-mac|winapi-x86_64-pc-windows-gnu|winapi-i686-pc-windows-gnu|ring|untrusted|time-macros|dirs|hyper-tls|fixedbitset|sct|webpki|num-rational|petgraph|darling_macro|darling_core|darling|libloading|rand_pcg|block-padding|tracing-subscriber|jobserver|crossbeam-queue|hermit-abi|zeroize|phf_shared|bumpalo|crypto-common|os_str_bytes|siphasher|winapi-util|tokio-rustls|wasm-bindgen|wasm-bindgen-backend|wasm-bindgen-shared|wasm-bindgen-macro|wasm-bindgen-macro-support|yaml-rust|net2|lazycell|stable_deref_trait|dtoa|strum_macros|iovec|num-iter|pest|sharded-slab|proc-macro-crate|num-complex|js-sys|webpki-roots|filetime|rustc-hash|rustversion|mime_guess|shlex|tokio-stream|dirs-sys|miow|strum|phf|rand_xorshift|tracing-log|void|ucd-trie|derive_more|sha1|structopt|libz-sys|ident_case|byte-tools|structopt-derive|bincode|core-foundation-sys|tracing-futures|web-sys|proc-macro-nested|ctor|clap_derive|prost-derive|prost|serde_yaml|matchers|half|csv|phf_generator|num|fake-simd|tokio-native-tls|csv-core|prost-types|core-foundation|scoped-tls|term|failure|vcpkg|bindgen|ordered-float|minimal-lexical|lexical-core|clap_lex|arrayref|failure_derive|windows_x86_64_msvc|convert_case|async-stream|error-chain|maplit|hostname|async-stream-impl|arc-swap|clang-sys|winreg|console|cookie|wasm-bindgen-futures|const_fn|constant_time_eq|cexpr|prost-build|cipher|maybe-uninit|derivative|multimap|bit-vec|hyper-rustls|dirs-sys-next|zstd-sys|signal-hook|windows-sys|schannel|serde_cbor|tower-layer|security-framework|adler32|xml-rs|aes|windows_x86_64_gnu|terminal_size|zstd-safe|windows_i686_msvc|zstd|windows_i686_gnu|security-framework-sys|tower|event-listener|peeking_take_while|windows_aarch64_msvc|dashmap|pest_derive|crunchy|rand_isaac|rand_os|dirs-next|md-5|bitvec|match_cfg|data-encoding|cast|standback|rustls-pemfile|pest_meta|pest_generator|time-macros-impl|vsdb|fxhash|globset|vsdb_derive|vsdbsled|concurrent-queue|rand_jitter|nodrop|phf_codegen|radium|criterion|winapi-build|safemem|utf-8|crossbeam|kernel32-sys|criterion-plot|redox_users|num_threads|pretty_assertions|threadpool|fallible-iterator|colored|tinytemplate|cargo_metadata|cmake|diff|combine|libm|futures-lite|serde_bytes|parking|zeroize_derive|indoc|async-channel|tar|crc|utf8-ranges|waker-fn|pem|bit-set|cache-padded|oorandom|curve25519-dalek|tungstenite|md5|tracing-serde|language-tags|plotters|mio-uds|funty|sha3|iana-time-zone|num-derive|protobuf|lru-cache|rustls-native-certs|wyz|unindent|aead|async-task|difference|bytemuck|Inflector|tap|libgit2-sys|git2|approx|ntapi|tiny-keccak|tonic|tokio-io|memmap2|xattr|trust-dns-proto|doc-comment|ctr|polling|unreachable|fs2|async-io|keccak|universal-hash|pbkdf2|owning_ref|lru|cpuid-bool|signature|float-cmp|tokio-timer|fs_extra|string_cache|backtrace-sys|tokio-executor|plotters-backend|trust-dns-resolver|plotters-svg|tonic-build|enum-as-inner|rustc-serialize|polyval|getopts|serde_with|resolv-conf|ignore|serde_with_macros|precomputed-hash|tempdir|number_prefix|aes-gcm|encode_unicode|tokio-reactor|ghash|new_debug_unreachable|futures-timer|wait-timeout|async-executor|num_enum|num_enum_derive|tokio-tungstenite|zip|async-lock|headers|predicates|errno|tokio-threadpool|png|dyn-clone|prometheus|quick-xml|blocking|home|tokio-tcp|openssl-macros|target-lexicon|tokio-io-timeout|headers-core|serde_repr|atomic-waker|gcc|indicatif|predicates-core|predicates-tree|async-std|curl-sys|pulldown-cmark|ws2_32-sys|paste-impl|hyper-timeout|tokio-current-thread|tokio-sync|notify|inotify|image|io-lifetimes|config|pyo3|cloudabi|hkdf}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "success" : [ "{enum#boolean}" ],
        "template" : [ "{enum:binary|library|wasm|proc_macro|custom}" ],
        "type" : [ "{enum:ITERATOR|AWAIT}", "{enum:UNWRAP}", "{enum:SKIP_UNWRAP}", "{enum:CAPITALIZED_SELF|NOT_CAPITALIZED_SELF}" ]
      },
      "enums" : {
        "__event_id" : [ "new_project_creation", "crate.imported.on.completion", "chained.method.completed", "full.function.parameter.completed", "parentheses.skipped.on.function.completion", "rust.attach.file.quickfix.invoked", "rust.new.file.created", "fix.add.crate.dependency", "toolchain.updated", "cfg.disabled.item.completed", "rust.created.file.attached.to.module", "cargo.reload.disabled.from.balloon", "intention.called", "implement.members.invoked.from.hint", "macro.task.duration", "auto.imports.added", "terminal.path.clicked", "self.prefix.completed", "moved.e0382.value.completed" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "rust.new.file.created",
      "fields" : [ "file_path" ]
    }, {
      "event" : "rust.created.file.attached.to.module",
      "fields" : [ "file_path" ]
    } ]
  }, {
    "id" : "rust.counters.fmt",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "place" : [ "{enum:ON_SAVE|EXPLICITLY}", "{enum:EXPLICIT|IMPLICIT}" ],
        "rustfmt_error_place" : [ "{enum:EXPLICIT|IMPLICIT}" ]
      },
      "enums" : {
        "__event_id" : [ "rustfmt_error_occurred", "rustfmt_enabled_via_promoter", "rustfmt_promoter_shown", "rustfmt_console_opened_via_link", "rustfmt_console_path_clicked" ]
      }
    }
  }, {
    "id" : "rust.crates.local.index",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:prebuilt.local.index.accessed}" ]
    }
  }, {
    "id" : "rust.debug.evaluate.expression",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:evaluated|element.used}" ],
      "event_data" : {
        "debugger_kind" : [ "{enum:GDB|LLDB|Unknown}" ],
        "element" : [ "{enum:MethodCall|InherentImplMethodCall|TraitImplMethodCall|FunctionCall|TypeQualifiedPath|PathToGenericItem|MacroCall|Lambda|UnresolvedReference|Unknown}" ],
        "success" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "rust.error.coverage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:error_coverage}" ],
      "event_data" : {
        "compiler_error_code" : [ "{util#rust_error_code_validation_rule}" ],
        "error_code_matches" : [ "{enum#boolean}" ],
        "error_was_highlighted" : [ "{enum#boolean}" ],
        "file_was_highlighted" : [ "{enum#boolean}" ],
        "highlighted_error_code" : [ "{util#rust_error_code_validation_rule}" ]
      }
    }
  }, {
    "id" : "rust.feedback.counter",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:report.development.kind}" ],
      "event_data" : {
        "kind" : [ "{enum:UNKNOWN|WORK|HOBBY}" ]
      }
    }
  }, {
    "id" : "rust.formatter.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:custom|common}" ],
      "event_data" : {
        "align_ret_type" : [ "{enum#boolean}" ],
        "align_type_params" : [ "{enum#boolean}" ],
        "align_where_bounds" : [ "{enum#boolean}" ],
        "align_where_clause" : [ "{enum#boolean}" ],
        "allow_one_line_match" : [ "{enum#boolean}" ],
        "indent_where_clause" : [ "{enum#boolean}" ],
        "is_default" : [ "{enum#boolean}" ],
        "min_number_of_blanks_between_items" : [ "{regexp#integer}" ],
        "preserve_punctuation" : [ "{enum#boolean}" ],
        "space_around_assoc_type_binding" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "rust.generate.type.from.json.usage",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:pasted.json.converted|json.paste.dialog.remember.choice.result|json.like.text.pasted}" ],
      "event_data" : {
        "result" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "rust.popular.crates.copy.paste",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "crate_name" : [ "{enum:syn|rand|libc|rand_core|quote|proc-macro2|cfg-if|serde|autocfg|itoa|unicode-xid|bitflags|getrandom|log|rand_chacha|lazy_static|serde_derive|time|serde_json|base64|memchr|regex|num-traits|parking_lot_core|regex-syntax|cc|smallvec|parking_lot|version_check|ryu|once_cell|strsim|aho-corasick|semver|clap|bytes|hashbrown|digest|crossbeam-utils|lock_api|scopeguard|block-buffer|generic-array|num_cpus|byteorder|textwrap|atty|indexmap|num-integer|mio|percent-encoding|idna|either|pin-project-lite|url|ppv-lite86|tokio|itertools|unicode-width|heck|slab|thiserror|thiserror-impl|futures|ansi_term|unicode-normalization|chrono|memoffset|rustc_version|miniz_oxide|fnv|typenum|unicode-bidi|anyhow|pkg-config|termcolor|env_logger|futures-core|hyper|socket2|tokio-util|toml|futures-util|futures-task|crossbeam-epoch|futures-sink|futures-channel|crossbeam-channel|winapi|thread_local|http|sha2|futures-io|arrayvec|matches|tracing|nom|pin-utils|opaque-debug|tracing-core|httparse|tinyvec|h2|crossbeam-deque|humantime|pin-project|unicode-segmentation|pin-project-internal|crc32fast|nix|remove_dir_all|tempfile|instant|futures-macro|http-body|backtrace|uuid|adler|rustc-demangle|proc-macro-hack|futures-executor|hex|vec_map|mime|want|form_urlencoded|semver-parser|flate2|openssl-sys|ahash|proc-macro-error|serde_urlencoded|try-lock|tinyvec_macros|tokio-macros|wasi|quick-error|walkdir|proc-macro-error-attr|object|spin|same-file|async-trait|sha-1|tower-service|glob|num-bigint|httpdate|encoding_rs|gimli|signal-hook-registry|openssl|rayon|subtle|unicode-ident|hmac|rayon-core|rand_hc|reqwest|cpufeatures|openssl-probe|addr2line|tracing-attributes|linked-hash-map|foreign-types|foreign-types-shared|redox_syscall|which|regex-automata|unicase|paste|synstructure|rustls|static_assertions|native-tls|fastrand|bstr|ipnet|crypto-mac|winapi-x86_64-pc-windows-gnu|winapi-i686-pc-windows-gnu|ring|untrusted|time-macros|dirs|hyper-tls|fixedbitset|sct|webpki|num-rational|petgraph|darling_macro|darling_core|darling|libloading|rand_pcg|block-padding|tracing-subscriber|jobserver|crossbeam-queue|hermit-abi|zeroize|phf_shared|bumpalo|crypto-common|os_str_bytes|siphasher|winapi-util|tokio-rustls|wasm-bindgen|wasm-bindgen-backend|wasm-bindgen-shared|wasm-bindgen-macro|wasm-bindgen-macro-support|yaml-rust|net2|lazycell|stable_deref_trait|dtoa|strum_macros|iovec|num-iter|pest|sharded-slab|proc-macro-crate|num-complex|js-sys|webpki-roots|filetime|rustc-hash|rustversion|mime_guess|shlex|tokio-stream|dirs-sys|miow|strum|phf|rand_xorshift|tracing-log|void|ucd-trie|derive_more|sha1|structopt|libz-sys|ident_case|byte-tools|structopt-derive|bincode|core-foundation-sys|tracing-futures|web-sys|proc-macro-nested|ctor|clap_derive|prost-derive|prost|serde_yaml|matchers|half|csv|phf_generator|num|fake-simd|tokio-native-tls|csv-core|prost-types|core-foundation|scoped-tls|term|failure|vcpkg|bindgen|ordered-float|minimal-lexical|lexical-core|clap_lex|arrayref|failure_derive|windows_x86_64_msvc|convert_case|async-stream|error-chain|maplit|hostname|async-stream-impl|arc-swap|clang-sys|winreg|console|cookie|wasm-bindgen-futures|const_fn|constant_time_eq|cexpr|prost-build|cipher|maybe-uninit|derivative|multimap|bit-vec|hyper-rustls|dirs-sys-next|zstd-sys|signal-hook|windows-sys|schannel|serde_cbor|tower-layer|security-framework|adler32|xml-rs|aes|windows_x86_64_gnu|terminal_size|zstd-safe|windows_i686_msvc|zstd|windows_i686_gnu|security-framework-sys|tower|event-listener|peeking_take_while|windows_aarch64_msvc|dashmap|pest_derive|crunchy|rand_isaac|rand_os|dirs-next|md-5|bitvec|match_cfg|data-encoding|cast|standback|rustls-pemfile|pest_meta|pest_generator|time-macros-impl|vsdb|fxhash|globset|vsdb_derive|vsdbsled|concurrent-queue|rand_jitter|nodrop|phf_codegen|radium|criterion|winapi-build|safemem|utf-8|crossbeam|kernel32-sys|criterion-plot|redox_users|num_threads|pretty_assertions|threadpool|fallible-iterator|colored|tinytemplate|cargo_metadata|cmake|diff|combine|libm|futures-lite|serde_bytes|parking|zeroize_derive|indoc|async-channel|tar|crc|utf8-ranges|waker-fn|pem|bit-set|cache-padded|oorandom|curve25519-dalek|tungstenite|md5|tracing-serde|language-tags|plotters|mio-uds|funty|sha3|iana-time-zone|num-derive|protobuf|lru-cache|rustls-native-certs|wyz|unindent|aead|async-task|difference|bytemuck|Inflector|tap|libgit2-sys|git2|approx|ntapi|tiny-keccak|tonic|tokio-io|memmap2|xattr|trust-dns-proto|doc-comment|ctr|polling|unreachable|fs2|async-io|keccak|universal-hash|pbkdf2|owning_ref|lru|cpuid-bool|signature|float-cmp|tokio-timer|fs_extra|string_cache|backtrace-sys|tokio-executor|plotters-backend|trust-dns-resolver|plotters-svg|tonic-build|enum-as-inner|rustc-serialize|polyval|getopts|serde_with|resolv-conf|ignore|serde_with_macros|precomputed-hash|tempdir|number_prefix|aes-gcm|encode_unicode|tokio-reactor|ghash|new_debug_unreachable|futures-timer|wait-timeout|async-executor|num_enum|num_enum_derive|tokio-tungstenite|zip|async-lock|headers|predicates|errno|tokio-threadpool|png|dyn-clone|prometheus|quick-xml|blocking|home|tokio-tcp|openssl-macros|target-lexicon|tokio-io-timeout|headers-core|serde_repr|atomic-waker|gcc|indicatif|predicates-core|predicates-tree|async-std|curl-sys|pulldown-cmark|ws2_32-sys|paste-impl|hyper-timeout|tokio-current-thread|tokio-sync|notify|inotify|image|io-lifetimes|config|pyo3|cloudabi|hkdf}" ]
      },
      "enums" : {
        "__event_id" : [ "dialog.always.add", "dialog.ok", "dialog.created", "dialog.cancel", "dialog.never.add" ]
      }
    }
  }, {
    "id" : "rust.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "build_script_dependency" : [ "{regexp#integer}" ],
        "build_script_workspace" : [ "{regexp#integer}" ],
        "count" : [ "{regexp#integer}" ],
        "dependencies" : [ "{enum:2015|2018|2021}", "{enum:2024}" ],
        "dependency" : [ "{regexp#integer}" ],
        "direct_dependency" : [ "{regexp#integer}" ],
        "name" : [ "{enum:syn|rand|libc|rand_core|quote|proc-macro2|cfg-if|serde|autocfg|itoa|unicode-xid|bitflags|getrandom|log|rand_chacha|lazy_static|serde_derive|time|serde_json|base64|memchr|regex|num-traits|parking_lot_core|regex-syntax|cc|smallvec|parking_lot|version_check|ryu|once_cell|strsim|aho-corasick|semver|clap|bytes|hashbrown|digest|crossbeam-utils|lock_api|scopeguard|block-buffer|generic-array|num_cpus|byteorder|textwrap|atty|indexmap|num-integer|mio|percent-encoding|idna|either|pin-project-lite|url|ppv-lite86|tokio|itertools|unicode-width|heck|slab|thiserror|thiserror-impl|futures|ansi_term|unicode-normalization|chrono|memoffset|rustc_version|miniz_oxide|fnv|typenum|unicode-bidi|anyhow|pkg-config|termcolor|env_logger|futures-core|hyper|socket2|tokio-util|toml|futures-util|futures-task|crossbeam-epoch|futures-sink|futures-channel|crossbeam-channel|winapi|thread_local|http|sha2|futures-io|arrayvec|matches|tracing|nom|pin-utils|opaque-debug|tracing-core|httparse|tinyvec|h2|crossbeam-deque|humantime|pin-project|unicode-segmentation|pin-project-internal|crc32fast|nix|remove_dir_all|tempfile|instant|futures-macro|http-body|backtrace|uuid|adler|rustc-demangle|proc-macro-hack|futures-executor|hex|vec_map|mime|want|form_urlencoded|semver-parser|flate2|openssl-sys|ahash|proc-macro-error|serde_urlencoded|try-lock|tinyvec_macros|tokio-macros|wasi|quick-error|walkdir|proc-macro-error-attr|object|spin|same-file|async-trait|sha-1|tower-service|glob|num-bigint|httpdate|encoding_rs|gimli|signal-hook-registry|openssl|rayon|subtle|unicode-ident|hmac|rayon-core|rand_hc|reqwest|cpufeatures|openssl-probe|addr2line|tracing-attributes|linked-hash-map|foreign-types|foreign-types-shared|redox_syscall|which|regex-automata|unicase|paste|synstructure|rustls|static_assertions|native-tls|fastrand|bstr|ipnet|crypto-mac|winapi-x86_64-pc-windows-gnu|winapi-i686-pc-windows-gnu|ring|untrusted|time-macros|dirs|hyper-tls|fixedbitset|sct|webpki|num-rational|petgraph|darling_macro|darling_core|darling|libloading|rand_pcg|block-padding|tracing-subscriber|jobserver|crossbeam-queue|hermit-abi|zeroize|phf_shared|bumpalo|crypto-common|os_str_bytes|siphasher|winapi-util|tokio-rustls|wasm-bindgen|wasm-bindgen-backend|wasm-bindgen-shared|wasm-bindgen-macro|wasm-bindgen-macro-support|yaml-rust|net2|lazycell|stable_deref_trait|dtoa|strum_macros|iovec|num-iter|pest|sharded-slab|proc-macro-crate|num-complex|js-sys|webpki-roots|filetime|rustc-hash|rustversion|mime_guess|shlex|tokio-stream|dirs-sys|miow|strum|phf|rand_xorshift|tracing-log|void|ucd-trie|derive_more|sha1|structopt|libz-sys|ident_case|byte-tools|structopt-derive|bincode|core-foundation-sys|tracing-futures|web-sys|proc-macro-nested|ctor|clap_derive|prost-derive|prost|serde_yaml|matchers|half|csv|phf_generator|num|fake-simd|tokio-native-tls|csv-core|prost-types|core-foundation|scoped-tls|term|failure|vcpkg|bindgen|ordered-float|minimal-lexical|lexical-core|clap_lex|arrayref|failure_derive|windows_x86_64_msvc|convert_case|async-stream|error-chain|maplit|hostname|async-stream-impl|arc-swap|clang-sys|winreg|console|cookie|wasm-bindgen-futures|const_fn|constant_time_eq|cexpr|prost-build|cipher|maybe-uninit|derivative|multimap|bit-vec|hyper-rustls|dirs-sys-next|zstd-sys|signal-hook|windows-sys|schannel|serde_cbor|tower-layer|security-framework|adler32|xml-rs|aes|windows_x86_64_gnu|terminal_size|zstd-safe|windows_i686_msvc|zstd|windows_i686_gnu|security-framework-sys|tower|event-listener|peeking_take_while|windows_aarch64_msvc|dashmap|pest_derive|crunchy|rand_isaac|rand_os|dirs-next|md-5|bitvec|match_cfg|data-encoding|cast|standback|rustls-pemfile|pest_meta|pest_generator|time-macros-impl|vsdb|fxhash|globset|vsdb_derive|vsdbsled|concurrent-queue|rand_jitter|nodrop|phf_codegen|radium|criterion|winapi-build|safemem|utf-8|crossbeam|kernel32-sys|criterion-plot|redox_users|num_threads|pretty_assertions|threadpool|fallible-iterator|colored|tinytemplate|cargo_metadata|cmake|diff|combine|libm|futures-lite|serde_bytes|parking|zeroize_derive|indoc|async-channel|tar|crc|utf8-ranges|waker-fn|pem|bit-set|cache-padded|oorandom|curve25519-dalek|tungstenite|md5|tracing-serde|language-tags|plotters|mio-uds|funty|sha3|iana-time-zone|num-derive|protobuf|lru-cache|rustls-native-certs|wyz|unindent|aead|async-task|difference|bytemuck|Inflector|tap|libgit2-sys|git2|approx|ntapi|tiny-keccak|tonic|tokio-io|memmap2|xattr|trust-dns-proto|doc-comment|ctr|polling|unreachable|fs2|async-io|keccak|universal-hash|pbkdf2|owning_ref|lru|cpuid-bool|signature|float-cmp|tokio-timer|fs_extra|string_cache|backtrace-sys|tokio-executor|plotters-backend|trust-dns-resolver|plotters-svg|tonic-build|enum-as-inner|rustc-serialize|polyval|getopts|serde_with|resolv-conf|ignore|serde_with_macros|precomputed-hash|tempdir|number_prefix|aes-gcm|encode_unicode|tokio-reactor|ghash|new_debug_unreachable|futures-timer|wait-timeout|async-executor|num_enum|num_enum_derive|tokio-tungstenite|zip|async-lock|headers|predicates|errno|tokio-threadpool|png|dyn-clone|prometheus|quick-xml|blocking|home|tokio-tcp|openssl-macros|target-lexicon|tokio-io-timeout|headers-core|serde_repr|atomic-waker|gcc|indicatif|predicates-core|predicates-tree|async-std|curl-sys|pulldown-cmark|ws2_32-sys|paste-impl|hyper-timeout|tokio-current-thread|tokio-sync|notify|inotify|image|io-lifetimes|config|pyo3|cloudabi|hkdf|cloudabi}" ],
        "proc_macro_dependency" : [ "{regexp#integer}" ],
        "proc_macro_workspace" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#version}" ],
        "workspace" : [ "{regexp#integer}", "{enum:2015|2018|2021}", "{enum:2024}" ]
      },
      "enums" : {
        "__event_id" : [ "cargo_projects", "compile_time_targets", "packages", "editions", "dependency" ]
      }
    }
  }, {
    "id" : "rust.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "auto_show_errors_in_editor" : [ "{enum#boolean}" ],
        "channel" : [ "{enum:[default]|stable|beta|nightly|dev}" ],
        "compile_all_targets" : [ "{enum#boolean}" ],
        "doctest_injection" : [ "{enum#boolean}" ],
        "enabled" : [ "{enum#boolean}" ],
        "macro_expansion_engine" : [ "{enum:disabled|old|new}" ],
        "offline" : [ "{enum#boolean}" ],
        "run_on_fly" : [ "{enum#boolean}" ],
        "run_on_save" : [ "{enum#boolean}" ],
        "rustc_target" : [ "{enum:aarch64-apple-darwin|aarch64-apple-ios|aarch64-apple-ios-macabi|aarch64-apple-ios-sim|aarch64-apple-tvos|aarch64-apple-watchos-sim|aarch64-fuchsia|aarch64-kmc-solid_asp3|aarch64-linux-android|aarch64-nintendo-switch-freestanding|aarch64-pc-windows-gnullvm|aarch64-pc-windows-msvc|aarch64-unknown-freebsd|aarch64-unknown-fuchsia|aarch64-unknown-hermit|aarch64-unknown-linux-gnu|aarch64-unknown-linux-gnu_ilp32|aarch64-unknown-linux-musl|aarch64-unknown-linux-ohos|aarch64-unknown-netbsd|aarch64-unknown-none|aarch64-unknown-none-softfloat|aarch64-unknown-nto-qnx710|aarch64-unknown-openbsd|aarch64-unknown-redox|aarch64-unknown-teeos|aarch64-unknown-uefi|aarch64-uwp-windows-msvc|aarch64-wrs-vxworks|aarch64_be-unknown-linux-gnu|aarch64_be-unknown-linux-gnu_ilp32|aarch64_be-unknown-netbsd|arm-linux-androideabi|arm-unknown-linux-gnueabi|arm-unknown-linux-gnueabihf|arm-unknown-linux-musleabi|arm-unknown-linux-musleabihf|arm64_32-apple-watchos|armeb-unknown-linux-gnueabi|armebv7r-none-eabi|armebv7r-none-eabihf|armv4t-none-eabi|armv4t-unknown-linux-gnueabi|armv5te-none-eabi|armv5te-unknown-linux-gnueabi|armv5te-unknown-linux-musleabi|armv5te-unknown-linux-uclibceabi|armv6-unknown-freebsd|armv6-unknown-netbsd-eabihf|armv6k-nintendo-3ds|armv7-linux-androideabi|armv7-sony-vita-newlibeabihf|armv7-unknown-freebsd|armv7-unknown-linux-gnueabi|armv7-unknown-linux-gnueabihf|armv7-unknown-linux-musleabi|armv7-unknown-linux-musleabihf|armv7-unknown-linux-ohos|armv7-unknown-linux-uclibceabi|armv7-unknown-linux-uclibceabihf|armv7-unknown-netbsd-eabihf|armv7-wrs-vxworks-eabihf|armv7a-kmc-solid_asp3-eabi|armv7a-kmc-solid_asp3-eabihf|armv7a-none-eabi|armv7a-none-eabihf|armv7k-apple-watchos|armv7r-none-eabi|armv7r-none-eabihf|armv7s-apple-ios|asmjs-unknown-emscripten|avr-unknown-gnu-atmega328|bpfeb-unknown-none|bpfel-unknown-none|csky-unknown-linux-gnuabiv2|hexagon-unknown-linux-musl|i386-apple-ios|i586-pc-nto-qnx700|i586-pc-windows-msvc|i586-unknown-linux-gnu|i586-unknown-linux-musl|i686-apple-darwin|i686-linux-android|i686-pc-windows-gnu|i686-pc-windows-gnullvm|i686-pc-windows-msvc|i686-unknown-freebsd|i686-unknown-haiku|i686-unknown-hurd-gnu|i686-unknown-linux-gnu|i686-unknown-linux-musl|i686-unknown-netbsd|i686-unknown-openbsd|i686-unknown-uefi|i686-uwp-windows-gnu|i686-uwp-windows-msvc|i686-wrs-vxworks|loongarch64-unknown-linux-gnu|loongarch64-unknown-none|loongarch64-unknown-none-softfloat|m68k-unknown-linux-gnu|mips-unknown-linux-gnu|mips-unknown-linux-musl|mips-unknown-linux-uclibc|mips64-openwrt-linux-musl|mips64-unknown-linux-gnuabi64|mips64-unknown-linux-muslabi64|mips64el-unknown-linux-gnuabi64|mips64el-unknown-linux-muslabi64|mipsel-sony-psp|mipsel-sony-psx|mipsel-unknown-linux-gnu|mipsel-unknown-linux-musl|mipsel-unknown-linux-uclibc|mipsel-unknown-none|mipsisa32r6-unknown-linux-gnu|mipsisa32r6el-unknown-linux-gnu|mipsisa64r6-unknown-linux-gnuabi64|mipsisa64r6el-unknown-linux-gnuabi64|msp430-none-elf|nvptx64-nvidia-cuda|powerpc-unknown-freebsd|powerpc-unknown-linux-gnu|powerpc-unknown-linux-gnuspe|powerpc-unknown-linux-musl|powerpc-unknown-netbsd|powerpc-unknown-openbsd|powerpc-wrs-vxworks|powerpc-wrs-vxworks-spe|powerpc64-ibm-aix|powerpc64-unknown-freebsd|powerpc64-unknown-linux-gnu|powerpc64-unknown-linux-musl|powerpc64-unknown-openbsd|powerpc64-wrs-vxworks|powerpc64le-unknown-freebsd|powerpc64le-unknown-linux-gnu|powerpc64le-unknown-linux-musl|riscv32gc-unknown-linux-gnu|riscv32gc-unknown-linux-musl|riscv32i-unknown-none-elf|riscv32im-unknown-none-elf|riscv32imac-esp-espidf|riscv32imac-unknown-none-elf|riscv32imac-unknown-xous-elf|riscv32imc-esp-espidf|riscv32imc-unknown-none-elf|riscv64-linux-android|riscv64gc-unknown-freebsd|riscv64gc-unknown-fuchsia|riscv64gc-unknown-hermit|riscv64gc-unknown-linux-gnu|riscv64gc-unknown-linux-musl|riscv64gc-unknown-netbsd|riscv64gc-unknown-none-elf|riscv64gc-unknown-openbsd|riscv64imac-unknown-none-elf|s390x-unknown-linux-gnu|s390x-unknown-linux-musl|sparc-unknown-linux-gnu|sparc-unknown-none-elf|sparc64-unknown-linux-gnu|sparc64-unknown-netbsd|sparc64-unknown-openbsd|sparcv9-sun-solaris|thumbv4t-none-eabi|thumbv5te-none-eabi|thumbv6m-none-eabi|thumbv7a-pc-windows-msvc|thumbv7a-uwp-windows-msvc|thumbv7em-none-eabi|thumbv7em-none-eabihf|thumbv7m-none-eabi|thumbv7neon-linux-androideabi|thumbv7neon-unknown-linux-gnueabihf|thumbv7neon-unknown-linux-musleabihf|thumbv8m.base-none-eabi|thumbv8m.main-none-eabi|thumbv8m.main-none-eabihf|wasm32-unknown-emscripten|wasm32-unknown-unknown|wasm32-wasi|wasm32-wasi-preview1-threads|wasm64-unknown-unknown|x86_64-apple-darwin|x86_64-apple-ios|x86_64-apple-ios-macabi|x86_64-apple-tvos|x86_64-apple-watchos-sim|x86_64-fortanix-unknown-sgx|x86_64-fuchsia|x86_64-linux-android|x86_64-pc-nto-qnx710|x86_64-pc-solaris|x86_64-pc-windows-gnu|x86_64-pc-windows-gnullvm|x86_64-pc-windows-msvc|x86_64-sun-solaris|x86_64-unikraft-linux-musl|x86_64-unknown-dragonfly|x86_64-unknown-freebsd|x86_64-unknown-fuchsia|x86_64-unknown-haiku|x86_64-unknown-hermit|x86_64-unknown-illumos|x86_64-unknown-l4re-uclibc|x86_64-unknown-linux-gnu|x86_64-unknown-linux-gnux32|x86_64-unknown-linux-musl|x86_64-unknown-linux-ohos|x86_64-unknown-netbsd|x86_64-unknown-none|x86_64-unknown-openbsd|x86_64-unknown-redox|x86_64-unknown-uefi|x86_64-uwp-windows-gnu|x86_64-uwp-windows-msvc|x86_64-wrs-vxworks|x86_64h-apple-darwin}" ],
        "tool" : [ "{enum:cargo check|clippy}" ],
        "type" : [ "{enum:ALL|SELECTIVE|NONE}" ]
      },
      "enums" : {
        "__event_id" : [ "rustfmt", "project", "external_linter", "cargo", "auto_reload" ]
      }
    }
  }, {
    "id" : "rust.settings.interaction",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "success" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "install.rustup.started", "install.rustup.finished", "install.download.stdlib.finished", "install.download.stdlib.started", "install.rustup.amend.shell.profile.failed" ]
      }
    }
  }, {
    "id" : "rust.toolchain",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:compiler|rustup|type}" ],
      "event_data" : {
        "channel" : [ "{enum#channel}" ],
        "host_target" : [ "{enum#host_target}" ],
        "type" : [ "{enum#type}" ],
        "used" : [ "{enum#boolean}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "channel" : [ "stable", "beta", "nightly", "dev", "[default]" ],
        "host_target" : [ "i686-pc-windows-gnu", "i686-pc-windows-msvc", "i686-unknown-linux-gnu", "x86_64-apple-darwin", "x86_64-pc-windows-gnu", "x86_64-pc-windows-msvc", "x86_64-unknown-linux-gnu", "aarch64-unknown-linux-gnu", "aarch64-apple-darwin", "aarch64-pc-windows-msvc" ],
        "type" : [ "local", "wsl", "none", "other" ]
      }
    }
  }, {
    "id" : "scala.actions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "optimize.imports", "convert.javatext", "desugar.code", "compiler.inc.type.set.sbt", "show.implicit.parameters", "sc.file.set.ammonite", "rearrange", "type.info", "createFromUsage", "worksheet", "sc.file.set.worksheet", "sc.file.set.auto", "overrideImplement", "go.to.implicit.conversion", "compiler.inc.type.set.idea", "structure.view", "x-ray.mode" ]
      }
    }
  }, {
    "id" : "scala.annotator",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "file.without.type.aware.annotated", "structural.type", "file.with.type.aware.annotated", "collection.pack.highlighting", "macro.definition", "existential.type" ]
      }
    }
  }, {
    "id" : "scala.debugger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "lambda.breakpoint", "evaluator", "debugger", "compiling.evaluator", "smart.step.into" ]
      }
    }
  }, {
    "id" : "scala.js",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:dynamic.completion|dynamic.resolve}" ]
    }
  }, {
    "id" : "scala.project.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "compiler.inc.type.used.idea", "compiler.inc.type.used.sbt", "sbt.idea.build", "sbt.shell.build", "project.view.highlighting", "compiler.compile.server.used" ]
      }
    }
  }, {
    "id" : "scala.project.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:compiler.plugin|sbt.info|scala.lang.level}" ],
      "event_data" : {
        "name" : [ "{enum:kind-projector|bm4|better-tostring|splain|macro-paradise-plugin|acyclic|neme|silencer|semanticdb|wartremover|scalajs|nir}" ],
        "value" : [ "{regexp#version}" ],
        "version" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "scala.refactoring",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "introduce.field", "rename.local", "introduce.type.alias", "move.class", "inline", "introduce.variable", "introduce.parameter", "change.signature", "rename.member", "move.file", "extract.method", "extract.trait" ]
      }
    }
  }, {
    "id" : "scala.sbt",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:shell.execute.command|shell.test.run.command|shell.test.command}" ]
    }
  }, {
    "id" : "search.everywhere.filters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:contributor.changed|file.type.changed|lang.changed|quick.filter.button}" ],
      "event_data" : {
        "buttonName" : [ "{enum:ALL|NONE|INVERT}" ],
        "contributorID" : [ "{util#se_contributor}" ],
        "enabled" : [ "{enum#boolean}" ],
        "fileType" : [ "{util#file_type}" ],
        "langID" : [ "{util#lang}" ]
      }
    }
  }, {
    "id" : "search.everywhere.process",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:firs.element.shown|contributor.search.started|first.element.found}" ],
      "event_data" : {
        "contributorID" : [ "{enum:FileSearchEverywhereContributor|SearchEverywhereContributor.All|ClassSearchEverywhereContributor|RecentFilesSEContributor|ActionSearchEverywhereContributor|SymbolSearchEverywhereContributor|TopHitSEContributor|RunConfigurationsSEContributor|YAMLKeysSearchEverywhereContributor|CommandsContributor|third.party|Vcs.Git|UrlSearchEverywhereContributor|GitSearchEverywhereContributor|TextSearchContributor}", "{enum:RiderOnboardingSearchEverywhereContributor}", "{enum:DbSETablesContributor|CalculatorSEContributor}" ]
      }
    }
  }, {
    "id" : "searchEverywhere",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "contributorID" : [ "{enum#__contributorID}", "{enum:SETextContributor}", "{enum:TextSearchContributor}", "{enum:RiderOnboardingSearchEverywhereContributor}", "{enum:DbSETablesContributor|CalculatorSEContributor}" ],
        "currentTabId" : [ "{enum#__currentTabId}", "{enum:UrlSearchEverywhereContributor|DbSETablesContributor|TextSearchContributor|CalculatorSEContributor}" ],
        "durationMs" : [ "{regexp#integer}" ],
        "firstTabId" : [ "{enum:FileSearchEverywhereContributor|SearchEverywhereContributor.All|ClassSearchEverywhereContributor|ActionSearchEverywhereContributor|SymbolSearchEverywhereContributor|third.party|Vcs.Git}", "{enum:UrlSearchEverywhereContributor|DbSETablesContributor|TextSearchContributor|CalculatorSEContributor}" ],
        "input_event" : [ "{util#shortcut}" ],
        "isOnlyMore" : [ "{enum#boolean}" ],
        "itemsNumberBeforeMore" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "lastTabId" : [ "{enum:FileSearchEverywhereContributor|SearchEverywhereContributor.All|ClassSearchEverywhereContributor|ActionSearchEverywhereContributor|SymbolSearchEverywhereContributor|third.party|Vcs.Git}", "{enum:UrlSearchEverywhereContributor|DbSETablesContributor|TextSearchContributor|CalculatorSEContributor}" ],
        "mlExperimentGroup" : [ "{regexp#integer}" ],
        "mlExperimentVersion" : [ "{regexp#integer}" ],
        "previewClosed" : [ "{enum#boolean}" ],
        "previewState" : [ "{enum#boolean}" ],
        "selectedItemNumber" : [ "{regexp#integer}" ],
        "timeToFirstResult" : [ "{regexp#integer}" ],
        "timeToFirstResultLastQuery" : [ "{regexp#integer}" ],
        "typedNavigationKeys" : [ "{regexp#integer}" ],
        "typedSymbolKeys" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__contributorID" : [ "FileSearchEverywhereContributor", "SearchEverywhereContributor.All", "ClassSearchEverywhereContributor", "RecentFilesSEContributor", "ActionSearchEverywhereContributor", "SymbolSearchEverywhereContributor", "TopHitSEContributor", "RunConfigurationsSEContributor", "YAMLKeysSearchEverywhereContributor", "CommandsContributor", "FuzzySearchContributor", "third.party", "Vcs.Git", "UrlSearchEverywhereContributor", "GitSearchEverywhereContributor" ],
        "__currentTabId" : [ "FileSearchEverywhereContributor", "SearchEverywhereContributor.All", "ClassSearchEverywhereContributor", "ActionSearchEverywhereContributor", "SymbolSearchEverywhereContributor", "FuzzySearchContributor", "third.party", "Vcs.Git" ],
        "__event_id" : [ "dialogOpen", "tabSwitched", "navigateThroughGroups", "contributorItemChosen", "moreItemChosen", "commandUsed", "commandCompleted", "dialogClosed", "sessionFinished", "moreItemShown", "previewClosed", "previewSwitched" ]
      }
    }
  }, {
    "id" : "selenium.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:allure.reference.click|selenium.code.completion|selenoid.configure|selenoid.launch}" ],
      "event_data" : {
        "completion_type" : [ "{enum:html-tag|html-attribute|html-input-type|html-id|html-name|capability|css-property|css-class|css-pseudo|allure-username|allure-label}" ],
        "reference_type" : [ "{enum:web|username}", "{enum:label}" ]
      }
    }
  }, {
    "id" : "serial.monitor.connects",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:serial.monitor.connected}" ],
      "event_data" : {
        "baudRate" : [ "{regexp#integer}" ],
        "success" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "serial.monitor.profiles",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:serial.profiles}" ],
      "event_data" : {
        "defaultBaudrate" : [ "{regexp#integer}" ],
        "saved" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "4"
    } ],
    "rules" : {
      "event_id" : [ "{enum:not.default|option|invoked}" ],
      "event_data" : {
        "component" : [ "{util#component_name}" ],
        "default" : [ "{enum#boolean}" ],
        "default_project" : [ "{enum#boolean}" ],
        "id" : [ "{regexp#integer}" ],
        "name" : [ "{util#option_name}", "{util#component_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "{enum:bool|int|float|enum|string}" ],
        "value" : [ "{enum#boolean}", "{regexp#integer}", "{regexp#float}", "{util#setting_value}" ]
      }
    }
  }, {
    "id" : "settings.changes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "47"
    } ],
    "rules" : {
      "event_id" : [ "{enum:component_changed_option|component_changed}" ],
      "event_data" : {
        "component" : [ "{util#component_name}" ],
        "default_project" : [ "{enum#boolean}" ],
        "id" : [ "{regexp#integer}" ],
        "name" : [ "{util#option_name}", "{util#component_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "type" : [ "{enum#__type}" ],
        "value" : [ "{enum#boolean}", "{regexp#integer}", "{regexp#float}", "{util#setting_value}" ]
      },
      "enums" : {
        "__type" : [ "bool", "int", "float", "enum", "string" ]
      }
    }
  }, {
    "id" : "settings.repository",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:sync.settings}" ],
      "event_data" : {
        "sync_type" : [ "{enum:merge|overwrite_local|overwrite_remote}" ]
      }
    }
  }, {
    "id" : "settings.sync.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action" : [ "{enum:INSTALL_SETTINGS_REPOSITORY|USE_NEW_SETTINGS_SYNC}" ],
        "event" : [ "{enum:SHOWN|GO_TO_SETTINGS_SYNC|SKIP|ENABLED}", "{enum:LOGGED_IN}" ],
        "method" : [ "{enum:GET_FROM_SERVER|PUSH_LOCAL|PUSH_LOCAL_WAS_ONLY_WAY|CANCELED}", "{enum:DISABLED_ONLY|DISABLED_AND_REMOVED_DATA_FROM_SERVER|CANCEL}" ],
        "reason" : [ "{enum:REMOVED_FROM_SERVER|EXCEPTION}" ],
        "type" : [ "{enum:OPTIONS|SCHEMES|PLUGINS_JSON}" ]
      },
      "enums" : {
        "__event_id" : [ "enabled.manually", "migrated.from.old.plugin", "invoked.settings.repository.notification.action", "disabled.automatically", "disabled.manually", "migrated.from.settings.repository", "promotion.in.settings.event.happened", "merge.conflict.occurred" ]
      }
    }
  }, {
    "id" : "settings.sync.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:general.state|editor.font.state|disabled.bundled.plugins|disabled.categories}" ],
      "event_data" : {
        "category" : [ "{enum:UI|KEYMAP|CODE|TOOLS|SYSTEM|PLUGINS|OTHER}" ],
        "disabled" : [ "{enum#boolean}" ],
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "shared.indexes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "averageDownloadSpeed" : [ "{regexp#integer}" ],
        "downloadTime" : [ "{regexp#integer}" ],
        "finishType" : [ "{enum:success|cancelled|error}" ],
        "indexId" : [ "{regexp#hash}" ],
        "kind" : [ "{enum#kind_enum}" ],
        "matchingFbIndexes" : [ "{regexp#integer}" ],
        "matchingStubIndexes" : [ "{regexp#integer}" ],
        "mismatchingFbIndexes" : [ "{util#index_id}" ],
        "mismatchingStubIndexes" : [ "{util#index_id}" ],
        "numberOfLocalSharedIndexes" : [ "{regexp#integer}" ],
        "packedSize" : [ "{regexp#integer}" ],
        "redundantFbIndexes" : [ "{regexp#integer}" ],
        "redundantStubIndexes" : [ "{regexp#integer}" ],
        "totalSizeOfLocalSharedIndexes" : [ "{regexp#integer}" ],
        "unpackedSize" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "local.index.loaded", "downloaded", "attached", "attach.failed.incompatible", "download.started", "download.finished", "attach.failed.notFound", "attach.failed.excluded" ],
        "kind_enum" : [ "project", "jdk", "mvn", "other", "python", "php", "php_bundled", "js_bundled", "go_bundled" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "download.finished",
      "fields" : [ "indexId" ]
    }, {
      "event" : "downloaded",
      "fields" : [ "indexId" ]
    }, {
      "event" : "download.started",
      "fields" : [ "indexId" ]
    }, {
      "event" : "attach.failed.incompatible",
      "fields" : [ "indexId" ]
    }, {
      "event" : "local.index.loaded",
      "fields" : [ "indexId" ]
    }, {
      "event" : "attach.failed.excluded",
      "fields" : [ "indexId" ]
    }, {
      "event" : "attached",
      "fields" : [ "indexId" ]
    }, {
      "event" : "attach.failed.notFound",
      "fields" : [ "indexId" ]
    } ]
  }, {
    "id" : "shared.indexes.app.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:shared.indexes.excluded.chunks|shared.indexes.stored.chunks}" ],
      "event_data" : {
        "number" : [ "{regexp#integer}" ],
        "size_in_bytes" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "shared.indexes.project.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "kinds" : [ "{enum:PROJECT|JDK|MVN|PYTHON|PHP|OTHER}", "{enum:JS_BUNDLED|GO_BUNDLED|PHP_BUNDLED}" ],
        "value" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "denied.shared.indexes", "allowed.shared.indexes", "no.decision.shared.indexes", "wait.shared.indexes", "attached.shared.indexes" ]
      }
    }
  }, {
    "id" : "shell.script",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "FilePathCompletionUsed", "BaseKeywordCompletionUsed", "ConditionKeywordCompletionUsed", "GenerateActionUsed", "ExternalFormatterDownloaded", "RenamingActionUsed", "QuickFixUsed", "SuppressInspectionUsed", "DisableInspectionUsed", "ExternalAnnotatorDownloaded", "DocumentationProviderUsed", "ExplainShellUsed" ]
      }
    }
  }, {
    "id" : "similar.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "component" : [ "{util#class_name}" ],
        "id" : [ "{regexp#integer}" ],
        "number_of_loaded" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "usage_view" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "most.common.usages.shown", "link.to.similar.usage.clicked", "more.clusters.loaded", "more.usages.loaded", "show.similar.usages.link.clicked", "most.common.usage.patterns.refresh.clicked", "more.non.clustered.usage.loaded", "navigate.to.usage.clicked", "more.snippets.loaded.in.clusters.preview" ]
      }
    }
  }, {
    "id" : "smart.update",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:vcs.update|build.project|scheduled}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "success" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "space",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "adv_explore_place" : [ "{enum:MAIN_TOOLBAR|SETTINGS|SHARE|CLONE}" ],
        "adv_overview_place" : [ "{enum:MAIN_TOOLBAR|SETTINGS|CLONE}" ],
        "auto" : [ "{enum#boolean}" ],
        "changes_loading_duration_ms" : [ "{regexp#integer}" ],
        "commits_selection_type" : [ "{enum:SINGLE|ALL|SUBSET_CONNECTED|SUBSET_SPLIT}" ],
        "details_tab_type" : [ "{enum:DETAILS|COMMITS}", "{enum:FILES}" ],
        "diffs_loading_duration_ms" : [ "{regexp#integer}" ],
        "edit_message_is_empty" : [ "{enum#boolean}" ],
        "filter_text_empty" : [ "{enum#boolean}" ],
        "loader_type" : [ "{enum:GIT|SPACE}" ],
        "login_place" : [ "{enum:MAIN_TOOLBAR|SETTINGS|SHARE|CLONE}" ],
        "login_status" : [ "{enum:CONNECTED|CONNECTING|DISCONNECTED}" ],
        "logout_place" : [ "{enum:ACTION|SETTINGS|MAIN_TOOLBAR|CLONE|AUTH_FAIL}" ],
        "new_message_is_pending" : [ "{enum#boolean}" ],
        "new_message_place" : [ "{enum:MAIN_CHAT|THREAD|DIFF|NEW_THREAD|FIRST_DISCUSSION_ANSWER|NEW_DISCUSSION}" ],
        "open_review_type" : [ "{enum:ENTER|DOUBLE_CLICK|ARROW}", "{enum:REMOTE_COMMAND}" ],
        "participant_edit_type" : [ "{enum:ADD|REMOVE}" ],
        "participant_role" : [ "{enum:Reviewer|Author|Watcher}" ],
        "place" : [ "{enum:REVIEW_FILES|REVIEW_COMMITS|CREATE_CODE_REVIEW|CREATE_MERGE_REQUEST}", "{util#place}" ],
        "quick_filter" : [ "{enum:OPEN|AUTHORED_BY_ME|NEEDS_MY_ATTENTION|NEEDS_MY_REVIEW|ASSIGNED_TO_ME|CLOSED}" ],
        "refresh_reviews_place" : [ "{enum:EMPTY_LIST|CONTEXT_MENU}" ],
        "review_diff_place" : [ "{enum:EDITOR|DIALOG}" ],
        "review_filter_state" : [ "{enum:CLEAR|SELECT_STATE|SELECT_TYPE|SELECT_AUTHOR|SELECT_REVIEWER}" ],
        "tab" : [ "{enum:INFO|FILES}" ],
        "type" : [ "{enum:CODE_REVIEW|MERGE_REQUEST}", "{enum:MERGE_REQUEST_FROM_CHANGES}", "{enum:REVIEWER_ACCEPT|REVIEWER_WAITS_FOR_RESPONSE|REVIEWER_RESUME|REVIEWER_LEAVE|AUTHOR_WAITS_FOR_RESPONSE|AUTHOR_RESUME}", "{enum:ACTION|PREVIEW}" ],
        "with_participants" : [ "{enum#boolean}" ],
        "with_title" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "adv_explore_space", "adv_log_in_link", "adv_sign_up_link", "adv_watch_overview", "button_log_in", "button_log_out", "cancel_login", "chat_collapse_discussion", "chat_delete_message", "chat_discard_edit_message", "chat_discard_send_message", "chat_expand_discussion", "chat_open_thread", "chat_reopen_discussion", "chat_resolve_discussion", "chat_send_edit_message", "chat_send_message", "chat_start_edit_message", "clone_repo", "create_new_project", "open_git_settings_in_space", "open_main_toolbar_popup", "open_share_project", "open_space_clone_tab", "review_details_accept_changes", "review_details_add_participant_icon", "review_details_back_to_list", "review_details_change_commits_selection", "review_details_checkout_branch", "review_details_edit_participant", "review_details_open_project_in_space", "review_details_open_review_diff", "review_details_open_review_in_space", "review_details_resume_review", "review_details_select_details_tab", "review_details_show_timeline", "review_details_update_branch", "review_details_wait_for_response", "review_diff_close_leave_comment", "review_diff_leave_comment", "review_diff_loaded", "reviews_list_change_quick_filter", "reviews_list_change_text_filter", "reviews_list_log_in_link", "reviews_list_open_review", "reviews_list_refresh_action", "share_project", "start_creating_new_project", "create_review", "review_details_participant_action", "auto_auth_failed", "mark_as_unread", "open_ssh_settings_in_space", "mark_as_read", "open_diff", "create_review_opened", "create_review_back_to_list", "all_review_diff_loaded", "reviews_list_update_filters_action", "review_details_show_branch_in_log" ]
      }
    }
  }, {
    "id" : "space.state",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:associated_repos_state|automation_file_state|git_clone_type|login_status}" ],
      "event_data" : {
        "automation_file_exists" : [ "{enum#boolean}" ],
        "is_associated_with_space_repo" : [ "{enum#boolean}" ],
        "is_probably_contains_space_repo" : [ "{enum#boolean}" ],
        "login_status" : [ "{enum:CONNECTED|CONNECTING|DISCONNECTED}" ],
        "type" : [ "{enum:HTTPS|SSH}" ]
      }
    }
  }, {
    "id" : "spellchecker.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:add.to.accepted.words.ui|remove.from.accepted.words.ui}" ]
    }
  }, {
    "id" : "spellchecker.settings.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum#boolean}", "{regexp#integer}", "{enum:project-level|application-level}" ]
      },
      "enums" : {
        "__event_id" : [ "all.bundled.enabled", "max.spellchecker.suggestions", "custom.dict.count", "use.single.dict.to.save", "default.dict.to.save" ]
      }
    }
  }, {
    "id" : "spring.boot",
    "builds" : [ {
      "from" : "192.4831"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#count}" ],
        "extension" : [ "{enum:properties|yml|yaml|json|unknown}" ],
        "files" : [ "{regexp#count}" ],
        "modules" : [ "{regexp#count}" ],
        "name" : [ "{enum:application|bootstrap|additional-spring-configuration-metadata|devtools}" ]
      },
      "enums" : {
        "__event_id" : [ "configuration.file", "spring.boot.modules.per.project", "configuration.properties", "configuration.properties.methods", "nested.configuration.properties", "spring.boot.dev.tools" ]
      }
    }
  }, {
    "id" : "spring.boot.mvc.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "navigator" : [ "{util#class_name}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__event_id" : [ "EditLiveRequestMapping", "DefaultRequestNavigator", "RestClientRequestEditorNavigator", "RestClientRequestRunnerNavigator", "navigated" ]
      }
    }
  }, {
    "id" : "spring.boot.run",
    "builds" : [ {
      "from" : "192.4831"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "count_group" : [ "{regexp#count}", "{enum:<1}" ],
        "enabled" : [ "{enum#boolean}" ],
        "params" : [ "{regexp#integer}" ],
        "value" : [ "{enum:Nothing|third.party|UpdateClassesAndResources|UpdateClassesAndTriggerFile|UpdateResources|UpdateTriggerFile}", "{enum:NONE|MANIFEST|CLASSPATH_FILE|ARGS_FILE}" ]
      },
      "enums" : {
        "__event_id" : [ "config.active.profiles.set", "config.hide.banner", "config.debug.mode", "config.enable.launch.optimization", "config.enable.jmx.agent", "run.dashboard", "endpoints.beans.diagram", "config.include.provided.scope", "spring.boot.run.configs", "config.update.action.update.policy", "config.frame.deactivation.update.policy", "config.additional.params.total", "config.additional.params.enabled", "config.additional.params.disabled", "configs.main.class", "config.log.files", "config.vm.options", "config.program.arguments", "config.working.directory", "config.environment.variables", "config.alternative.jre.path.enabled", "config.shorten.command.line" ]
      }
    }
  }, {
    "id" : "spring.boot.run.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "actuator" : [ "{util#class_name}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__event_id" : [ "LiveBeansNavigationHandler", "EditRuntimeBean", "EditRuntimeResource", "runtime.bean.selected", "edit.runtime.bean", "runtime.beans.navigation.handler", "runtime.resource.selected", "edit.runtime.resource", "actuator.tab.selected" ]
      }
    }
  }, {
    "id" : "ssh",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:custom.ssh.tool.path|config.parser|openssh.version|ssh.remote.server.info}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "kind" : [ "{enum:LEGACY|OPENSSH}" ],
        "remote_arch" : [ "{enum:aarch64|amd64|arm64|i386|i686|mips|mips64|mips64el|mipsel|x86_64|failed_to_parse|forbidden_exec}" ],
        "remote_os" : [ "{enum:Cygwin|Darwin|FreeBSD|Linux|MSYS|Windows_NT|failed_to_parse|forbidden_exec}", "{enum#__remote_os}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__remote_os" : [ "windows_nt", "cygwin", "msys", "freebsd", "darwin", "linux" ]
      }
    }
  }, {
    "id" : "startup",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration" : [ "{regexp#integer}" ],
        "projects_count" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "bootstrap", "splash", "appInit", "totalDuration", "projectFrameVisible", "splashShown", "splashHidden" ]
      }
    }
  }, {
    "id" : "stash.interactions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "4"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "create_branch" : [ "{enum#boolean}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "keep_index" : [ "{enum#boolean}" ],
        "message_entered" : [ "{enum#boolean}" ],
        "pop_stash" : [ "{enum#boolean}" ],
        "reinstate_index" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "stash.pop.started", "stash.push.dialog", "stash.pop.dialog", "stash.push.finished", "stash.pop.finished", "stash.push.started" ]
      }
    }
  }, {
    "id" : "statistics.go.debugger.usages.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:local.attach|debugger.usage}" ]
    }
  }, {
    "id" : "statistics.go.dependencyManager",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "GoDep", "GoGradle", "Trash", "Glide", "Dep", "vgo" ]
      }
    }
  }, {
    "id" : "statistics.go.settings.codeStyle",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:addParenthesesForSingleImport|useBackQuotesForImports|addLeadingSpaceToComments}" ]
    }
  }, {
    "id" : "statistics.go.settings.imports",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "importSorting.GOFMT", "noOptimizeImportsOnTheFly", "groupStdlibImports", "noGroupStdlibImports", "moveAllImportsInOneDeclaration", "noShowImportPopup", "noMoveAllImportsInOneDeclaration", "moveAllStdlibImportsInOneGroup", "noAddUnambiguousImportsOnTheFly", "importSorting.GOIMPORTS" ]
      }
    }
  }, {
    "id" : "statistics.go.surroundwith.usages.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:surroundwith.usage}" ]
    }
  }, {
    "id" : "statistics.go.ui.component.usages.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:quick.settings}" ]
    }
  }, {
    "id" : "status.bar.widgets",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:widget}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "id" : [ "{util#status_bar_widget_factory}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "suggested.refactorings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "declaration_type" : [ "{util#class_name}" ],
        "id" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__event_id" : [ "rename.suggested", "rename.popup.shown", "rename.popup.canceled", "rename.performed", "changeSignature.performed", "changeSignature.popup.canceled", "changeSignature.popup.shown", "changeSignature.suggested" ]
      }
    }
  }, {
    "id" : "surround.with",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:surrounder.executed|live.template.executed|custom.template.executed}" ],
      "event_data" : {
        "changedByUser" : [ "{enum#boolean}" ],
        "class" : [ "{util#class_name}" ],
        "group" : [ "{util#live_template_group}", "{util#live_template}" ],
        "key" : [ "{util#live_template}" ],
        "lang" : [ "{util#lang}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "svn.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:working.copy}" ],
      "event_data" : {
        "format" : [ "{regexp#version}" ]
      }
    }
  }, {
    "id" : "swagger.features",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "invocation_place" : [ "{enum:gutter|intention|unknown}" ]
      },
      "enums" : {
        "__event_id" : [ "run.codegen.configuration.action", "edit.codegen.configuration.action", "edit.remote.specifications.endpoints", "add.remote.specification", "swagger.ui.requests.try.out", "swagger.ui.requests.execute", "redoc.requests.try.it", "redoc.requests.send", "swagger.edited.visually" ]
      }
    }
  }, {
    "id" : "symfony.project.generator",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:generated|opened}" ],
      "event_data" : {
        "git_created" : [ "{enum#boolean}" ],
        "type" : [ "{enum:Web|Console|Demo}" ],
        "version" : [ "{regexp:(latest|(v?[0-9]+\\.([0-9]+\\.x-dev|[0-9]+\\.[0-9]+)))}" ]
      }
    }
  }, {
    "id" : "symsrv",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:storages|ms.server.added|enabled|servers}" ],
      "event_data" : {
        "enabled" : [ "{regexp#integer}", "{enum#boolean}" ],
        "total" : [ "{regexp#integer}" ],
        "value" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "system.os",
    "builds" : [ {
      "from" : "191.4738"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "build" : [ "{regexp#integer}" ],
        "distro" : [ "{enum:almalinux|alpine|amzn|arch|bunsenlabs|centos|chromeos|debian|deepin|devuan|elementary|fedora|galliumos|garuda|gentoo|kali|linuxmint|mageia|manjaro|neon|nixos|ol|opensuse-leap|opensuse-tumbleweed|parrot|pop|pureos|raspbian|rhel|rocky|rosa|sabayon|slackware|solus|ubuntu|void|zorin|other|unknown}", "{enum:endeavouros}" ],
        "id" : [ "{regexp#hash}", "{enum:unknown}" ],
        "locale" : [ "{enum#__locale}" ],
        "name" : [ "{enum#os}" ],
        "release" : [ "{enum#__release}", "{regexp#version}" ],
        "revision" : [ "{regexp#integer}" ],
        "shell" : [ "{enum:sh|ash|bash|csh|dash|fish|ksh|tcsh|xonsh|zsh|nu|other|unknown}" ],
        "time_zone" : [ "{regexp#time_zone}" ],
        "value" : [ "{regexp#time_zone}", "{regexp#hash}", "{enum:unknown}" ],
        "version" : [ "{regexp#version}", "{enum:unknown.format}", "{enum#__version}" ],
        "wsl" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "os.name", "os.timezone", "machine.id", "linux", "windows" ],
        "__locale" : [ "cs", "da", "de", "en", "es", "fr", "hi", "ja", "ko", "nb", "nl", "nn", "no", "pl", "pt", "ro", "ru", "sv", "tr", "uk", "vi", "zh", "hu", "yo", "ur", "ig", "ml", "in", "mr", "uz", "el", "it", "am", "my", "ar", "as", "ne", "az", "fa", "zu", "rw", "bn", "sd", "si", "so", "kk", "kn", "or", "ta", "gu", "pa", "te", "th", "ha" ],
        "__release" : [ "unknown", "alpine", "amzn", "antergos", "arch", "centos", "debian", "deepin", "elementary", "fedora", "galliumos", "gentoo", "kali", "linuxmint", "manjaro", "neon", "nixos", "ol", "opensuse", "opensuse-leap", "opensuse-tumbleweed", "freedesktop", "parrot", "raspbian", "rhel", "sabayon", "solus", "ubuntu", "zorin", "custom" ],
        "__version" : [ "6.0", "6.1", "6.2", "6.3", "10.0" ]
      },
      "regexps" : {
        "time_zone" : "((\\+|\\-)\\d\\d(\\:|\\_)\\d\\d)|Z"
      }
    },
    "anonymized_fields" : [ {
      "event" : "machine.id",
      "fields" : [ "value", "id" ]
    } ]
  }, {
    "id" : "system.runtime",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "arch" : [ "{enum#__arch}" ],
        "bit" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "gigabytes" : [ "{regexp#integer}" ],
        "index_partition_free" : [ "{regexp#integer}" ],
        "index_partition_size" : [ "{regexp#integer}" ],
        "name" : [ "{enum#__name}", "{enum:Xmx|Xms|SoftRefLRUPolicyMSPerMB|ReservedCodeCacheSize}", "{enum:splash|nosplash}", "{enum:Metal|OpenGL}" ],
        "value" : [ "{regexp#integer}", "{enum#boolean}" ],
        "vendor" : [ "{enum#__vendor}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__arch" : [ "x86", "x86_64", "arm64", "other", "unknown" ],
        "__event_id" : [ "cores", "garbage.collector", "jvm.option", "jvm", "debug.agent", "memory.size", "swap.size", "disk.size", "jvm.client.properties", "rendering.pipeline" ],
        "__name" : [ "Shenandoah", "G1_Young_Generation", "G1_Old_Generation", "Copy", "MarkSweepCompact", "PS_MarkSweep", "PS_Scavenge", "ParNew", "ConcurrentMarkSweep", "Serial", "Unknown", "CMS", "Epsilon", "G1", "Z", "Parallel", "Other" ],
        "__vendor" : [ "JetBrains", "Apple", "Oracle", "Sun", "IBM", "Azul", "Other" ]
      }
    }
  }, {
    "id" : "task.management",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:create.local.task.manually|open.remote.task|collect.remote.tasks|explicitly.activated.task}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "repository_type" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "task.management.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:configured.repository}" ],
      "event_data" : {
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "repository_type" : [ "{util#class_name}" ]
      }
    }
  }, {
    "id" : "tasks.state.collector",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:combo_on_toolbar}" ],
      "event_data" : {
        "visible" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "terminalShell",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "command" : [ "{enum:<relative path>|<absolute path>|curl|ps|g++|gcc|systeminfo|ssh|del|echo|rmdir|type|helm|hostname|java|telnet|powershell|vim|cargo|mkdir|zip|scp|python|apt|gdb|xcopy|ip|tracert|subst|cls|brew|taskmgr|exit|node|rd|route|az|rm|tasklist|pwd|ping|wget|unzip|pnpm|rustup|sc|eslint|top|where|copy|sudo|free|cd|karma|set|more|msbuild|svn|kill|cp|cypress|prettier|gradle|help|rsync|yarn|apt-get|ipconfig|df|javac|dig|compact|ls|nano|mocha|screen|source|dir|chkdsk|docker-compose|netsh|mode|du|playwright|reg|webpack|find|md|assoc|net|vitest|export|valgrind|which|ver|nvm|tar|chown|format|pwsh|rvm|tree|mv|touch|history|less|sort|netstat|pause|expand|vi|nslookup|pathping|kubectl|ng|shutdown|systemctl|gulp|code|ifconfig|nodejs|traceroute|title|docker|yum|grunt|git|attrib|whois|cat|vagrant|alias|chmod|htop|make|cipher|move|mvn|whence|ant|grep|clear|start|npm|jest|command|ruby|apt-cache|service|npx|ssh-keygen|taskkill|prompt|hg}", "{enum:<empty>|<whitespaces>}", "{enum:composer}", "{enum#__command}", "{enum:mc|tmux}" ],
        "enabled" : [ "{enum#boolean}" ],
        "new_terminal" : [ "{enum#boolean}" ],
        "os-version" : [ "{regexp#version}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "runAnythingProvider" : [ "{util#class_name}" ],
        "shell" : [ "{enum#__shell}", "{enum:unspecified}" ],
        "subCommand" : [ "{enum:test|run|install|update|status|checkout|commit|install|test|run|compose|tag|add|pull|status|push|checkout|merge|init|diff|branch|log|reset|commit|clone|stash|install|run|test}", "{enum:rebase}", "{enum#__subCommand}", "{enum:miri|fmt}" ],
        "switch_place" : [ "{enum:SETTINGS|TOOLWINDOW_OPTIONS}" ],
        "terminalCommandHandler" : [ "{util#class_name}" ]
      },
      "enums" : {
        "__command" : [ "unalias", "ll", "egrep", "tail", "gitk", "pacman", "wc", "zsh", "bazel", "head", "fgrep", "sh", "whatis", "fish", "shred", "terraform", "bash", "cmd", "man", "aws", "rgrep" ],
        "__event_id" : [ "ssh.exec", "local.exec", "terminal.command.executed", "terminal.smart.command.executed", "terminal.smart.command.not.executed", "promotion.shown", "new.terminal.switched", "promotion.got.it.clicked" ],
        "__shell" : [ "bash", "cmd", "zsh", "other", "fish", "powershell", "sh", "wsl", "cmder_shell", "tcsh", "git-bash", "cmder", "pwsh", "git-cmd", "git", "activate", "init", "ubuntu", "ubuntu1804", "anaconda3", "cexec", "cygwin", "miniconda3", "msys2_shell", "mksh", "ksh", "xonsh", "ion", "hamilton", "es", "nushell", "scsh", "rc", "eshell", "ash", "csh", "fsh", "bbsh", "dash" ],
        "__subCommand" : [ "new", "metadata", "rustc", "bench", "tree", "check", "clean", "rustdoc", "version", "remove", "help", "search", "generate-lockfile", "verify-project", "fix", "uninstall", "build", "vendor", "fetch", "report", "doc", "locale-project", "pkgid", "create-project", "completion", "depends", "show", "require", "global", "prohibits", "list", "clear-cache", "self-update", "suggests", "licenses", "outdated", "audit", "reinstall", "run-script", "diagnose", "bump", "dump-autoload", "check-platform-reqs", "config", "exec", "validate", "repack", "restore", "apply", "grep", "mv", "cherry-pick", "revert", "switch", "bisect", "prune", "difftool", "submodule", "mergetool", "rm", "gc" ]
      }
    }
  }, {
    "id" : "tms.statistics",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:tms.content_displayed}" ],
      "event_data" : {
        "tms_service_id" : [ "{enum:Gauge|Local|TestRail}", "{enum:MdLocalTms}" ]
      }
    }
  }, {
    "id" : "toolbar",
    "builds" : [ ],
    "versions" : [ {
      "from" : "28"
    } ],
    "rules" : {
      "event_id" : [ "{enum:clicked}" ],
      "event_data" : {
        "action_id" : [ "{util#action}", "{enum#action}" ],
        "class" : [ "{util#class_name}", "{enum:com.intellij.microservices.ui.diagrams.actions.MsShowWholeProjectDiagramAction}" ],
        "context_menu" : [ "{enum#boolean}" ],
        "current_file" : [ "{util#current_file}" ],
        "dumb" : [ "{enum#boolean}" ],
        "enable" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "parent" : [ "{util#class_name}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "tooltip.action.events",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:execute|show.all|show.description}" ],
      "event_data" : {
        "input_event" : [ "{util#shortcut}" ],
        "source" : [ "{enum:gear|shortcut|more.link}" ]
      }
    }
  }, {
    "id" : "toolwindow",
    "builds" : [ ],
    "versions" : [ {
      "from" : "23"
    } ],
    "rules" : {
      "event_id" : [ "{enum:activated|shown|hidden}" ],
      "event_data" : {
        "Location" : [ "{enum#__Location}" ],
        "Source" : [ "{enum:StripeButton|ToolWindowHeader|ToolWindowHeaderAltClick|Content|Switcher|SwitcherSearch|ToolWindowsWidget|RemoveStripeButtonAction|HideOnShowOther|HideSide|CloseFromSwitcher|ActivateActionMenu|ActivateActionKeyboardShortcut|ActivateActionGotoAction|ActivateActionOther|CloseAction|HideButton|HideToolWindowAction|HideSideWindowsAction|HideAllWindowsAction|JumpToLastWindowAction}", "{enum:ToolWindowSwitcher}", "{enum:SquareStripeButton}", "{enum:InspectionsWidget}" ],
        "ViewMode" : [ "{enum#__ViewMode}" ],
        "id" : [ "{util#toolwindow}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__Location" : [ "Left_Top", "Left_Bottom", "Bottom_Left", "Bottom_Right", "Right_Bottom", "Right_Top", "Top_Right", "Top_Left", "BottomRight", "BottomLeft", "LeftTop", "LeftBottom", "RightTop", "TopRight", "RightBottom", "TopLeft" ],
        "__ViewMode" : [ "Dock_Pinned", "DockPinned", "Dock_Unpinned", "DockUnpinned", "Undock", "Float", "Window" ]
      }
    }
  }, {
    "id" : "trusted_projects",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "agree-to-load" : [ "{enum#boolean}" ],
        "choice" : [ "{enum:IMPORT|OPEN_WITHOUT_IMPORTING|CANCEL}", "{enum:TRUST_AND_OPEN|OPEN_IN_SAFE_MODE}" ]
      },
      "enums" : {
        "__event_id" : [ "load_untrusted_project_confirmation", "open_new_project", "project_implicitly_trusted_by_path", "project_implicitly_trusted_by_url", "read_more_from_notification_banner", "trust_host_checkbox_selected", "trust_project_from_notification_banner", "trust_location_checkbox_selected" ]
      }
    }
  }, {
    "id" : "ui.dialogs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "23"
    } ],
    "rules" : {
      "event_id" : [ "{enum:show|close|help.clicked}" ],
      "event_data" : {
        "code" : [ "{enum:0|1|2}" ],
        "dialog_class" : [ "{util#dialog_class}", "{util#class_name}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "ui.editor.color.schemes",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "is_dark" : [ "{enum#boolean}" ],
        "scheme" : [ "{enum#__scheme}", "{enum:New Dark|Light|Dark|Monokai}", "{enum:New Dark RC}", "{enum:Darcula Contrast}" ]
      },
      "enums" : {
        "__event_id" : [ "Default", "Darcula", "Obsidian", "Visual_Studio", "Solarized", "Wombat", "Monkai", "XCode", "Sublime", "Oblivion", "Zenburn", "Cobalt", "Netbeans", "Eclipse", "Aptana", "Flash_Builder", "IdeaLight", "High_contrast", "ReSharper", "Rider", "Other", "enabled.color.scheme" ],
        "__scheme" : [ "Default", "Darcula", "Obsidian", "Visual_Studio", "Solarized", "Wombat", "Monkai", "XCode", "Sublime", "Oblivion", "Zenburn", "Cobalt", "Netbeans", "Eclipse", "Aptana", "Flash_Builder", "IdeaLight", "High_contrast", "ReSharper", "Rider", "Other", "IntelliJ_Light" ]
      }
    }
  }, {
    "id" : "ui.event",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "applied" : [ "{enum#boolean}" ],
        "autodetect" : [ "{enum#boolean}" ],
        "class" : [ "{util#class_name}" ],
        "count" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "expand" : [ "{enum#boolean}" ],
        "final_zoom_scale_percent" : [ "{regexp#integer}" ],
        "lang" : [ "{util#lang}" ],
        "lookup_active" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "presentation_mode" : [ "{enum#boolean}" ],
        "protocol" : [ "{enum:HTTP|HTTPS|PSI_ELEMENT|FILE|OTHER}" ],
        "recursive" : [ "{enum#boolean}" ],
        "target_class" : [ "{util#class_name}" ],
        "with_selection" : [ "{enum#boolean}" ],
        "zoom_mode" : [ "{enum:ZOOM_IN|ZOOM_OUT}" ],
        "zoom_place" : [ "{enum:SETTINGS|SWITCHER}" ],
        "zoom_scale_percent" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "ProgressPaused", "ProgressResumed", "NavBarShowPopup", "NavBarNavigate", "BreadcrumbShowTooltip", "BreadcrumbNavigate", "DumbModeDialogWasNotNeeded", "DumbModeDialogRequested", "DumbModeDialogShown", "DumbModeDialogCancelled", "DumbModeDialogFinished", "DumbModeDialogProceededToActions", "IncrementalSearchActivated", "IncrementalSearchKeyTyped", "IncrementalSearchCancelled", "IncrementalSearchNextPrevItemSelected", "DumbModeBalloonWasNotNeeded", "DumbModeBalloonRequested", "DumbModeBalloonShown", "DumbModeBalloonCancelled", "DumbModeBalloonProceededToActions", "ShowUsagesPopupShowSettings", "LookupExecuteElementAction", "ToolWindowsWidgetPopupClicked", "ToolWindowsWidgetPopupShown", "LookupShowElementActions", "ImplementationViewComboBoxSelected", "ImplementationViewToolWindowOpened", "DaemonEditorPopupInvoked", "HectorPopupDisplayed", "EditorFoldingIconClicked", "QuickNavigateInfoPopupShown", "EditorAnnotationClicked", "StatusBarWidgetClicked", "StatusBarPopupShown", "CtrlMouseHintShown", "ide.zoom.switcher.closed", "ide.zoom.changed", "theme.autodetect.selector", "DocumentationLinkClicked" ]
      }
    }
  }, {
    "id" : "ui.file.chooser",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:chooser_shown}" ],
      "event_data" : {
        "filter" : [ "{enum:NONE|TYPE|EXT|OTHER}" ],
        "forced" : [ "{enum#boolean}" ],
        "jar_contents" : [ "{enum#boolean}" ],
        "non_local_files" : [ "{enum#boolean}" ],
        "non_local_roots" : [ "{enum#boolean}" ],
        "type" : [ "{enum:MAC|WINDOWS|CLASSIC|NEW}" ]
      }
    }
  }, {
    "id" : "ui.fonts",
    "builds" : [ {
      "from" : "193.325"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "font_name" : [ "{enum#__font_name}", "{enum:Inter}" ],
        "font_size" : [ "{regexp#integer}", "{enum#__font_size}" ],
        "font_size_2d" : [ "{regexp#float}" ],
        "line_spacing" : [ "{regexp#float}" ],
        "value" : [ "{regexp#float}" ]
      },
      "enums" : {
        "__event_id" : [ "UI", "Presentation.mode", "Editor", "IDE.editor", "Console", "QuickDoc", "editor.lineSpacing" ],
        "__font_name" : [ "Monospaced", "Menlo", "DejaVu_Sans_Mono", ".SFNSText-Regular", "Fira_Code", "Lucida_Grande", "Source_Code_Pro", "Segoe_UI", "Ubuntu", ".SF_NS_Text", "Consolas", "Noto_Sans_Regular", "Microsoft_YaHei", "Fira_Code_Retina", "Cantarell_Regular", "Microsoft_YaHei_UI", "Monaco", "Noto_Sans", "Dialog.plain", "Fira_Code_Medium", "Courier_New", "Tahoma", "Hack", "DejaVu_Sans", "Ubuntu_Mono", "Droid_Sans_Mono", "Dialog", "Inconsolata", "Malgun_Gothic", "Cantarell", "DialogInput", "Yu_Gothic_UI_Regular", "Roboto", "Liberation_Mono", "Lucida_Console", "D2Coding", "Lucida_Sans_Typewriter", "Fira_Code_Light", "Droid_Sans", "Verdana", "Arial", "Roboto_Mono", "Segoe_UI_Semibold", "SF_Mono", "Droid_Sans_Mono_Slashed", "LucidaGrande", "Operator_Mono", "Ayuthaya", "Hasklig", "Iosevka", "Andale_Mono", "Anonymous_Pro", "Anonymous_Pro_for_Powerline", "D2Coding_ligature", "Dank_Mono", "DejaVu_Sans_Mono_for_Powerline", "Fantasque_Sans_Mono", "Fira_Mono_for_Powerline", "Hack_Nerd_Font", "IBM_Plex_Mono", "Meslo_LG_L_DZ_for_Powerline", "Meslo_LG_M_for_Powerline", "Meslo_LG_S_for_Powerline", "Microsoft_YaHei_Mono", "Noto_Mono_for_Powerline", "Noto_Sans_Mono", "PT_Mono", "PragmataPro", "SourceCodePro+Powerline+Awesome_Regular", "Source_Code_Pro_Semibold", "Source_Code_Pro_for_Powerline", "Ubuntu_Mono_derivative_Powerline", "YaHei_Consolas_Hybrid", "mononoki", "Bitstream_Vera_Sans_Mono", "Comic_Sans_MS", "Courier_10_Pitch", "Cousine", "2Coding_ligature", "Droid_Sans_Mono_Dotted", "Inconsolata-dz", "Input", "Input_Mono", "Meslo_LG_M_DZ_for_Powerline", "Migu_2M", "Monoid", "Operator_Mono_Book", "Operator_Mono_Lig", "Operator_Mono_Medium", "Abadi_MT_Condensed_Extra_Bold", "Al_Bayan", "Meiryo", "Microsoft_JhengHei", "Microsoft_Yahei_UI", "SansSerif", "Ubuntu_Light", "JetBrains_Mono", ".AppleSystemUIFont", ".SFNS-Regular" ],
        "__font_size" : [ "X_SMALL", "X_LARGE", "XX_SMALL", "XX_LARGE", "SMALL", "MEDIUM", "LARGE" ]
      }
    }
  }, {
    "id" : "ui.hidpi.mode",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:per_monitor_dpi|system_dpi}" ]
    }
  }, {
    "id" : "ui.info.features",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "display_id" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "grouped" : [ "{enum:[30_50]|[more.than.50]|[15_30]|[15]}" ],
        "navbar" : [ "{enum:visible|hidden}" ],
        "scale" : [ "{regexp#float}" ],
        "scale_mode" : [ "{enum#boolean}" ],
        "toolbar" : [ "{enum:visible|hidden}" ],
        "user_scale" : [ "{regexp#float}" ],
        "value" : [ "{enum:visible|floating}", "{enum:visible|hidden}", "{enum:Top|None|Right|Left|Bottom}", "{enum#look_and_feel}", "{enum:per_monitor_dpi|system_dpi}", "{regexp#integer}", "{regexp#integer}x{regexp#integer}", "{regexp#integer}x{regexp#integer}_({regexp#integer}%)", "{enum:classic|new}" ]
      },
      "enums" : {
        "__event_id" : [ "Nav.Bar", "Toolbar", "Status.bar", "Tool.Window.buttons", "Toolbar.and.NavBar", "Recent.files.limit", "Show.Editor.Tabs.In.Single.Row", "Hide.Editor.Tabs.If.Needed", "Block.cursor", "Line.Numbers", "Gutter.Icons", "Soft.Wraps", "Tabs", "Retina", "Show.tips.on.startup", "Allow.merging.buttons", "QuickDoc.Show.Toolwindow", "QuickDoc.AutoUpdate", "Look.and.Feel", "Hidpi.Mode", "Screen.Reader", "Screen.Scale", "Nav.Bar.members", "QuickListsCount", "Number.Of.Monitors", "Screen.Resolution", "laf.autodetect", "tool.window.layouts", "UI.type" ]
      }
    }
  }, {
    "id" : "ui.look.and.feel",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "IntelliJ", "Gray", "High_contrast", "Light", "Dark_purple", "Cyan_light", "Rider_Dark", "Darcula" ]
      }
    }
  }, {
    "id" : "ui.mnemonic",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:mnemonic.used}" ],
      "event_data" : {
        "type" : [ "{enum:mac.alt.based|regular|mac.regular}" ]
      }
    }
  }, {
    "id" : "ui.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "23"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "characters" : [ "{regexp#integer}" ],
        "configurable" : [ "{util#class_name}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "hits" : [ "{regexp#integer}" ],
        "loaded_from_cache" : [ "{enum#boolean}" ],
        "modifiedOnly" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__event_id" : [ "select", "reset", "apply", "search", "advanced.settings.search" ]
      }
    }
  }, {
    "id" : "ui.tips",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "algorithm" : [ "{enum#__algorithm}", "{enum:ONE_TIP_SURROUNDWITH_SUMMER2020|ONE_TIP_EXTENDSELECTION_SUMMER2020|ONE_TIP_SWITCHER_SUMMER2020|LOCAL_SORT_SUMMER2020}", "{enum:tip_utility_and_ignore_used|tip_utility}", "{enum:random_ignore_used}", "{enum:usage_and_applicability|shuffle}" ],
        "feature_id" : [ "{util#tip_info}" ],
        "filename" : [ "{util#tip_info}" ],
        "keep_showing_after" : [ "{enum#boolean}" ],
        "keep_showing_before" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "reason" : [ "{enum:dialog|suggestions}" ],
        "time_passed" : [ "{regexp#integer}" ],
        "tip_id" : [ "{util#tip_info}" ],
        "type" : [ "{enum:automatically|manually}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__algorithm" : [ "TOP", "MATRIX_ALS", "MATRIX_BPR", "PROB", "WIDE", "CODIS", "RANDOM", "WEIGHTS_LIN_REG", "default_shuffle", "unknown", "ONE_TIP_SUMMER2020", "RANDOM_SUMMER2020" ],
        "__event_id" : [ "shown.automatically", "shown.manually", "tip.shown", "dialog.shown", "next.tip", "previous.tip", "dialog.closed", "tip.performed", "dialog.skipped" ]
      }
    }
  }, {
    "id" : "usage.view",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration_first_results_ms" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "id" : [ "{regexp#integer}" ],
        "is_among_recent_files" : [ "{enum#boolean}" ],
        "is_file_already_opened" : [ "{enum#boolean}" ],
        "is_similar_usage" : [ "{enum#boolean}" ],
        "is_the_same_file" : [ "{enum#boolean}" ],
        "item_chosen" : [ "{enum#boolean}" ],
        "lang" : [ "{util#lang}" ],
        "new" : [ "{util#scopeRule}" ],
        "number_of_letters_typed" : [ "{regexp#integer}" ],
        "number_of_targets" : [ "{regexp#integer}" ],
        "number_of_usages" : [ "{regexp#integer}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "preselected_usage" : [ "{regexp#integer}" ],
        "previous" : [ "{util#scopeRule}" ],
        "primary_target" : [ "{util#class_name}" ],
        "reference_class" : [ "{util#class_name}" ],
        "results_total" : [ "{regexp#integer}" ],
        "scope" : [ "{util#scopeRule}" ],
        "search_cancelled" : [ "{enum#boolean}" ],
        "selected_element.is_in_injected_file" : [ "{enum#boolean}" ],
        "selected_element.is_in_test_sources" : [ "{enum#boolean}" ],
        "selected_element.lang" : [ "{util#lang}" ],
        "selected_element.reference_class" : [ "{util#class_name}" ],
        "selected_usage" : [ "{regexp#integer}" ],
        "symbol" : [ "{util#class_name}" ],
        "target_element.is_in_injected_file" : [ "{enum#boolean}" ],
        "target_element.is_in_test_sources" : [ "{enum#boolean}" ],
        "target_element.lang" : [ "{util#lang}" ],
        "target_element.reference_class" : [ "{util#class_name}" ],
        "too_many_result_warning" : [ "{enum#boolean}" ],
        "ui_location" : [ "{enum:ShowUsagesPopup|FindToolWindow}" ],
        "usage_view" : [ "{regexp#integer}" ],
        "userAction" : [ "{enum:Shown|Aborted|Continued}" ]
      },
      "enums" : {
        "__event_id" : [ "usage.navigate", "usage.shown", "tooManyResultsDialog", "scope.changed", "switch.tab", "item.chosen", "finished", "started", "open.in.tool.window", "cancelled", "popup.closed", "item.chosen.in.popup.features" ]
      }
    }
  }, {
    "id" : "user.advanced.info",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:build|licencing}" ],
      "event_data" : {
        "is_jb_team" : [ "{enum#boolean}" ],
        "login_hash" : [ "{regexp#hash}" ],
        "metadata" : [ "{regexp#license_metadata}", "{enum:unknown}" ],
        "value" : [ "{enum:eap|release}", "{enum:evaluation|license}" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "licencing",
      "fields" : [ "login_hash" ]
    } ]
  }, {
    "id" : "vcs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "changesDelta" : [ "{regexp#integer}" ],
        "clone_dialog_extension" : [ "{util#class_name}", "{enum:org.jetbrains.plugins.github.ui.cloneDialog.GHECloneDialogExtensionComponent|org.jetbrains.plugins.github.ui.cloneDialog.GHCloneDialogExtensionComponent|com.intellij.util.ui.cloneDialog.RepositoryUrlCloneDialogExtension.RepositoryUrlMainExtensionComponent|com.intellij.space.vcs.clone.SpaceCloneComponent}" ],
        "context_menu" : [ "{enum#boolean}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "is_full_refresh" : [ "{enum#boolean}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "unversionedDelta" : [ "{regexp#integer}" ],
        "vcs" : [ "{enum#vcs}" ],
        "wasUpdatingBefore" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "update.started", "update.finished", "commit.started", "commit.finished", "fetch.started", "fetch.finished", "non.modal.commit.state.changed", "non.modal.commit.promotion.shown", "non.modal.commit.promotion.accepted", "non.modal.commit.promotion.rejected", "changes.view.refresh", "cloned.project.opened", "clone.invoked", "clm.refresh.finished", "clm.refresh.started", "annotate.started", "annotate.finished" ]
      }
    }
  }, {
    "id" : "vcs.application.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:commit.from.local.changes|non.modal.commit|non.modal.commit.new.installation|non.modal.commit.promotion}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum:shown|accepted|rejected}" ]
      }
    }
  }, {
    "id" : "vcs.back.forward.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "enums" : {
        "__event_id" : [ "editor", "local.changes", "project.view", "vcs.log", "diff.viewer", "unknown" ]
      }
    }
  }, {
    "id" : "vcs.change.reminder",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:changelist_changed|changes_committed|node_expanded}" ],
      "event_data" : {
        "committed_files" : [ "{regexp#hash}" ],
        "cur_modified_files" : [ "{regexp#hash}" ],
        "displayed_prediction" : [ "{regexp#hash}" ],
        "empty_reason" : [ "{enum#__empty_reason}", "{enum:graph_changed|traverser_invalid}" ],
        "prediction_for_files" : [ "{regexp#hash}" ],
        "prev_modified_files" : [ "{regexp#hash}" ]
      },
      "enums" : {
        "__empty_reason" : [ "service_init", "too_many_files", "data_manager_removed", "requirements_not_met", "data_pack_is_not_full", "data_pack_changed", "exception_thrown", "calculation_canceled", "unexpected_reason" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "changes_committed",
      "fields" : [ "committed_files", "displayed_prediction", "cur_modified_files", "prediction_for_files" ]
    }, {
      "event" : "node_expanded",
      "fields" : [ "displayed_prediction", "prediction_for_files" ]
    }, {
      "event" : "changelist_changed",
      "fields" : [ "displayed_prediction", "cur_modified_files", "prev_modified_files", "prediction_for_files" ]
    } ]
  }, {
    "id" : "vcs.clone",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:cloning.started|cloning.finished}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "ide_activity_id" : [ "{regexp#integer}" ],
        "status" : [ "{enum:SUCCESS|PROGRESS|FAILURE|CANCEL}" ]
      }
    }
  }, {
    "id" : "vcs.configuration",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "is_base_dir" : [ "{enum#boolean}" ],
        "is_project_mapping" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "vcs" : [ "{enum#vcs}", "{enum:None}" ]
      },
      "enums" : {
        "__event_id" : [ "active.vcs", "mapping", "project.mapped.root", "mapped.roots", "changelists", "unversioned.files", "ignored.files" ]
      }
    }
  }, {
    "id" : "vcs.diff",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "diff_place" : [ "{enum:Default|ChangesView|VcsLogView|VcsFileHistoryView|CommitDialog|Merge|TestsFiledAssertions}" ],
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum:TOP|BOTTOM|HIDDEN}", "{regexp#integer}", "{enum:DEFAULT|TRIM_WHITESPACES|IGNORE_WHITESPACES|IGNORE_WHITESPACES_CHUNKS|FORMATTING}", "{enum:INSPECTIONS|ADVANCED|SIMPLE}", "{enum:BY_LINE|BY_WORD|BY_WORD_SPLIT|BY_CHAR|DO_NOT_HIGHLIGHT}" ]
      },
      "enums" : {
        "__event_id" : [ "show.breadcrumbs", "use.external.diff.by.default", "show.indent.lines", "use.unified.diff", "iterate.next.file", "use.soft.wraps", "context.range", "ignore.policy", "show.line.numbers", "collapse.unchanged", "show.white.spaces", "enable.read.lock", "use.external.diff", "show.warnings.policy", "merge.enable.lst.markers", "aligned.changes", "sync.scroll", "merge.apply.non.conflicted", "use.external.merge", "highlight.policy", "enable.external.diff.tools" ]
      }
    }
  }, {
    "id" : "vcs.diff.trigger",
    "builds" : [ {
      "from" : "192.5430"
    } ],
    "rules" : {
      "event_id" : [ "{enum:toggle.highlight.policy|toggle.ignore.policy|toggle.diff.tool}" ],
      "event_data" : {
        "diff_place" : [ "{enum#diff_place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "value" : [ "{enum#highlight_policy}", "{enum#ignore_policy}", "{enum#diff_tool}" ]
      },
      "enums" : {
        "diff_place" : [ "Default", "ChangesView", "VcsLogView", "CommitDialog", "TestsFiledAssertions", "Merge", "DirDiff", "External", "unknown" ],
        "diff_tool" : [ "Side-by-side_viewer", "Binary_file_viewer", "Unified_viewer", "Error_viewer", "Patch_content_viewer", "Apply_patch_somehow", "Data_Diff_Viewer", "Database_Schema_Diff_Viewer", "Directory_viewer", "SVN_properties_viewer", "Jupyter_side-by-side_viewer" ],
        "highlight_policy" : [ "BY_LINE", "BY_WORD", "BY_WORD_SPLIT", "BY_CHAR", "DO_NOT_HIGHLIGHT" ],
        "ignore_policy" : [ "DEFAULT", "TRIM_WHITESPACES", "IGNORE_WHITESPACES", "IGNORE_WHITESPACES_CHUNKS", "FORMATTING" ]
      }
    }
  }, {
    "id" : "vcs.editor.actions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:action.finished}" ],
      "event_data" : {
        "action_id" : [ "{util#action}", "{enum#action}" ],
        "class" : [ "{util#class_name}" ],
        "input_event" : [ "{util#shortcut}" ],
        "parent" : [ "{util#class_name}" ],
        "place" : [ "{util#place}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      }
    }
  }, {
    "id" : "vcs.github",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:accounts}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "has_enterprise" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "vcs.github.pullrequest.counters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action" : [ "{enum:REQUEST_REVIEW|REQUEST_REVIEW_MYSELF|RE_REQUEST_REVIEW|CLOSE|REOPEN|POST_REVIEW|MERGE|SQUASH_MERGE|REBASE_MERGE}" ],
        "anonymized_id" : [ "{regexp#hash}" ],
        "anonymous_id" : [ "{regexp#hash}" ],
        "count" : [ "{regexp#integer}" ],
        "has_assignee" : [ "{enum#boolean}" ],
        "has_author" : [ "{enum#boolean}" ],
        "has_label" : [ "{enum#boolean}" ],
        "has_review_state" : [ "{enum#boolean}" ],
        "has_search" : [ "{enum#boolean}" ],
        "has_state" : [ "{enum#boolean}" ],
        "is_default" : [ "{enum#boolean}" ],
        "method" : [ "{enum:MERGE|SQUASH|REBASE}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "timeline.opened", "diff.opened", "merged", "server.meta.collected", "list.opened", "details.branch.checked.out", "details.opened", "details.prev.commit.chosen", "details.checks.opened", "list.filters.applied", "details.next.commit.chosen", "details.branches.opened", "details.commit.chosen", "details.additional.actions.invoked", "selectors.opened", "details.change.selected", "new.pr.view.opened" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "server.meta.collected",
      "fields" : [ "anonymized_id", "anonymous_id" ]
    } ]
  }, {
    "id" : "vcs.github.pullrequests",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:toolwindow}" ],
      "event_data" : {
        "initialized_tabs" : [ "{regexp#integer}" ],
        "tabs" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "vcs.gitlab",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:accounts}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "has_enterprise" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "vcs.gitlab.counters",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "action" : [ "{enum:MERGE|SQUASH_MERGE|APPROVE|UNAPPROVE|CLOSE|REOPEN|SET_REVIEWERS|ADD_NOTE|ADD_DIFF_NOTE|ADD_DISCUSSION_NOTE|CHANGE_DISCUSSION_RESOLVE|UPDATE_NOTE|DELETE_NOTE|SUBMIT_DRAFT_NOTES|POST_REVIEW}", "{enum:REBASE}", "{enum:REVIEWER_REREVIEW}", "{enum:ADD_DRAFT_DIFF_NOTE|ADD_DRAFT_DISCUSSION_NOTE|ADD_DRAFT_NOTE}", "{enum:POST_DRAFT_NOTE|BRANCH_CHECKOUT}", "{enum:SHOW_BRANCH_IN_LOG}", "{enum:CREATE_OPEN_DIALOG|CREATE_OK|CREATE_CANCEL|CREATE_CREATED|CREATE_ERRORED}" ],
        "class" : [ "{util#class_name}" ],
        "edition" : [ "{enum:Community|Enterprise}" ],
        "error_status_code" : [ "{regexp#integer}" ],
        "has_assignee" : [ "{enum#boolean}" ],
        "has_author" : [ "{enum#boolean}" ],
        "has_label" : [ "{enum#boolean}" ],
        "has_reviewer" : [ "{enum#boolean}" ],
        "has_search" : [ "{enum#boolean}" ],
        "has_state" : [ "{enum#boolean}" ],
        "is_cumulative" : [ "{enum#boolean}" ],
        "is_default_server" : [ "{enum#boolean}" ],
        "note_action_place" : [ "{enum:TIMELINE|DIFF|EDITOR}" ],
        "open_action_place" : [ "{enum:ACTION|CREATION|TOOLWINDOW|NOTIFICATION}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "query" : [ "{enum:GET_CURRENT_USER|GET_MERGE_REQUEST|GET_MERGE_REQUEST_DISCUSSIONS|GET_PROJECT_LABELS|GET_PROJECT_MEMBERS|TOGGLE_MERGE_REQUEST_DISCUSSION_RESOLVE|CREATE_NOTE|CREATE_DIFF_NOTE|CREATE_REPLY_NOTE|UPDATE_NOTE|DESTROY_NOTE|MERGE_REQUEST_ACCEPT|MERGE_REQUEST_SET_DRAFT|MERGE_REQUEST_SET_REVIEWERS|MERGE_REQUEST_UPDATE}", "{enum:MERGE_REQUEST_REVIEWER_REREVIEW}", "{enum:CREATE_SNIPPET|UPDATE_SNIPPET_BLOB|GET_MEMBER_PROJECTS}", "{enum:FIND_MERGE_REQUESTS}", "{enum:GET_METADATA}", "{enum:MERGE_REQUEST_CREATE|GET_PROJECT_REPOSITORY}", "{enum:GET_PROJECT_WORK_ITEMS}", "{enum:GET_MERGE_REQUEST_COMMITS}", "{enum:AWARD_EMOJI_TOGGLE}", "{enum:GET_PROJECT}" ],
        "request_name" : [ "{enum:REST_GET_CURRENT_USER|REST_GET_PROJECT_USERS|REST_GET_COMMIT|REST_GET_COMMIT_DIFF|REST_GET_MERGE_REQUEST_DIFF|REST_GET_MERGE_REQUEST_CHANGES|REST_DELETE_DRAFT_NOTE|REST_GET_DRAFT_NOTES|REST_SUBMIT_DRAFT_NOTES|REST_SUBMIT_SINGLE_DRAFT_NOTE|REST_CREATE_DRAFT_NOTE|REST_UPDATE_DRAFT_NOTE|REST_GET_MERGE_REQUESTS|REST_APPROVE_MERGE_REQUEST|REST_UNAPPROVE_MERGE_REQUEST|REST_REBASE_MERGE_REQUEST|REST_PUT_MERGE_REQUEST_REVIEWERS|REST_GET_MERGE_REQUEST_COMMITS|REST_GET_MERGE_REQUEST_STATE_EVENTS|REST_GET_MERGE_REQUEST_LABEL_EVENTS|REST_GET_MERGE_REQUEST_MILESTONE_EVENTS|GQL_GET_METADATA|GQL_GET_CURRENT_USER|GQL_GET_MERGE_REQUEST|GQL_FIND_MERGE_REQUEST|GQL_GET_MERGE_REQUEST_DISCUSSIONS|GQL_GET_PROJECT_LABELS|GQL_GET_PROJECT_REPOSITORY|GQL_GET_MEMBER_PROJECTS|GQL_TOGGLE_MERGE_REQUEST_DISCUSSION_RESOLVE|GQL_CREATE_NOTE|GQL_CREATE_DIFF_NOTE|GQL_CREATE_REPLY_NOTE|GQL_CREATE_SNIPPET|GQL_UPDATE_NOTE|GQL_UPDATE_SNIPPET_BLOB|GQL_DESTROY_NOTE|GQL_MERGE_REQUEST_ACCEPT|GQL_MERGE_REQUEST_CREATE|GQL_MERGE_REQUEST_SET_DRAFT|GQL_MERGE_REQUEST_SET_REVIEWERS|GQL_MERGE_REQUEST_UPDATE|GQL_MERGE_REQUEST_REVIEWER_REREVIEW}", "{enum:REST_GET_PROJECT_NAMESPACE}", "{enum:GQL_GET_PROJECT_WORK_ITEMS}", "{enum:GQL_GET_MERGE_REQUEST_COMMITS}", "{enum:GQL_AWARD_EMOJI_TOGGLE}", "{enum:GQL_GET_PROJECT}" ],
        "tab_type" : [ "{enum:CREATION|DETAILS|LIST|SELECTOR}" ],
        "version" : [ "{regexp#version}" ]
      },
      "enums" : {
        "__event_id" : [ "mergerequests.toolwindow.login.opened", "mergerequests.list.filters.applied", "mergerequests.details.opened", "mergerequests.list.opened", "mergerequests.diff.opened", "mergerequests.action.performed", "api.gql.model.error.occurred", "api.server.error.occurred", "api.json.deserialization.error.occurred", "api.server.version-fetched", "snippets.action.performed", "toolwindow.tab.opened", "mergerequests.creation.failed", "mergerequests.creation.started", "toolwindow.tab.closed", "mergerequests.creation.branches.changed", "mergerequests.creation.succeeded", "mergerequests.creation.reviewer.adjusted" ]
      }
    }
  }, {
    "id" : "vcs.log.data",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "vcs" : [ "{enum#vcs}", "{enum:third.party}" ]
      },
      "enums" : {
        "__event_id" : [ "commit.count", "branches.count", "users.count", "root.count", "dataInitialized" ]
      }
    }
  }, {
    "id" : "vcs.log.index.application",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:big.repositories|index.disabled.in.registry|index.forced.in.registry}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "value" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "vcs.log.index.project",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "file_path" : [ "{regexp#hash}" ],
        "is_paused" : [ "{enum#boolean}" ],
        "value" : [ "{enum#boolean}" ]
      },
      "enums" : {
        "__event_id" : [ "indexing.time.minutes", "indexing.too.long.notification", "resume.indexing.click", "index.disabled.in.project", "indexing.time.by.root" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "indexing.time.by.root",
      "fields" : [ "file_path" ]
    } ]
  }, {
    "id" : "vcs.log.performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:file.history.collected.renames|file.history.computed|vcs.log.filtered}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "filter_kind" : [ "{enum:Vcs|Index|Mixed|Memory}" ],
        "filtered_commit_count" : [ "{enum:ALL}", "{regexp#integer}" ],
        "filters" : [ "{enum:branch|revision|range|user|hash|date|text|structure|roots}" ],
        "intelli_sort_type" : [ "{enum:Off|Standard|Linear}" ],
        "repository_commit_count" : [ "{regexp#integer}" ],
        "vcs" : [ "{enum:third.party}", "{enum#vcs}", "{enum:Git|hg4idea|Perforce}" ],
        "vcs_list" : [ "{enum:third.party}", "{enum#vcs}" ],
        "with_index" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "vcs.log.trigger",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "class" : [ "{util#class_name}" ],
        "context" : [ "{enum:history|log}" ],
        "filter_name" : [ "{enum:branch|revision|range|user|hash|date|text|structure|roots}" ],
        "has_revision" : [ "{enum#boolean}" ],
        "input_event" : [ "{util#shortcut}" ],
        "kind" : [ "{enum:multiple|folder|file}" ],
        "parent_commit" : [ "{enum#boolean}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ],
        "target" : [ "{enum:node|arrow|root.column}" ],
        "type" : [ "{enum:ALL_OPTION|CLOSE_BUTTON}" ]
      },
      "enums" : {
        "__event_id" : [ "action.called", "tab.navigated", "column.reset", "table.clicked", "filter.set", "history.shown", "filter.reset", "idle.indexer.started", "place.history.used" ]
      }
    }
  }, {
    "id" : "vcs.log.ui",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "id" : [ "{enum:MY_COMMITS|MERGE_COMMITS|CURRENT_BRANCH|THIRD_PARTY}" ],
        "name" : [ "{enum:branch|revision|range|user|hash|date|text|structure|roots}", "{enum:default.author|default.hash|default.date}" ],
        "value" : [ "{enum:Normal|Bek|LinearBek}" ]
      },
      "enums" : {
        "__event_id" : [ "onlyAffectedChanges", "textFilter.matchCase", "labels.onTheLeft", "long.edges", "details", "parentChanges", "roots", "diffPreview", "uiInitialized", "filter", "column", "labels.showTagNames", "labels.compact", "sort", "highlighter", "textFilter.regex", "diffPreviewOnTheBottom", "additionalTabs" ]
      }
    }
  }, {
    "id" : "vcs.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ],
        "value" : [ "{enum:ask|disabled|silently|unknown}" ]
      },
      "enums" : {
        "__event_id" : [ "offer.move.failed.committed", "commit.before.check.code.smell", "commit.before.check.non.empty.comment", "changelist.preselect.existing", "commit.use.right.margin", "offer.remove.empty.changelist", "show.changes.preview", "commit.before.optimize.imports", "include.text.into.shelf", "offer.move.partially.committed", "commit.before.reformat.project", "commit.before.check.todo", "commit.show.unversioned", "check.conflicts.in.background", "commit.before.check.code.cleanup", "commit.clear.initial.comment", "commit.before.rearrange", "changelist.make.new.active", "asked.add.external.files", "asked.share.project.configuration.files", "share.project.configuration.files", "add.external.files.silently", "standard.confirmation.for.add", "standard.confirmation.for.remove" ]
      }
    }
  }, {
    "id" : "vfs",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "accumulated_errors" : [ "{regexp#integer}" ],
        "attributes_errors" : [ "{regexp#integer}" ],
        "cancelled" : [ "{enum#boolean}" ],
        "check_duration_ms" : [ "{regexp#integer}" ],
        "contents_checked" : [ "{regexp#integer}" ],
        "contents_errors" : [ "{regexp#integer}" ],
        "creation_timestamp" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "errors_happened" : [ "{enum:SCHEDULED_REBUILD|NOT_CLOSED_PROPERLY|IMPL_VERSION_MISMATCH|NAME_STORAGE_INCOMPLETE|CONTENT_STORAGES_NOT_MATCH|CONTENT_STORAGES_INCOMPLETE|UNRECOGNIZED}", "{enum:HAS_ERRORS_IN_PREVIOUS_SESSION}", "{enum:RECOVERED_FROM_LOG}", "{enum:ATTRIBUTES_STORAGE_CORRUPTED}" ],
        "events" : [ "{regexp#integer}" ],
        "file_records_attribute_unresolvable" : [ "{regexp#integer}" ],
        "file_records_checked" : [ "{regexp#integer}" ],
        "file_records_children_checked" : [ "{regexp#integer}" ],
        "file_records_children_inconsistent" : [ "{regexp#integer}" ],
        "file_records_content_not_null" : [ "{regexp#integer}" ],
        "file_records_content_unresolvable" : [ "{regexp#integer}" ],
        "file_records_deleted" : [ "{regexp#integer}" ],
        "file_records_general_errors" : [ "{regexp#integer}" ],
        "file_records_name_null" : [ "{regexp#integer}" ],
        "file_records_name_unresolvable" : [ "{regexp#integer}" ],
        "file_records_null_parents" : [ "{regexp#integer}" ],
        "finish_time_ms" : [ "{regexp#integer}" ],
        "full_scans" : [ "{regexp#integer}" ],
        "impl_version" : [ "{regexp#integer}" ],
        "init_attempts" : [ "{regexp#integer}" ],
        "init_duration_ms" : [ "{regexp#integer}" ],
        "init_kind" : [ "{enum:CREATED_EMPTY|LOADED_NORMALLY|RECOVERED|SCHEDULED_REBUILD|NOT_CLOSED_PROPERLY|IMPL_VERSION_MISMATCH|NAME_STORAGE_INCOMPLETE|CONTENT_STORAGES_NOT_MATCH|CONTENT_STORAGES_INCOMPLETE|UNRECOGNIZED}", "{enum:RECOVERED_FROM_LOG}", "{enum:ATTRIBUTES_STORAGE_CORRUPTED}", "{enum:HAS_ERRORS_IN_PREVIOUS_SESSION}" ],
        "io_time_ms" : [ "{regexp#integer}" ],
        "listeners_ms" : [ "{regexp#integer}" ],
        "names_checked" : [ "{regexp#integer}" ],
        "names_general_errors" : [ "{regexp#integer}" ],
        "names_ids_resolved_to_null" : [ "{regexp#integer}" ],
        "names_inconsistent_resolution" : [ "{regexp#integer}" ],
        "names_resolved_to_null" : [ "{regexp#integer}" ],
        "partial_scans" : [ "{regexp#integer}" ],
        "rebuild_cause" : [ "{enum:NONE|INITIAL|DATA_INCONSISTENT|SCHEDULED_REBUILD|NOT_CLOSED_PROPERLY|IMPL_VERSION_MISMATCH}", "{enum:CONTENT_STORAGES_NOT_MATCH|CONTENT_STORAGES_INCOMPLETE|NAME_STORAGE_INCOMPLETE|UNRECOGNIZED}" ],
        "recursive" : [ "{enum#boolean}" ],
        "retries" : [ "{regexp#integer}" ],
        "roots_arc" : [ "{regexp#integer}" ],
        "roots_checked" : [ "{regexp#integer}" ],
        "roots_deleted_but_not_removed" : [ "{regexp#integer}" ],
        "roots_errors" : [ "{regexp#integer}" ],
        "roots_local" : [ "{regexp#integer}" ],
        "roots_other" : [ "{regexp#integer}" ],
        "roots_with_parents" : [ "{regexp#integer}" ],
        "sessions" : [ "{regexp#integer}" ],
        "start_time_ms" : [ "{regexp#integer}" ],
        "time_since_startup_ms" : [ "{regexp#integer}" ],
        "tries" : [ "{regexp#integer}" ],
        "vfs_creation_timestamp_ms" : [ "{regexp#integer}" ],
        "vfs_time_ms" : [ "{regexp#integer}" ],
        "wait_ms" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "refreshed", "events", "refresh_scan", "refresh_session", "initial_refresh", "initialization", "health_check", "internal_errors", "background_refresh" ]
      }
    }
  }, {
    "id" : "vim.actions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:tracked|copied}" ],
      "event_data" : {
        "action_id" : [ "{util#action}" ]
      }
    }
  }, {
    "id" : "vim.common",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:vim.common}" ],
      "event_data" : {
        "enabled_extensions" : [ "{enum:textobj-entire|argtextobj|ReplaceWithRegister|vim-paragraph-motion|highlightedyank|multiple-cursors|exchange|NERDTree|surround|commentary|matchit|textobj-indent}" ],
        "is_EAP_active" : [ "{enum#boolean}" ],
        "is_plugin_enabled" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "vim.handlers",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:vim.handler}" ],
      "event_data" : {
        "handler" : [ "{enum:NORMAL_UNDEFINED|NORMAL_IDE|NORMAL_VIM|INSERT_UNDEFINED|INSERT_IDE|INSERT_VIM|VISUAL_AND_SELECT_UNDEFINED|VISUAL_AND_SELECT_IDE|VISUAL_AND_SELECT_VIM}" ],
        "key_stroke" : [ "{enum:Ctrl+1|Ctrl+2|Ctrl+3|Ctrl+4|Ctrl+5|Ctrl+6|Ctrl+7|Ctrl+8|Ctrl+9|Ctrl+0|Ctrl+Shift+1|Ctrl+Shift+2|Ctrl+Shift+3|Ctrl+Shift+4|Ctrl+Shift+5|Ctrl+Shift+6|Ctrl+Shift+7|Ctrl+Shift+8|Ctrl+Shift+9|Ctrl+Shift+0|Ctrl+A|Ctrl+B|Ctrl+C|Ctrl+D|Ctrl+E|Ctrl+F|Ctrl+G|Ctrl+H|Ctrl+I|Ctrl+J|Ctrl+K|Ctrl+L|Ctrl+M|Ctrl+N|Ctrl+O|Ctrl+P|Ctrl+Q|Ctrl+R|Ctrl+S|Ctrl+T|Ctrl+U|Ctrl+V|Ctrl+W|Ctrl+X|Ctrl+Y|Ctrl+Z|Ctrl+Open Bracket|Ctrl+Close Bracket|Ctrl+Shift+A|Ctrl+Shift+B|Ctrl+Shift+C|Ctrl+Shift+D|Ctrl+Shift+E|Ctrl+Shift+F|Ctrl+Shift+G|Ctrl+Shift+H|Ctrl+Shift+I|Ctrl+Shift+J|Ctrl+Shift+K|Ctrl+Shift+L|Ctrl+Shift+M|Ctrl+Shift+N|Ctrl+Shift+O|Ctrl+Shift+P|Ctrl+Shift+Q|Ctrl+Shift+R|Ctrl+Shift+S|Ctrl+Shift+T|Ctrl+Shift+U|Ctrl+Shift+V|Ctrl+Shift+W|Ctrl+Shift+X|Ctrl+Shift+Y|Ctrl+Shift+Z|Ctrl+Shift+Open Bracket|Ctrl+Shift+Close Bracket}" ]
      }
    }
  }, {
    "id" : "vim.options",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:vim.options}" ],
      "event_data" : {
        "ideajoin" : [ "{enum#boolean}" ],
        "ideamarks" : [ "{enum:keep|select|visual}", "{enum#boolean}" ],
        "ideaput" : [ "{enum#boolean}" ],
        "ideaselection" : [ "{enum#boolean}" ],
        "ideastatusicon" : [ "{enum:enabled|gray|disabled}" ],
        "ideavimsupport" : [ "{enum:dialog|singleline|dialoglegacy}" ],
        "ideawrite" : [ "{enum:all|file}" ]
      }
    }
  }, {
    "id" : "vim.vimscript",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:vim.vimscript}" ],
      "event_data" : {
        "extensions_enabled_by_plug" : [ "{enum:textobj-entire|argtextobj|ReplaceWithRegister|vim-paragraph-motion|highlightedyank|multiple-cursors|exchange|NERDTree|surround|commentary|matchit|textobj-indent}" ],
        "extensions_enabled_by_set" : [ "{enum:textobj-entire|argtextobj|ReplaceWithRegister|vim-paragraph-motion|highlightedyank|multiple-cursors|exchange|NERDTree|surround|commentary|matchit|textobj-indent}" ],
        "ideavimrc_size" : [ "{regexp#integer}" ],
        "is_IDE-specific_configuration_used" : [ "{enum#boolean}" ],
        "is_function_call_used" : [ "{enum#boolean}" ],
        "is_function_declaration_used" : [ "{enum#boolean}" ],
        "is_if_used" : [ "{enum#boolean}" ],
        "is_loop_used" : [ "{enum#boolean}" ],
        "is_map_expr_used" : [ "{enum#boolean}" ],
        "number_of_sourced_files" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "vim.widget",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:vim.widget}" ],
      "event_data" : {
        "is-mode-widget-shown" : [ "{enum#boolean}" ],
        "mode-widget-theme-dark" : [ "{enum:TERM|COLORLESS|ADVANCED CUSTOMIZATION}" ],
        "mode-widget-theme-light" : [ "{enum:TERM|COLORLESS|ADVANCED CUSTOMIZATION}" ]
      }
    }
  }, {
    "id" : "vulnerability.package.checker",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "buildModel" : [ "{util#class_name}" ],
        "buildModels" : [ "{util#class_name}" ],
        "count" : [ "{regexp#integer}" ],
        "duration_ms" : [ "{regexp#integer}" ],
        "ignoreReason" : [ "{enum:NOT_EXPLOITABLE|IN_PROGRESS|FIXED_IN_BRANCH|OTHER}" ],
        "plugin" : [ "{util#plugin}" ],
        "plugin_type" : [ "{util#plugin_type}" ],
        "plugin_version" : [ "{util#plugin_version}" ]
      },
      "enums" : {
        "__event_id" : [ "fixLocal", "navigateInfo", "showInfo", "fixGlobal", "globalResult", "localResult", "runGlobal", "localPathResult", "problemTabSelected", "problemTabClosed", "collectDeclaredDependencies", "supportedBuildModels", "dependencyIsIgnored", "supportedBuildModel" ]
      }
    }
  }, {
    "id" : "vulnerability.scanner",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1",
      "to" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "duration" : [ "{regexp#integer}" ],
        "place" : [ "{util#place}" ],
        "projectType" : [ "{enum:Maven|Gradle|GradleKts|Other}" ],
        "scanType" : [ "{enum:All|Dependencies|Http|Secrets}" ],
        "status" : [ "{enum:SUCCESS|CANCELED|HAS_ERROR}" ]
      },
      "enums" : {
        "__event_id" : [ "RunScan", "FinishScan", "Fix", "OpenLink", "BrowseInfo", "AddToIgnore", "Navigate", "FindUsages", "FixProperty" ]
      }
    }
  }, {
    "id" : "web.inspector.usages",
    "builds" : [ ],
    "versions" : [ {
      "from" : "4"
    } ],
    "rules" : {
      "event_id" : [ "{enum:locator.evaluated|selection.updated|url.updated}" ],
      "event_data" : {
        "evaluationType" : [ "{enum:XPATH|CSS|PLAYWRIGHT_JS}" ],
        "isAqua" : [ "{enum#boolean}" ],
        "locatorType" : [ "{enum:XPATH|CSS|TAG_WITH_CLASSES|ID|NAME|TEXT|DATA|ARIA_LABEL}" ],
        "source" : [ "{enum:intention|navigation}", "{enum:NONE|BROWSER|PAGE_STRUCTURE|EVALUATOR|CODE_EDITOR|CACHE}" ]
      }
    }
  }, {
    "id" : "welcome.screen",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:projects.tab.created}" ],
      "event_data" : {
        "recent_paths_count" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "welcome.screen.startup.performance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:welcome.screen.shown}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "splash_screen_became_visible_duration_ms" : [ "{regexp#integer}" ],
        "splash_screen_was_shown" : [ "{enum#boolean}" ]
      }
    }
  }, {
    "id" : "welcome_screen.clone",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:canceled|success|added|failed}" ],
      "event_data" : {
        "cloneable_projects" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "welcomescreen.interaction",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "config_imported" : [ "{enum#boolean}" ],
        "enabled" : [ "{enum#boolean}" ],
        "first_start" : [ "{enum#boolean}" ],
        "keymap_name" : [ "{enum#keymaps}" ],
        "new_font_size" : [ "{regexp#integer}" ],
        "new_font_size_2d" : [ "{regexp#float}" ],
        "old_font_size" : [ "{regexp#integer}" ],
        "old_font_size_2d" : [ "{regexp#float}" ],
        "sync_os" : [ "{enum#boolean}" ],
        "tab_type" : [ "{enum:TabNavProject|TabNavCustomize|TabNavPlugins|TabNavTutorials|TabNavOther}" ],
        "theme_name" : [ "{enum#look_and_feel}" ]
      },
      "enums" : {
        "__event_id" : [ "color.blindness.changed", "editor.font.changed", "ide.font.changed", "keymap.changed", "laf.changed", "plugins.modified", "project.search", "screen.hidden", "screen.shown", "screen.tab.selected", "debugger.processes.search", "debugger.attach" ]
      }
    }
  }, {
    "id" : "wizard.startup",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:initial_start_experiment_state|initial_start_timeout_triggered|initial_start_succeeded|wizard_stage_ended}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "enabled" : [ "{enum#boolean}" ],
        "group" : [ "{regexp#integer}" ],
        "kind" : [ "{enum:Experimental|Control|Undefined}" ],
        "stage" : [ "{enum:InitialStart|ProductChoicePage|SettingsToSyncPage|SettingsToImportPage|ImportProgressPage}", "{enum:WizardPluginPage|WizardThemePage|WizardKeymapPage}", "{enum:WizardProgressPage}" ]
      }
    }
  }, {
    "id" : "wizard.transfer.settings",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "added_shortcut_count" : [ "{regexp#integer}" ],
        "count" : [ "{regexp#integer}" ],
        "feature" : [ "{enum:AiAssistant|CSharp|ChineseLanguage|Dart|DatabaseSupport|Debugger|Docker|DotNetDecompiler|DummyBuiltInFeature|DummyPlugin|EditorConfig|Flutter|Git|Gradle|IdeaVim|Ideolog|JapaneseLanguage|Java|KoreanLanguage|Kotlin|Kubernetes|LanguageSupport|LiveTemplates|Lombok|Maven|Monokai|NuGet|Prettier|ReSharper|RunConfigurations|Scala|Solarized|SpellChecker|TeamCity|TestExplorer|Toml|TsLint|Unity|Vue|WebSupport|Wsl|XamlStyler}", "{enum:Rust}", "{enum:NodeJsSupport|RustSupport}", "{util#known_plugin_id}" ],
        "ide" : [ "{enum:DummyIde|VSCode|VisualStudio|VisualStudioForMac}" ],
        "keymap" : [ "{enum:Default|VsCode|VsCodeMac|VsForMac|VisualStudio2022}" ],
        "laf" : [ "{enum:Light|Darcula|HighContrast|Dark}" ],
        "removed_shortcut_count" : [ "{regexp#integer}" ],
        "selectedSections" : [ "{enum:LAF|Keymap|Plugins|RecentProjects|SyntaxScheme}" ],
        "timesSwitchedBetweenInstances" : [ "{regexp#integer}" ],
        "type" : [ "{enum:SubName|Registry|ReadSettingsFile|Total}" ],
        "unselectedSections" : [ "{enum:LAF|Keymap|Plugins|RecentProjects|SyntaxScheme}" ],
        "value" : [ "{regexp#integer}" ],
        "version" : [ "{enum:Unknown|V2012|V2015|V2013|V2017|V2019|V2022}" ]
      },
      "enums" : {
        "__event_id" : [ "transfer.settings.shown", "import.failed", "recent.projects.detected", "performance.measured", "feature.detected", "laf.imported", "feature.imported", "recent.projects.transferred", "import.succeeded", "transfer.settings.skipped", "import.started", "instances.of.ide.found", "shortcuts.transferred", "instances.of.ide.failed" ]
      }
    }
  }, {
    "id" : "workspace.model",
    "builds" : [ ],
    "versions" : [ {
      "from" : "3"
    } ],
    "rules" : {
      "event_id" : [ "{enum:cache.loaded|jps.iml.loaded|cache.saved}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "size_bytes" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "wrs.article",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:deleted|created}" ],
      "event_data" : {
        "anonymous_id" : [ "{regexp#hash}" ],
        "article_id" : [ "{regexp#hash}" ],
        "template" : [ "{regexp#hash}" ],
        "template_id" : [ "{regexp#hash}" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "deleted",
      "fields" : [ "anonymous_id", "article_id" ]
    }, {
      "event" : "created",
      "fields" : [ "anonymous_id", "template", "template_id", "article_id" ]
    } ]
  }, {
    "id" : "wrs.config",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:buildprofiles.update|buildprofiles.updated}" ],
      "event_data" : {
        "solution_name" : [ "{regexp#hash}" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "buildprofiles.update",
      "fields" : [ "solution_name" ]
    }, {
      "event" : "buildprofiles.updated",
      "fields" : [ "solution_name" ]
    } ]
  }, {
    "id" : "wrs.generate.api",
    "builds" : [ ],
    "versions" : [ {
      "from" : "2"
    } ],
    "rules" : {
      "event_id" : [ "{enum:menu.opened|generate.triggered}" ],
      "event_data" : {
        "create_separate_pages_endpoints_methods" : [ "{enum#boolean}" ],
        "create_separate_pages_schemas" : [ "{enum#boolean}" ],
        "file_type" : [ "{util#file_type}" ]
      }
    }
  }, {
    "id" : "wrs.instance",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:create|delete|created|deleted}" ],
      "event_data" : {
        "anonymous_id" : [ "{regexp#hash}" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "deleted",
      "fields" : [ "anonymous_id" ]
    }, {
      "event" : "delete",
      "fields" : [ "anonymous_id" ]
    }, {
      "event" : "create",
      "fields" : [ "anonymous_id" ]
    }, {
      "event" : "created",
      "fields" : [ "anonymous_id" ]
    } ]
  }, {
    "id" : "wrs.onboarding",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "format" : [ "{enum:xml|md}" ],
        "from_context_menu" : [ "{enum#boolean}" ],
        "interactions_count" : [ "{regexp#integer}" ],
        "name" : [ "{enum:empty|howto|overview|reference|tutorial}" ],
        "option" : [ "{enum:content|documentation|generate|topics}" ]
      },
      "enums" : {
        "__event_id" : [ "opened", "closed", "template.chosen", "quick.start.clicked", "new.project.button.clicked", "new.instance.button.clicked" ]
      }
    }
  }, {
    "id" : "wrs.toc",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum#__event_id}" ],
      "event_data" : {
        "above" : [ "{enum#boolean}" ],
        "anonymous_id" : [ "{regexp#hash}" ],
        "article_above_target" : [ "{enum#boolean}" ],
        "article_id" : [ "{regexp#hash}" ],
        "article_ids" : [ "{regexp#hash}" ],
        "target_id" : [ "{regexp#hash}" ],
        "toc_depth" : [ "{regexp#integer}" ]
      },
      "enums" : {
        "__event_id" : [ "move.nextTo", "move.into", "insert", "remove", "removed", "inserted", "moved.next_to", "moved.into" ]
      }
    },
    "anonymized_fields" : [ {
      "event" : "move.into",
      "fields" : [ "article_id", "target_id" ]
    }, {
      "event" : "insert",
      "fields" : [ "anonymous_id" ]
    }, {
      "event" : "remove",
      "fields" : [ "article_ids" ]
    }, {
      "event" : "removed",
      "fields" : [ "article_ids" ]
    }, {
      "event" : "moved.into",
      "fields" : [ "article_id", "target_id" ]
    }, {
      "event" : "inserted",
      "fields" : [ "anonymous_id" ]
    }, {
      "event" : "moved.next_to",
      "fields" : [ "article_id", "target_id" ]
    }, {
      "event" : "move.nextTo",
      "fields" : [ "article_id", "target_id" ]
    } ]
  }, {
    "id" : "wsl.installations",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:count}" ],
      "event_data" : {
        "count" : [ "{regexp#integer}" ],
        "version" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "xdebugger.actions",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:thread.selected|frame.selected|session.selected|frames.updated}" ],
      "event_data" : {
        "duration_ms" : [ "{regexp#integer}" ],
        "file_type" : [ "{util#frame_type}" ],
        "frames_per_file_type" : [ "{regexp#integer}" ],
        "location" : [ "{enum:framesView|threadsView}" ],
        "total_frames" : [ "{regexp#integer}" ]
      }
    }
  }, {
    "id" : "xdebugger.settings.ide",
    "builds" : [ ],
    "versions" : [ {
      "from" : "1"
    } ],
    "rules" : {
      "event_id" : [ "{enum:show.all.frames}" ],
      "event_data" : {
        "enabled" : [ "{enum#boolean}" ]
      }
    }
  } ],
  "rules" : {
    "enums" : {
      "action" : [ "git4idea.rebase.retry", "git4idea.rebase.continue", "git4idea.rebase.abort", "git4idea.rebase.resolve" ],
      "boolean" : [ "true", "false", "TRUE", "FALSE", "True", "False" ],
      "build_tools" : [ "Maven", "Gradle", "gradle", "sbt", "Clojure_Deps", "clojure_deps", "Pants", "pants", "bsp", "Kobalt", "kobalt", "undefined.system", "third.party", "SPM", "CompDB", "Compilation_Database", "Makefile", "Meson", "PlatformIO" ],
      "dotnet_technologies" : [ ".NET_Core", ".NET Core", ".NET_Classic", ".NET Classic", "Avalonia", "C++", "Godot", "Managed_C++", "Managed C++", "Silverlight", "UE4", "UE5", "UWP", "Unity", "UnitySidecar", "MAUI", "WPF", "Web_Classic", "Web Classic", "Web_Core", "Web Core", "WebSite", "WinRT", "Sql Database Project", "WindowsForms_Classic", "WindowsForms Classic", "WindowsForms Core", "WindowsForms_Core", "WindowsPhone", "Uno", "Xamarin", "XamarinForms", "Azure_Function", "Azure Function", "AzureFunction", "Xamarin.Mac", "Xamarin.Android", "Xamarin.iOS", "Xamarin.PlayStation3", "Xamarin.PlayStation4", "Xamarin.PlayStationVita", "Xamarin.WatchOS", "Xamarin.TVOS", "Xamarin.Xbox360", "Xamarin.XboxOne", "UnrealGame", "UnrealModule", "UnrealPlugin", "UnrealFolder", "Unreal Engine (any)" ],
      "grazie_rule_ids" : [ "Google_Developer_Documentation_Style_Guide.Contractions", "Google_Developer_Documentation_Style_Guide.Ellipses", "Google_Developer_Documentation_Style_Guide.EmDash", "Google_Developer_Documentation_Style_Guide.Exclamation", "Google_Developer_Documentation_Style_Guide.HeadingPunctuation", "Google_Developer_Documentation_Style_Guide.Latin", "Google_Developer_Documentation_Style_Guide.LyHyphens", "Google_Developer_Documentation_Style_Guide.OptionalPlurals", "Google_Developer_Documentation_Style_Guide.Parens", "Google_Developer_Documentation_Style_Guide.Spacing", "Google_Developer_Documentation_Style_Guide.WordList", "Insensitive_Writing_(alex).Ablist", "Insensitive_Writing_(alex).Gendered", "Insensitive_Writing_(alex).LGBTQ", "Insensitive_Writing_(alex).ProfanityLikely", "Insensitive_Writing_(alex).Race", "Insensitive_Writing_(alex).Suicide", "JetBrains_Documentation_Style_Guide.En-dashes", "JetBrains_Documentation_Style_Guide.Latin", "JetBrains_Documentation_Style_Guide.Terms", "JetBrains_Documentation_Style_Guide.Unambiguous_contractions", "Legal.Contracts.actual", "Legal.Contracts.actually", "Legal.Contracts.also", "Legal.Contracts.provided", "Legal.Generic.couplets", "Legal.Generic.plainLegalEnglish", "Microsoft_Writing_Style_Guide.Adverbs", "Microsoft_Writing_Style_Guide.Auto", "Microsoft_Writing_Style_Guide.ComplexWords", "Microsoft_Writing_Style_Guide.Contractions", "Microsoft_Writing_Style_Guide.Dashes", "Microsoft_Writing_Style_Guide.Ellipses", "Microsoft_Writing_Style_Guide.GeneralURL", "Microsoft_Writing_Style_Guide.Negative", "Microsoft_Writing_Style_Guide.RangeFormat", "Microsoft_Writing_Style_Guide.Terms", "Microsoft_Writing_Style_Guide.Wordiness", "All", "Grammar.ADJECTIVE_POSITION", "Grammar.ADVERB_ADJECTIVE_CONFUSION", "Grammar.ADVERB_WORD_ORDER", "Grammar.ARTICLE_ISSUES", "Grammar.AUX_MAIN_VERB_FORM", "Grammar.CLAUSE_NEGATION", "Grammar.COMPARATIVE_SUPERLATIVE", "Grammar.CONDITIONAL_ISSUES", "Grammar.GERUND_VS_INFINITIVE", "Grammar.LETS_CONFUSION", "Grammar.MISSING_INFINITIVE_TO", "Grammar.MISSING_OBJECT", "Grammar.MISSING_SUBJECT", "Grammar.MISSING_VERB", "Grammar.OBJECT_PRONOUNS", "Grammar.PLURALS_IN_COMPOUNDS", "Grammar.POLARITY", "Grammar.POSSESSIVE_ISSUES", "Grammar.PREPOSITION_ISSUES", "Grammar.QUANTIFIER_NOUN_COMPATIBILITY", "Grammar.QUESTION_WORD_CONFUSION", "Grammar.RELATIVE_PRONOUN_CONFUSION", "Grammar.SUBJECT_VERB_AGREEMENT", "Grammar.SUBJECT_VERB_INVERSION", "Grammar.TENSE_ADVERBIALS", "Grammar.TO_FINITE", "Grammar.UNEXPECTED_VERB", "Grammar.WORD_REPETITION", "Grammar.WORD_SEPARATION", "Punctuation.ADVERBIAL_COMMA", "Punctuation.COMMA_BEFORE_CC_CLAUSE", "Punctuation.EG_IE_COMMA", "Punctuation.EG_IE_PUNCTUATION", "Punctuation.EXCESSIVE_COLON", "Punctuation.EXCESSIVE_COMMA", "Punctuation.FORMATTING_ISSUES", "Punctuation.HYPHEN_TO_DASH", "Punctuation.HYPHEN_VS_DASH", "Punctuation.JOINING_CLAUSES_WITH_COMMA", "Punctuation.LIST_COLON", "Punctuation.MISSING_QUESTION_MARK", "Punctuation.POLITE_COMMA", "Punctuation.RELATIVE_CLAUSE_COMMA", "Punctuation.RELATIVE_CLAUSE_COMMA_WITH_PROPER_NOUN", "Punctuation.RELATIVE_CLAUSE_COMMA_WITH_THAT", "Punctuation.SUBORDINATION_COMMA", "Semantics.ABSOLUTE_DATE_ISSUES", "Semantics.COMMONLY_CONFUSED_WORDS", "Semantics.RELATIVE_DATE_ISSUES", "Spelling.MISPLACED_SPACE", "Spelling.MISSING_DIACRITIC", "Spelling.NUMBER_ENDING", "Spelling.PROPER_NAMES", "Spelling.SIMILAR_WORD_CONFUSION", "Style.COLLOQUIAL_SPEECH", "Style.DISPREFERRED_SERIAL_COMMA", "Style.ENFORCE_CONTRACTION_USE", "Style.EXCLAMATION_MARK", "Style.EXPRESSIVE_PUNCTUATION", "Style.FAULTY_PARALLELISM", "Style.INFORMAL_SHORT_FORMS", "Style.LESS_READABLE_PASSIVE", "Style.LONG_DEPENDENCY", "Style.LOOKS_LIKE", "Style.MISSING_SERIAL_COMMA", "Style.NOUN_GENDER_BIAS", "Style.OF_CHAIN", "Style.PASSIVE_VOICE", "Style.PRONOUN_GENDER_BIAS", "Style.PUNCTUATION_MARKEDNESS", "Style.REDUNDANCY_GENERAL", "Style.REDUNDANT_OF", "Style.SENTENCE_CAPITALIZATION", "Style.VARIANT_LEXICAL_DIFFERENCES", "Style.VERY_ABUSE", "DE_AGREEMENT", "DE_CASE", "KOMMA_INFINITIVGRUPPEN", "KOMMA_ZWISCHEN_HAUPT_UND_NEBENSATZ", "KOMMA_ZWISCHEN_HAUPT_UND_NEBENSATZ_2", "PFEILE", "PRAEP_PLUS_VERB", "A_GOOGLE", "A_INFINITIVE", "ABOUT_ITS_NN", "AFFECT_EFFECT", "AFTERWARDS_US", "AGREEMENT_SENT_START", "ALL_OF_THE", "ATD_VERBS_TO_COLLOCATION", "AUXILIARY_DO_WITH_INCORRECT_VERB_FORM", "BE_VBP_IN", "BEEN_PART_AGREEMENT", "BY_DEFAULT_COMMA", "COMMA_COMPOUND_SENTENCE", "COMP_THAN", "COMPARISONS_THEN", "DEPEND_ON", "DID_BASEFORM", "DIFFERENT_THAN", "DOUBLE_PUNCTUATION", "DT_DT", "EN_A_VS_AN", "EN_COMPOUNDS", "EN_CONTRACTION_SPELLING", "EN_SPLIT_WORDS_HYPHEN", "EN_UNPAIRED_BRACKETS", "ENGLISH_WORD_REPEAT_RULE", "ETC_PERIOD", "EVERY_EACH_SINGULAR", "FEWER_LESS", "GITHUB", "GOOGLE_PRODUCTS", "HAVE_PART_AGREEMENT", "I_LOWERCASE", "IF_VB", "INFORMATIONS", "IT_IS", "IT_VBZ", "KIND_OF_A", "LC_AFTER_PERIOD", "LETS_LET", "LOG_IN", "LOGGED_IN_HYPHEN", "MD_BASEFORM", "MD_BE_NON_VBP", "MISSING_COMMA_AFTER_INTRODUCTORY_PHRASE", "MISSING_GENITIVE", "MISSING_HYPHEN", "MISSING_TO_BEFORE_A_VERB", "NON_ANTI_JJ", "NOUN_VERB_CONFUSION", "NUMBERS_IN_WORDS", "ON_EXCEL", "OUTSIDE_OF", "PHRASE_REPETITION", "PLURAL_VERB_AFTER_THIS", "POSSESSIVE_APOSTROPHE", "PREPOSITION_VERB", "PRP_VBG", "RECOMMENDED_COMPOUNDS", "SENT_START_CONJUNCTIVE_LINKING_ADVERB_COMMA", "SETUP_VERB", "SOME_OF_THE", "SPLITTED", "THE_SUPERLATIVE", "THIS_NNS", "TO_NON_BASE", "UNLIKELY_OPENING_PUNCTUATION", "UP_TO_DATE_HYPHEN", "VERB_NOUN_CONFUSION", "WHETHER", "DIACRITICS_VERB_N_ADJ", "ES_SIMPLE_REPLACE", "A_INFINITIF", "ACCORD_SUJET_VERBE", "AGREEMENT_POSTPONED_ADJ", "D_N", "FLECHES", "FRENCH_WHITESPACE", "OE", "ON_VERBE", "PLACE_DE_LA_VIRGULE", "UPPERCASE_SENTENCE_START", "VIRG_NON_TROUVEE", "GR_04_002", "PT_BARBARISMS_REPLACE", "PT_WORDINESS_REPLACE", "VERB_COMMA_CONJUNCTION", "DotOrCase", "OPREDELENIA", "PREP_U_and_Noun", "Verb_and_Verb", "WHITESPACE_RULE", "BU", "wa5", "wb4" ],
      "grazie_rule_long_ids" : [ "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.Contractions", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.Ellipses", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.EmDash", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.Exclamation", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.HeadingPunctuation", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.Latin", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.LyHyphens", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.OptionalPlurals", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.Parens", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.Spacing", "Bundled.Yaml.Google_Developer_Documentation_Style_Guide.WordList", "Bundled.Yaml.Insensitive_Writing_(alex).Ablist", "Bundled.Yaml.Insensitive_Writing_(alex).Gendered", "Bundled.Yaml.Insensitive_Writing_(alex).LGBTQ", "Bundled.Yaml.Insensitive_Writing_(alex).ProfanityLikely", "Bundled.Yaml.Insensitive_Writing_(alex).Race", "Bundled.Yaml.Insensitive_Writing_(alex).Suicide", "Bundled.Yaml.JetBrains_Documentation_Style_Guide.En-dashes", "Bundled.Yaml.JetBrains_Documentation_Style_Guide.Latin", "Bundled.Yaml.JetBrains_Documentation_Style_Guide.Terms", "Bundled.Yaml.JetBrains_Documentation_Style_Guide.Unambiguous_contractions", "Bundled.Yaml.Legal.Contracts.actual", "Bundled.Yaml.Legal.Contracts.actually", "Bundled.Yaml.Legal.Contracts.also", "Bundled.Yaml.Legal.Contracts.provided", "Bundled.Yaml.Legal.Generic.couplets", "Bundled.Yaml.Legal.Generic.plainLegalEnglish", "Bundled.Yaml.Microsoft_Writing_Style_Guide.Adverbs", "Bundled.Yaml.Microsoft_Writing_Style_Guide.Auto", "Bundled.Yaml.Microsoft_Writing_Style_Guide.ComplexWords", "Bundled.Yaml.Microsoft_Writing_Style_Guide.Contractions", "Bundled.Yaml.Microsoft_Writing_Style_Guide.Dashes", "Bundled.Yaml.Microsoft_Writing_Style_Guide.Ellipses", "Bundled.Yaml.Microsoft_Writing_Style_Guide.GeneralURL", "Bundled.Yaml.Microsoft_Writing_Style_Guide.Negative", "Bundled.Yaml.Microsoft_Writing_Style_Guide.RangeFormat", "Bundled.Yaml.Microsoft_Writing_Style_Guide.Terms", "Bundled.Yaml.Microsoft_Writing_Style_Guide.Wordiness", "Grazie.MLEC.En.All", "Grazie.RuleEngine.En.Grammar.ADJECTIVE_POSITION", "Grazie.RuleEngine.En.Grammar.ADVERB_ADJECTIVE_CONFUSION", "Grazie.RuleEngine.En.Grammar.ADVERB_WORD_ORDER", "Grazie.RuleEngine.En.Grammar.ARTICLE_ISSUES", "Grazie.RuleEngine.En.Grammar.AUX_MAIN_VERB_FORM", "Grazie.RuleEngine.En.Grammar.CLAUSE_NEGATION", "Grazie.RuleEngine.En.Grammar.COMPARATIVE_SUPERLATIVE", "Grazie.RuleEngine.En.Grammar.CONDITIONAL_ISSUES", "Grazie.RuleEngine.En.Grammar.GERUND_VS_INFINITIVE", "Grazie.RuleEngine.En.Grammar.LETS_CONFUSION", "Grazie.RuleEngine.En.Grammar.MISSING_INFINITIVE_TO", "Grazie.RuleEngine.En.Grammar.MISSING_OBJECT", "Grazie.RuleEngine.En.Grammar.MISSING_SUBJECT", "Grazie.RuleEngine.En.Grammar.MISSING_VERB", "Grazie.RuleEngine.En.Grammar.OBJECT_PRONOUNS", "Grazie.RuleEngine.En.Grammar.PLURALS_IN_COMPOUNDS", "Grazie.RuleEngine.En.Grammar.POLARITY", "Grazie.RuleEngine.En.Grammar.POSSESSIVE_ISSUES", "Grazie.RuleEngine.En.Grammar.PREPOSITION_ISSUES", "Grazie.RuleEngine.En.Grammar.QUANTIFIER_NOUN_COMPATIBILITY", "Grazie.RuleEngine.En.Grammar.QUESTION_WORD_CONFUSION", "Grazie.RuleEngine.En.Grammar.RELATIVE_PRONOUN_CONFUSION", "Grazie.RuleEngine.En.Grammar.SUBJECT_VERB_AGREEMENT", "Grazie.RuleEngine.En.Grammar.SUBJECT_VERB_INVERSION", "Grazie.RuleEngine.En.Grammar.TENSE_ADVERBIALS", "Grazie.RuleEngine.En.Grammar.TO_FINITE", "Grazie.RuleEngine.En.Grammar.UNEXPECTED_VERB", "Grazie.RuleEngine.En.Grammar.WORD_REPETITION", "Grazie.RuleEngine.En.Grammar.WORD_SEPARATION", "Grazie.RuleEngine.En.Punctuation.ADVERBIAL_COMMA", "Grazie.RuleEngine.En.Punctuation.COMMA_BEFORE_CC_CLAUSE", "Grazie.RuleEngine.En.Punctuation.EG_IE_COMMA", "Grazie.RuleEngine.En.Punctuation.EG_IE_PUNCTUATION", "Grazie.RuleEngine.En.Punctuation.EXCESSIVE_COLON", "Grazie.RuleEngine.En.Punctuation.EXCESSIVE_COMMA", "Grazie.RuleEngine.En.Punctuation.FORMATTING_ISSUES", "Grazie.RuleEngine.En.Punctuation.HYPHEN_TO_DASH", "Grazie.RuleEngine.En.Punctuation.HYPHEN_VS_DASH", "Grazie.RuleEngine.En.Punctuation.JOINING_CLAUSES_WITH_COMMA", "Grazie.RuleEngine.En.Punctuation.LIST_COLON", "Grazie.RuleEngine.En.Punctuation.MISSING_QUESTION_MARK", "Grazie.RuleEngine.En.Punctuation.POLITE_COMMA", "Grazie.RuleEngine.En.Punctuation.RELATIVE_CLAUSE_COMMA", "Grazie.RuleEngine.En.Punctuation.RELATIVE_CLAUSE_COMMA_WITH_PROPER_NOUN", "Grazie.RuleEngine.En.Punctuation.RELATIVE_CLAUSE_COMMA_WITH_THAT", "Grazie.RuleEngine.En.Punctuation.SUBORDINATION_COMMA", "Grazie.RuleEngine.En.Semantics.ABSOLUTE_DATE_ISSUES", "Grazie.RuleEngine.En.Semantics.COMMONLY_CONFUSED_WORDS", "Grazie.RuleEngine.En.Semantics.RELATIVE_DATE_ISSUES", "Grazie.RuleEngine.En.Spelling.MISPLACED_SPACE", "Grazie.RuleEngine.En.Spelling.MISSING_DIACRITIC", "Grazie.RuleEngine.En.Spelling.NUMBER_ENDING", "Grazie.RuleEngine.En.Spelling.PROPER_NAMES", "Grazie.RuleEngine.En.Spelling.SIMILAR_WORD_CONFUSION", "Grazie.RuleEngine.En.Style.COLLOQUIAL_SPEECH", "Grazie.RuleEngine.En.Style.DISPREFERRED_SERIAL_COMMA", "Grazie.RuleEngine.En.Style.ENFORCE_CONTRACTION_USE", "Grazie.RuleEngine.En.Style.EXCLAMATION_MARK", "Grazie.RuleEngine.En.Style.EXPRESSIVE_PUNCTUATION", "Grazie.RuleEngine.En.Style.FAULTY_PARALLELISM", "Grazie.RuleEngine.En.Style.INFORMAL_SHORT_FORMS", "Grazie.RuleEngine.En.Style.LESS_READABLE_PASSIVE", "Grazie.RuleEngine.En.Style.LONG_DEPENDENCY", "Grazie.RuleEngine.En.Style.LOOKS_LIKE", "Grazie.RuleEngine.En.Style.MISSING_SERIAL_COMMA", "Grazie.RuleEngine.En.Style.NOUN_GENDER_BIAS", "Grazie.RuleEngine.En.Style.OF_CHAIN", "Grazie.RuleEngine.En.Style.PASSIVE_VOICE", "Grazie.RuleEngine.En.Style.PRONOUN_GENDER_BIAS", "Grazie.RuleEngine.En.Style.PUNCTUATION_MARKEDNESS", "Grazie.RuleEngine.En.Style.REDUNDANCY_GENERAL", "Grazie.RuleEngine.En.Style.REDUNDANT_OF", "Grazie.RuleEngine.En.Style.SENTENCE_CAPITALIZATION", "Grazie.RuleEngine.En.Style.VARIANT_LEXICAL_DIFFERENCES", "Grazie.RuleEngine.En.Style.VERY_ABUSE", "LanguageTool.DE.DE_AGREEMENT", "LanguageTool.DE.DE_CASE", "LanguageTool.DE.KOMMA_INFINITIVGRUPPEN", "LanguageTool.DE.KOMMA_ZWISCHEN_HAUPT_UND_NEBENSATZ", "LanguageTool.DE.KOMMA_ZWISCHEN_HAUPT_UND_NEBENSATZ_2", "LanguageTool.DE.PFEILE", "LanguageTool.DE.PRAEP_PLUS_VERB", "LanguageTool.EN.A_GOOGLE", "LanguageTool.EN.A_INFINITIVE", "LanguageTool.EN.ABOUT_ITS_NN", "LanguageTool.EN.AFFECT_EFFECT", "LanguageTool.EN.AFTERWARDS_US", "LanguageTool.EN.AGREEMENT_SENT_START", "LanguageTool.EN.ALL_OF_THE", "LanguageTool.EN.ATD_VERBS_TO_COLLOCATION", "LanguageTool.EN.AUXILIARY_DO_WITH_INCORRECT_VERB_FORM", "LanguageTool.EN.BE_VBP_IN", "LanguageTool.EN.BEEN_PART_AGREEMENT", "LanguageTool.EN.BY_DEFAULT_COMMA", "LanguageTool.EN.COMMA_COMPOUND_SENTENCE", "LanguageTool.EN.COMP_THAN", "LanguageTool.EN.COMPARISONS_THEN", "LanguageTool.EN.DEPEND_ON", "LanguageTool.EN.DID_BASEFORM", "LanguageTool.EN.DIFFERENT_THAN", "LanguageTool.EN.DOUBLE_PUNCTUATION", "LanguageTool.EN.DT_DT", "LanguageTool.EN.EN_A_VS_AN", "LanguageTool.EN.EN_COMPOUNDS", "LanguageTool.EN.EN_CONTRACTION_SPELLING", "LanguageTool.EN.EN_SPLIT_WORDS_HYPHEN", "LanguageTool.EN.EN_UNPAIRED_BRACKETS", "LanguageTool.EN.ENGLISH_WORD_REPEAT_RULE", "LanguageTool.EN.ETC_PERIOD", "LanguageTool.EN.EVERY_EACH_SINGULAR", "LanguageTool.EN.FEWER_LESS", "LanguageTool.EN.GITHUB", "LanguageTool.EN.GOOGLE_PRODUCTS", "LanguageTool.EN.HAVE_PART_AGREEMENT", "LanguageTool.EN.I_LOWERCASE", "LanguageTool.EN.IF_VB", "LanguageTool.EN.INFORMATIONS", "LanguageTool.EN.IT_IS", "LanguageTool.EN.IT_VBZ", "LanguageTool.EN.KIND_OF_A", "LanguageTool.EN.LC_AFTER_PERIOD", "LanguageTool.EN.LETS_LET", "LanguageTool.EN.LOG_IN", "LanguageTool.EN.LOGGED_IN_HYPHEN", "LanguageTool.EN.MD_BASEFORM", "LanguageTool.EN.MD_BE_NON_VBP", "LanguageTool.EN.MISSING_COMMA_AFTER_INTRODUCTORY_PHRASE", "LanguageTool.EN.MISSING_GENITIVE", "LanguageTool.EN.MISSING_HYPHEN", "LanguageTool.EN.MISSING_TO_BEFORE_A_VERB", "LanguageTool.EN.NON_ANTI_JJ", "LanguageTool.EN.NOUN_VERB_CONFUSION", "LanguageTool.EN.NUMBERS_IN_WORDS", "LanguageTool.EN.ON_EXCEL", "LanguageTool.EN.OUTSIDE_OF", "LanguageTool.EN.PHRASE_REPETITION", "LanguageTool.EN.PLURAL_VERB_AFTER_THIS", "LanguageTool.EN.POSSESSIVE_APOSTROPHE", "LanguageTool.EN.PREPOSITION_VERB", "LanguageTool.EN.PRP_VBG", "LanguageTool.EN.RECOMMENDED_COMPOUNDS", "LanguageTool.EN.SENT_START_CONJUNCTIVE_LINKING_ADVERB_COMMA", "LanguageTool.EN.SETUP_VERB", "LanguageTool.EN.SOME_OF_THE", "LanguageTool.EN.SPLITTED", "LanguageTool.EN.THE_SUPERLATIVE", "LanguageTool.EN.THIS_NNS", "LanguageTool.EN.TO_NON_BASE", "LanguageTool.EN.UNLIKELY_OPENING_PUNCTUATION", "LanguageTool.EN.UP_TO_DATE_HYPHEN", "LanguageTool.EN.VERB_NOUN_CONFUSION", "LanguageTool.EN.WHETHER", "LanguageTool.ES.DIACRITICS_VERB_N_ADJ", "LanguageTool.ES.ES_SIMPLE_REPLACE", "LanguageTool.FR.A_INFINITIF", "LanguageTool.FR.ACCORD_SUJET_VERBE", "LanguageTool.FR.AGREEMENT_POSTPONED_ADJ", "LanguageTool.FR.D_N", "LanguageTool.FR.FLECHES", "LanguageTool.FR.FRENCH_WHITESPACE", "LanguageTool.FR.OE", "LanguageTool.FR.ON_VERBE", "LanguageTool.FR.PLACE_DE_LA_VIRGULE", "LanguageTool.FR.UPPERCASE_SENTENCE_START", "LanguageTool.FR.VIRG_NON_TROUVEE", "LanguageTool.IT.GR_04_002", "LanguageTool.PT.PT_BARBARISMS_REPLACE", "LanguageTool.PT.PT_WORDINESS_REPLACE", "LanguageTool.PT.VERB_COMMA_CONJUNCTION", "LanguageTool.RU.DotOrCase", "LanguageTool.RU.OPREDELENIA", "LanguageTool.RU.PREP_U_and_Noun", "LanguageTool.RU.UPPERCASE_SENTENCE_START", "LanguageTool.RU.Verb_and_Verb", "LanguageTool.RU.WHITESPACE_RULE", "LanguageTool.ZH.BU", "LanguageTool.ZH.wa5", "LanguageTool.ZH.wb4" ],
      "keymaps" : [ "Mac_OS_X_10.5+", "Default_for_GNOME", "Rider", "Eclipse", "Emacs", "Default_for_KDE", "Mac_OS_X", "ReSharper_OSX", "NetBeans_6.5", "Visual_Studio", "Rider_OSX", "TextMate", "Eclipse_(Mac_OS_X)", "ReSharper", "Xcode", "unknown", "custom", "Sublime_Text_(Mac_OS_X)", "Sublime_Text", "Default_for_XWin", "$default", "JBuilder", "VS_Code", "Visual_Studio_OSX", "Visual_Studio_2022", "Visual_Assist", "VSCode", "macOS_System_Shortcuts" ],
      "look_and_feel" : [ "Acme", "Apricode_Monokai", "Arc_Dark", "Arc_Dark_(Material)", "Arc_Dark_Contrast", "Arc_Theme", "Arc_Theme_-_Orange", "Arc_Theme_Dark", "Arc_Theme_Dark_-_Orange", "Astra_Dark", "AtomOneDarkByMayke", "Atom_One_Dark", "Atom_One_Dark_(Material)", "Atom_One_Dark_Contrast", "Atom_One_Light", "Atom_One_Light_(Material)", "Atom_One_Light_Contrast", "Aura", "Ayu_Mirage", "AzurLane:_Essex", "Bas_Tools_Black", "Bas_Tools_Dark", "Bas_Tools_White", "Base16_Monokai", "Base16_Tomorrow_Dark", "BattleField", "Blackbird", "BlendS:_Maika", "Blue_Dolphin", "Blue_Whale", "Breeze_Dark", "Bright_and_Sheen_Theme", "BunnySenpai:_Mai_Dark", "BunnySenpai:_Mai_Light", "Burnt", "Calm", "Carbon", "Cell_Dark_Theme", "Chicken", "Chuunibyou:_Takanashi_Rikka", "City_Pop", "Clean_Sheet", "Cobalt", "Cobalt9", "Cobalt_2", "Codely", "Codely_Blue", "Codely_Dark", "Codely_Light", "Coderpillr_Dusk", "CoffeeBean", "Construction_Paper", "Core", "Custom_Theme_(Material)", "Cute_Pink_Light", "Cyan_light", "Cyberpunk_Theme", "DDLC:_Monika_Dark", "DDLC:_Monika_Light", "DDLC:_Natsuki_Dark", "DDLC:_Natsuki_Light", "DDLC:_Sayori_Dark", "DDLC:_Sayori_Light", "DDLC:_Yuri_Dark", "DDLC:_Yuri_Light", "DM:_Kanna", "DM:_Tohru", "DR:_Mioda_Ibuki_Dark", "DR:_Mioda_Ibuki_Light", "DTWMMN:_Hayase_Nagatoro", "Darcula", "Darcula_(blacker)", "Darcula_Darker", "Darcula_Pitch_Black", "Darcula_Solid", "Darcula_Sombre", "Darcula_Sombre_(transparent_selection)", "Darcula_Sombre_(with_bright_borders)", "Darcula_Sombre_(with_dark_borders)", "Dark", "DarkCode", "DarkCode_Contrast", "DarkDark", "DarkTheme", "Dark_Candy", "Dark_Flat", "Dark_Orange", "Dark_purple", "Dark_ubuntu", "Deep_Ocean_Theme", "Dracula", "Dracula_(Material)", "Dracula_Colorful", "Dracula_Contrast", "DxD:_Rias:_Crimson", "DxD:_Rias:_Onyx", "Dysh_Unreal_Simple", "Dysh_Unreal_Simple_Vivid", "EVA:_Katsuragi_Misato", "EVA:_Rei", "Eclipse_Plus", "El_Chalten", "Elements", "Emerald", "Ender_Theme", "EroManga:_Sagiri", "Espresso_Light", "Espresso_Lightgram", "ExperimentalLight", "ExperimentalDark", "ExperimentalLightWithLightHeader", "Field_Lights", "FlatAndMinimalistic_-_dark", "FlatAndMinimalistic_-_gray", "FlatOcean", "Forest_Night", "Foundation_Dark", "Foundation_Light", "Franxx:_Zero_Two_Dark", "Franxx:_Zero_Two_Light", "FutureDiary:_Gasai_Yuno", "Galaxy", "Galizur", "Gate:_Rory_Mercury", "Gerry_Oceanic", "Gerry_Space", "Gerry_Violet", "Giraffe", "GitHub", "GitHub_(Material)", "GitHub_Contrast", "GitHub_Dark", "GitHub_Dark_(Material)", "GitHub_Dark_Contrast", "GitHub_Dark_Dimmed", "GitHub_Light", "Gloom", "Glowing_Darcula", "Godot_Theme", "Golden_Blue", "Gradianto_Dark_Fuchsia", "Gradianto_Deep_Ocean", "Gradianto_Midnight_Blue", "Gradianto_Nature_Green", "Gray", "Green_Haze", "Green_lite", "Greenly", "Gruvbox", "Gruvbox_Dark_Hard", "Gruvbox_Dark_Medium", "Gruvbox_Dark_Soft", "Gruvbox_Github", "Gruvbox_Light_Hard", "Gruvbox_Light_Medium", "Gruvbox_Light_Soft", "Gruvbox_Material", "Hack_The_Box", "Hacker_Theme", "Haikyu:_Hinata_Shoyo", "Halcyon", "Helsing", "Hiberbee_Dark", "High-Contrast-Theme", "High_contrast", "HyperTheme", "Iceberg", "InBedBy7", "IntelliJ", "IntelliJ_Light", "Interesting", "JahySama:_Jahy", "JavierSC_dark", "KCoroutine", "Kakegurui:_Jabami_Yumeko", "KillLaKill:_Ryuko_Dark", "KillLaKill:_Ryuko_Light", "KillLaKill:_Satsuki_Dark", "KillLaKill:_Satsuki_Light", "KonoSuba:_Aqua", "KonoSuba:_Darkness_Dark", "KonoSuba:_Darkness_Light", "KonoSuba:_Megumin", "Kromatic", "Kyoto", "LS:_Konata", "Light", "Light_Custom_Theme_(Material)", "Light_Flat", "Light_Owl", "Light_Owl_(Material)", "Light_Owl_Contrast", "Light_green", "Light_with_Light_Header", "Lotus_Dark", "Lotus_Light", "LoveLive:_Sonoda_Umi", "Lumio", "MacchuPicchu", "Material_Darker", "Material_Darker_Contrast", "Material_Deep_Ocean", "Material_Deep_Ocean_Contrast", "Material_Forest", "Material_Forest_Contrast", "Material_Lighter", "Material_Lighter_Contrast", "Material_Oceanic", "Material_Oceanic_Contrast", "Material_Palenight", "Material_Palenight_Contrast", "Material_Sandy_Beach", "Material_Sandy_Beach_Contrast", "Material_Sky_Blue", "Material_Sky_Blue_Contrast", "Material_Theme:_Default", "Material_Theme:_Lighter", "Material_Theme:_Night", "Material_Theme:_Ocean", "Material_Volcano", "Material_Volcano_Contrast", "Mayukai_Alucard", "Mayukai_Mirage", "Mayukai_Mono", "Mayukai_Reversal", "Monarcula", "Monarcula_Pro", "Monarcula_Soft", "Monocai", "Monogatari:_Hanekawa_Tsubasa", "Monokai_Pro", "Monokai_Pro_(Classic)", "Monokai_Pro_(Filter_Machine)", "Monokai_Pro_(Filter_Octagon)", "Monokai_Pro_(Filter_Ristretto)", "Monokai_Pro_(Filter_Spectrum)", "Monokai_Pro_(Material)", "Monokai_Pro_Contrast", "MonsterMusume:_Miia", "Moonlight", "Moonlight_(Material)", "Moonlight_Contrast", "Moto_Ducat", "MyGruvbox", "Napalmpapalam", "NekoPara:_Azuki", "NekoPara:_Chocola", "NekoPara:_Christmas_Chocola", "NekoPara:_Cinnamon", "NekoPara:_Coconut", "NekoPara:_Maple_Dark", "NekoPara:_Maple_Light", "NekoPara:_Shigure", "NekoPara:_Vanilla", "Nier:Automata_Theme", "Night_Owl", "Night_Owl_(Material)", "Night_Owl_Contrast", "Noctis", "Noctis_Azureus", "Noctis_Bordo", "Noctis_Sereno", "Noctis_Uva", "Noctis_Voila", "Nord", "NotReallyMDTheme", "OPM:_Genos", "Obsidian", "Obsidian_Bright", "Oceanic_Dark_Theme", "Oceanic_Primal", "OneDarkMonokai", "One_Dark", "One_Dark_Italic", "One_Dark_Vivid", "One_Dark_Vivid_Italic", "OreGairu:_Yukinoshita_Yukino", "OreImo:_Kirino", "Pink_as_Heck", "Polar", "Prpl", "Purple", "QQ:_Nakano_Miku", "QQ:_Nakano_Nino", "QQ:_Nakano_Yotsuba", "Railgun:_Misaka_Mikoto", "Re:Zero:_Beatrice", "Re:Zero:_Echidna", "Re:Zero:_Emilia_Dark", "Re:Zero:_Emilia_Light", "Re:Zero:_Ram", "Re:Zero:_Rem", "ReSharper_Dark", "ReSharper_Light", "Red", "Red2", "Rider_Dark", "Rider_Light", "Rider_Day", "Rider_Night", "Rider_Melon_Dark", "Rider_Melon_Light", "Roboticket_Light", "Romeo-Theme", "Rouge", "SAO:_Asuna_Dark", "SAO:_Asuna_Light", "SG:_Makise_Kurisu", "Sage", "Salmon", "Sepia", "ShadeSmear_Dark", "ShadeSmear_Light", "Shades_Of_Purple", "Shape", "ShieldHero:_Raphtalia", "Shokugeki:_Yukihira_Soma", "Slime:_Rimiru_Tempest", "Solarized_Dark", "Solarized_Dark_(Material)", "Solarized_Dark_Contrast", "Solarized_Light", "Solarized_Light_(Material)", "Solarized_Light_Contrast", "Solo_Coding", "SpaceDay", "Spacegray", "Spacemacs", "Starlight", "StarlightDark", "Sublime", "Super_Dark", "SynthWave_'84", "SynthWave_'84_(Material)", "SynthWave_'84_Contrast", "Synthwave_Blue", "Synthwave_Refined", "System", "Tanne", "The_Above_Dark", "The_Above_Light", "Trash_Panda_Theme", "Twitch_Dark_Theme", "TypeMoon:_Astolfo", "TypeMoon:_Gray", "TypeMoon:_Ishtar_Dark", "TypeMoon:_Ishtar_Light", "TypeMoon:_Tohsaka_Rin", "Ubuntu_Theme", "Universe", "Universe_Purple", "VSCode_Dark", "Visual_Assist_Dark", "Visual_Assist_Light", "Visual_Studio_2019_Dark", "Visual_Studio_Code_Dark_Plus", "Visual_Studio_Dark", "Visual_Studio_Light", "Vocaloid:_Hatsune_Miku", "VoidTheme", "VsCode_Monokai_HC", "Windows_10_Light", "Winter_Is_Coming", "Xcode-Dark", "Xcode_Dark", "Xcode_Light", "Yaru_Dark", "YuruCamp:_Nadeshiko", "YuruCamp:_Shima_Rin", "[Doki]_AzurLane:_Essex", "[Doki]_BlendS:_Maika", "[Doki]_BunnySenpai:_Mai_Dark", "[Doki]_BunnySenpai:_Mai_Light", "[Doki]_DDLC:_Monika_Dark", "[Doki]_DDLC:_Monika_Light", "[Doki]_DDLC:_Natsuki_Dark", "[Doki]_DDLC:_Natsuki_Light", "[Doki]_DDLC:_Sayori_Dark", "[Doki]_DDLC:_Sayori_Light", "[Doki]_DDLC:_Yuri_Dark", "[Doki]_DDLC:_Yuri_Light", "[Doki]_DM:_Kanna", "[Doki]_DM:_Tohru", "[Doki]_DR:_Mioda_Ibuki_Dark", "[Doki]_DR:_Mioda_Ibuki_Light", "[Doki]_DTWMMN:_Hayase_Nagatoro", "[Doki]_DxD:_Rias:_Crimson", "[Doki]_DxD:_Rias:_Onyx", "[Doki]_EVA:_Katsuragi_Misato", "[Doki]_EVA:_Rei", "[Doki]_EroManga:_Sagiri", "[Doki]_Franxx:_Zero_Two_Dark", "[Doki]_Franxx:_Zero_Two_Light", "[Doki]_FutureDiary:_Gasai_Yuno", "[Doki]_Gate:_Rory_Mercury", "[Doki]_JahySama:_Jahy", "[Doki]_Kakegurui:_Jabami_Yumeko", "[Doki]_KillLaKill:_Ryuko_Dark", "[Doki]_KillLaKill:_Ryuko_Light", "[Doki]_KillLaKill:_Satsuki_Dark", "[Doki]_KillLaKill:_Satsuki_Light", "[Doki]_KonoSuba:_Aqua", "[Doki]_KonoSuba:_Darkness_Dark", "a.onji", "ajaaibu", "asiimov", "celestial", "color_blind_theme", "dark-jeff", "darkerla", "deep-focus-theme", "flat", "foggy-night", "hibNet_Midnight_Blue", "jDark", "jake-theme", "macOS_Light", "madrid", "metalheart", "minimal", "naysayer88", "nevaTheme", "night-owl-native", "nightfall", "plaid", "qubTheme", "reykjavik", "shirotelin", "silkworm", "soft-charcoal", "spectre_theme", "subtle-hacker-theme", "theme-oldirony-dark", "theme_eclipse", "thursday", "vuesion-theme", "warm-night", "white-sand", "xndlnk-monokai", "ReSharperNight", "RiderMelonNight", "RiderNight", "VisualAssistNight", "VisualStudioNight", "JetBrainsHighContrastTheme" ],
      "os" : [ "Windows", "Mac", "Linux", "FreeBSD", "ChromeOS", "Solaris", "Other" ],
      "plugin_type" : [ "PLATFORM", "JB_BUNDLED", "JB_NOT_BUNDLED", "LISTED", "NOT_LISTED", "UNKNOWN" ],
      "python_packages" : [ "requests", "pytz", "numpy", "six", "python-dateutil", "certifi", "urllib3", "pandas", "idna", "chardet", "Pillow", "click", "cffi", "matplotlib", "cryptography", "pyparsing", "pytest", "Jinja2", "PyYAML", "Django", "redis", "scipy", "pycparser", "boto3", "attrs", "MarkupSafe", "gunicorn", "djangorestframework", "lxml", "packaging", "sqlparse", "tqdm", "Werkzeug", "psycopg2-binary", "Flask", "typing-extensions", "pyasn1", "beautifulsoup4", "openpyxl", "decorator", "wcwidth", "celery", "asgiref", "psycopg2", "SQLAlchemy", "itsdangerous", "protobuf", "xlrd", "future", "botocore", "jsonschema", "PyJWT", "scikit-learn", "colorama", "zipp", "jmespath", "pyasn1-modules", "importlib-metadata", "psutil", "python-dotenv", "django-cors-headers", "toml", "rsa", "oauthlib", "requests-oauthlib", "defusedxml", "s3transfer", "pyyaml", "django-filter", "py", "ipython", "cachetools", "wrapt", "docutils", "prompt-toolkit", "coverage", "appdirs", "tornado", "greenlet", "pluggy", "sentry-sdk", "Pygments", "cycler", "kombu", "pymongo", "torch", "webencodings", "simplejson", "google-auth", "PyMySQL", "aiohttp", "opencv-python", "pillow", "flake8", "billiard", "pickleshare", "selenium", "gevent", "paramiko", "mccabe", "amqp", "kiwisolver", "grpcio", "traitlets", "mysqlclient", "django", "et-xmlfile", "xlwt", "regex", "more-itertools", "mock", "httplib2", "setuptools", "vine", "pyrsistent", "backcall", "flask", "pexpect", "joblib", "pydantic", "jedi", "soupsieve", "uritemplate", "jinja2", "google-api-python-client", "bcrypt", "ptyprocess", "sqlalchemy", "parso", "django-extensions", "iniconfig", "xmltodict", "isort", "pyOpenSSL", "seaborn", "Markdown", "pycodestyle", "pylint", "pytest-cov", "alembic", "django-redis", "dnspython", "async-timeout", "elasticsearch", "msgpack", "django-storages", "black", "prometheus-client", "uvicorn", "filelock", "tzlocal", "Babel", "tensorflow", "bleach", "django-debug-toolbar", "html5lib", "zope.interface", "torchvision", "jdcal", "pycryptodome", "text-unidecode", "yarl", "networkx", "termcolor", "multidict", "XlsxWriter", "mypy-extensions", "marshmallow", "pyjwt", "pyzmq", "asn1crypto", "Mako", "h5py", "Flask-SQLAlchemy", "blinker", "google-auth-oauthlib", "tensorboard", "fastapi", "googleapis-common-protos", "requests-toolbelt", "reportlab", "websocket-client", "google-api-core", "tabulate", "entrypoints", "sklearn", "python-editor", "coreapi", "typed-ast", "google-auth-httplib2", "oauth2client", "mistune", "pycrypto", "pyflakes", "boto", "whitenoise", "lazy-object-proxy", "phonenumbers", "werkzeug", "virtualenv", "isodate", "pyspark", "charset-normalizer", "wheel", "jupyter", "keras", "pytorch", "scrapy", "lightgbm", "eli5", "theano", "nupic", "ramp", "pipenv", "bob", "pybrain", "caffe2", "chainer", "xgboost", "plotly", "pydot", "altair", "pycaret", "ipywidgets", "jax", "httpx", "wandb" ],
      "state" : [ "enabled", "disabled" ],
      "vcs" : [ "Git", "git", "SVN", "svn", "hg4idea", "Perforce", "perforce", "TFS", "tfs", "SourceSafe", "sourcesafe", "ClearCase", "clearcase", "CVS", "cvs", "TFVS", "tfvs", "VSS", "vss", "PlasticSCM" ]
    },
    "regexps" : {
      "count" : "\\d+K?M?\\+?",
      "date_YYYY-MM-DD_HH" : "^[12][0-9]{3}-(0[0-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])( ([0-1][0-9]|2[0-3]))?$",
      "date_short_hash" : "[0-9]{2}[01][0-9][0123][0-9]-(([0-9A-Fa-f]{12})|undefined)",
      "float" : "-?\\d+(\\.\\d+(E\\-?\\d+)?)?",
      "hash" : "([0-9A-Fa-f]{40,64})|undefined",
      "integer" : "-?\\d+(\\+)?",
      "kotlin_version" : "(\\d+-)?\\d\\.\\d\\.\\d{1,3}-(dev|eap|release)-(\\d+-)?(AppCode|CLion|IJ|Studio)[0-9\\-\\.]+",
      "license_metadata" : "[0-9]{10}[A-Z]{4}[-0-9X]{6}",
      "mcu_name" : "UNKNOWN|UPDATE_FAILED|(STM32[A-Z]{1,2}\\w+)",
      "series" : "^(?:AreaRange|Area|Bubble|Heatmap|Pie|Stock|Scatter|Line|Bar)+(?:_(?:AreaRange|Area|Bubble|Heatmap|Pie|Stock|Scatter|Line|Bar)+)*$",
      "short_hash" : "([0-9A-Fa-f]{12})|undefined",
      "version" : "Unknown|unknown.format|unknown|UNKNOWN|((\\d+\\.?)*\\d+)"
    }
  },
  "version" : "4214"
}